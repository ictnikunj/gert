{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-form-editor-modal/swag-cms-extensions-form-editor-modal.html.twig","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/component/sw-cms-detail/feature/quickview/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/component/sw-cms-section/sw-cms-section-actions/feature/scroll-navigation/sw-cms-section-actions.scss","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-form-editor/swag-cms-extensions-form-editor-settings/field-types/swag-cms-extensions-form-editor-settings-field-type-number/swag-cms-extensions-form-editor-settings-field-type-number.scss","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/app/component/swag-cms-extensions-page-scroll-behavior-config/swag-cms-extensions-page-scroll-behavior-config.scss","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-form-editor/swag-cms-extensions-form-editor-settings/field-types/swag-cms-extensions-form-editor-settings-field-type-select/swag-cms-extensions-form-editor-settings-field-type-select.html.twig","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-form-editor/swag-cms-extensions-form-editor-settings/swag-cms-extensions-form-editor-settings-group-field/swag-cms-extensions-form-editor-settings-group-field.scss","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/component/sw-cms-page-form/feature/scroll-navigation/sw-cms-page-form.scss","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-form-editor/swag-cms-extensions-form-editor-settings/field-types/swag-cms-extensions-form-editor-settings-field-type-email/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-form-editor/swag-cms-extensions-form-editor.scss","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-custom-form-element/swag-cms-extensions-custom-form-element-select/swag-cms-extensions-custom-form-element-select.html.twig","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-form-fields/swag-cms-extensions-form-fields.scss","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/component/sw-cms-detail/feature/block-rule/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/component/sw-cms-sidebar/sw-cms-sidebar-nav-element/sw-cms-sidebar-nav-element.scss","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/component/sw-cms-sidebar/sw-cms-sidebar-nav-element/sw-cms-sidebar-nav-element.html.twig","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/component/sw-cms-sidebar/sw-cms-sidebar.scss","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/blocks/custom-form/preview/swag-cms-extensions-preview-custom-form.scss","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-form-template-create-modal/swag-cms-extensions-form-template-create-modal.html.twig","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/blocks/custom-form/component/sw-cms-block-custom-form.html.twig","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-form-editor/swag-cms-extensions-form-editor-settings/field-types/swag-cms-extensions-form-editor-settings-field-type-textarea/swag-cms-extensions-form-editor-settings-field-type-textarea.html.twig","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-form-editor/swag-cms-extensions-form-editor-settings/swag-cms-extensions-form-editor-settings-group/swag-cms-extensions-form-editor-settings-group.html.twig","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/mixin/form-group-field-error.mixin.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-multi-email-field/swag-cms-extensions-multi-email-field.html.twig","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-form-editor/swag-cms-extensions-form-editor-settings/swag-cms-extensions-form-editor-settings-group-field/swag-cms-extensions-form-editor-settings-group-field.html.twig","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/app/component/swag-cms-extensions-block-config-rule/swag-cms-extensions-block-config-rule.html.twig","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-custom-form-element/swag-cms-extensions-custom-form-element-text/swag-cms-extensions-custom-form-element-text.html.twig","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-form-editor/swag-cms-extensions-form-editor-settings/field-types/swag-cms-extensions-form-editor-settings-field-type-checkbox/swag-cms-extensions-form-editor-settings-field-type-checkbox.html.twig","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/core/service/api/form-validation.service.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/init/service.init.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/init/translation.init.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/app/component/swag-cms-extensions-block-behavior-config/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/app/component/swag-cms-extensions-page-scroll-behavior-config/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/app/component/swag-cms-extensions-section-scroll-behavior-config/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/app/component/swag-cms-extensions-block-config-quickview/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/app/component/swag-cms-extensions-block-config-rule/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/app/component/swag-cms-extensions-block-rule-select/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/constant/swag-cms-extensions.constant.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/component/sw-cms-detail/feature/scroll-navigation/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/component/sw-cms-detail/feature/form-builder/state.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/component/sw-cms-detail/feature/form-builder/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/component/sw-cms-sidebar/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/component/sw-cms-sidebar/sw-cms-sidebar-nav-element/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/component/sw-cms-page-form/feature/scroll-navigation/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/component/sw-cms-page-form/feature/block-rule/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/component/sw-cms-section/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/component/sw-cms-section/sw-cms-section-actions/feature/block-rule/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/component/sw-cms-section/sw-cms-section-actions/feature/scroll-navigation/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/component/sw-cms-section/sw-cms-section-config/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/component/sw-cms-slot/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-form-template-modal/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-form-editor-modal/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-form-template-create-modal/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-custom-form-element/swag-cms-extensions-custom-form-element-checkbox/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-custom-form-element/swag-cms-extensions-custom-form-element-email/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-custom-form-element/swag-cms-extensions-custom-form-element-number/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-custom-form-element/swag-cms-extensions-custom-form-element-select/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-custom-form-element/swag-cms-extensions-custom-form-element-text/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-custom-form-element/swag-cms-extensions-custom-form-element-textarea/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-custom-form-element/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-form-fields/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-form-editor/swag-cms-extensions-form-editor-empty-state/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-form-editor/swag-cms-extensions-form-editor-group/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-form-editor/swag-cms-extensions-form-editor-group-field/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-form-editor/swag-cms-extensions-form-editor-settings/field-types/swag-cms-extensions-form-editor-settings-field-type-base/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-form-editor/swag-cms-extensions-form-editor-settings/field-types/swag-cms-extensions-form-editor-settings-field-type-header/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-form-editor/swag-cms-extensions-form-editor-settings/field-types/swag-cms-extensions-form-editor-settings-field-type-footer/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-form-editor/swag-cms-extensions-form-editor-settings/field-types/swag-cms-extensions-form-editor-settings-field-type-text/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-form-editor/swag-cms-extensions-form-editor-settings/field-types/swag-cms-extensions-form-editor-settings-field-type-number/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-form-editor/swag-cms-extensions-form-editor-settings/field-types/swag-cms-extensions-form-editor-settings-field-type-checkbox/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-form-editor/swag-cms-extensions-form-editor-settings/field-types/swag-cms-extensions-form-editor-settings-field-type-select/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-form-editor/swag-cms-extensions-form-editor-settings/field-types/swag-cms-extensions-form-editor-settings-field-type-textarea/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-form-editor/swag-cms-extensions-form-editor-settings/swag-cms-extensions-form-editor-settings-group/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-form-editor/swag-cms-extensions-form-editor-settings/swag-cms-extensions-form-editor-settings-group-field/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-form-editor/swag-cms-extensions-form-editor-settings/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-form-editor/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-multi-email-field/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/preview/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/config/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/blocks/custom-form/component/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/blocks/custom-form/preview/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/blocks/custom-form/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/component/sw-cms-page-form/feature/scroll-navigation/sw-cms-page-form.html.twig","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/config/swag-cms-extensions-custom-form-element-config.scss","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/preview/swag-cms-extensions-custom-form-element-preview.scss","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/acl/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-form-editor-modal/swag-cms-extensions-form-editor-modal.scss","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/app/component/swag-cms-extensions-block-behavior-config/swag-cms-extensions-block-behavior-config.html.twig","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-form-template-create-modal/swag-cms-extensions-form-template-create-modal.scss","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/component/sw-cms-section/sw-cms-section-actions/feature/scroll-navigation/sw-cms-section-actions.html.twig","webpack:///./node_modules/vue-style-loader/lib/listToStyles.js","webpack:///./node_modules/vue-style-loader/lib/addStylesClient.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/component/sw-cms-section/sw-cms-section.html.twig","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-custom-form-element/swag-cms-extensions-custom-form-element-checkbox/swag-cms-extensions-custom-form-element-checkbox.html.twig","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-form-editor/swag-cms-extensions-form-editor-settings/field-types/swag-cms-extensions-form-editor-settings-field-type-number/swag-cms-extensions-form-editor-settings-field-type-number.html.twig","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-form-editor/swag-cms-extensions-form-editor.html.twig","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-custom-form-element/swag-cms-extensions-custom-form-element.html.twig","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-custom-form-element/swag-cms-extensions-custom-form-element-textarea/swag-cms-extensions-custom-form-element-textarea.html.twig","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/preview/swag-cms-extensions-custom-form-element-preview.html.twig","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/component/sw-cms-page-form/feature/block-rule/sw-cms-page-form.scss","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/app/component/swag-cms-extensions-block-rule-select/swag-cms-extensions-block-rule-select.html.twig","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-form-editor/swag-cms-extensions-form-editor-settings/field-types/swag-cms-extensions-form-editor-settings-field-type-base/swag-cms-extensions-form-editor-settings-field-type-base.html.twig","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-form-editor/swag-cms-extensions-form-editor-settings/field-types/swag-cms-extensions-form-editor-settings-field-type-text/swag-cms-extensions-form-editor-settings-field-type-text.html.twig","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-form-editor/swag-cms-extensions-form-editor-group/swag-cms-extensions-form-editor-group.html.twig","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-form-editor/swag-cms-extensions-form-editor-group-field/swag-cms-extensions-form-editor-group-field.scss","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-form-fields/swag-cms-extensions-form-fields.html.twig","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/app/component/swag-cms-extensions-block-config-rule/swag-cms-extensions-block-config-rule.scss","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-form-editor/swag-cms-extensions-form-editor-settings/swag-cms-extensions-form-editor-settings-group/swag-cms-extensions-form-editor-settings-group.scss","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/component/sw-cms-sidebar/sw-cms-sidebar.html.twig","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-form-editor/swag-cms-extensions-form-editor-settings/field-types/swag-cms-extensions-form-editor-settings-field-type-header/swag-cms-extensions-form-editor-settings-field-type-header.html.twig","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-custom-form-element/swag-cms-extensions-custom-form-element-email/swag-cms-extensions-custom-form-element-email.html.twig","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/app/component/swag-cms-extensions-page-scroll-behavior-config/swag-cms-extensions-page-scroll-behavior-config.html.twig","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/component/sw-cms-page-form/feature/block-rule/sw-cms-page-form.html.twig","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-form-editor/swag-cms-extensions-form-editor-settings/swag-cms-extensions-form-editor-settings.scss","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-settings-rule/acl/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-form-editor/swag-cms-extensions-form-editor-empty-state/swag-cms-extensions-form-editor-empty-state.scss","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/component/sw-cms-slot/sw-cms-slot.html.twig","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/app/component/swag-cms-extensions-section-scroll-behavior-config/swag-cms-extensions-section-scroll-behavior-config.html.twig","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/component/sw-cms-section/sw-cms-section-actions/feature/block-rule/sw-cms-section-actions.html.twig","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/blocks/custom-form/preview/swag-cms-extensions-preview-custom-form.html.twig","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-form-editor/swag-cms-extensions-form-editor-group-field/swag-cms-extensions-form-editor-group-field.html.twig","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-form-editor/swag-cms-extensions-form-editor-empty-state/swag-cms-extensions-form-editor-empty-state.html.twig","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-form-template-modal/swag-cms-extensions-form-template-modal.html.twig","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-form-editor/swag-cms-extensions-form-editor-group/swag-cms-extensions-form-editor-group.scss","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/app/component/swag-cms-extensions-block-config-quickview/swag-cms-extensions-block-config-quickview.html.twig","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-form-editor/swag-cms-extensions-form-editor-settings/field-types/swag-cms-extensions-form-editor-settings-field-type-footer/swag-cms-extensions-form-editor-settings-field-type-footer.html.twig","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/component/sw-cms-section/sw-cms-section-config/sw-cms-section-config.html.twig","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-form-template-modal/swag-cms-extensions-form-template-modal.scss","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-custom-form-element/swag-cms-extensions-custom-form-element-number/swag-cms-extensions-custom-form-element-number.html.twig","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-form-editor/swag-cms-extensions-form-editor-settings/swag-cms-extensions-form-editor-settings.html.twig","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/app/component/swag-cms-extensions-section-scroll-behavior-config/swag-cms-extensions-section-scroll-behavior-config.scss","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-settings-rule/sw-settings-rule-detail-assignments/index.js","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/config/swag-cms-extensions-custom-form-element-config.html.twig","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/app/component/swag-cms-extensions-block-config-quickview/swag-cms-extensions-block-config-quickview.scss","webpack:////home/krispin/Projects/next-trunk/custom/plugins/SwagCmsExtensions/src/Resources/app/administration/src/extension/module/sw-cms/elements/custom-form/component/swag-cms-extensions-custom-form-element/swag-cms-extensions-custom-form-element.scss"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Component","Shopware","Feature","isActive","override","computed","loadPageCriteria","criteria","this","$super","getAssociation","addAssociation","content","locals","add","default","extend","inject","methods","cloneSlotsInBlock","block","newBlock","blockRule","extensions","swagCmsExtensionsBlockRule","undefined","newBlockRule","repositoryFactory","cmsBlockId","inverted","visibilityRuleId","Mixin","register","validateDuplicateTechnicalName","form","field","groups","some","group","fields","f","id","technicalName","State","commit","expression","error","Utils","createId","code","parameters","status","detail","ApiService","Classes","SwagCmsExtensionsFormValidationService","httpClient","loginService","apiEndpoint","headers","getBasicHeaders","Context","api","languageId","post","getApiBasePath","then","response","handleResponse","forms","initContainer","Application","getContainer","addServiceProvider","container","Locale","deDE","enGB","setReactive","view","template","model","prop","event","props","type","required","productRelatedBlocks","productRelatedSlots","blockIsProductRelated","slots","reduce","accumulator","slot","includes","quickviewRepository","quickviewExtensionDefined","swagCmsExtensionsQuickview","quickview","blockRuleFeatureActive","quickviewFeatureActive","quickviewActiveChanged","state","page","data","defaults","active","duration","easing","easingDegree","bouncy","easings","scrollNavigationPageSettingsRepository","scrollNavigationPageSettingsDefined","swagCmsExtensionsScrollNavigationPageSettings","scrollNavigationPageSettings","pageHasNavigationPoints","sections","section","scrollNavigation","swagCmsExtensionsScrollNavigation","smoothScrollingActive","easingTypes","map","label","$tc","easingDegreeDisabled","created","createdComponent","setDefaults","entries","forEach","defaultValue","pageSettingsActiveChanged","$emit","mapPropertyErrors","getComponentHelper","scrollNavigationRepository","scrollNavigationExtensionDefined","scrollNavigationActiveChanged","Criteria","Data","blockRuleRepository","blockRuleExtensionDefined","rule","ruleFilter","onInvertedChange","onSaveRule","ruleId","onDismissRule","dismissSelection","ERRORS","freeze","SECTION","EMPTY_FIELD_WHEN_ACTIVE","FIELD_TOO_LONG","DUPLICATE_VALUE","Filter","ShopwareError","cloneDeep","occuredDisplayNames","onSave","validateSections","Promise","reject","prepareSectionClone","newSection","copySuffix","newScrollNavigation","scrollNavigationClone","displayName","assign","Array","from","validateSection","currentScrollNavigation","getScrollNavigation","currentName","trim","nameTooLong","length","commitApiError","onInvalidLength","onInvalidDisplayName","push","message","onInvalidInput","truncatedName","getByName","selectSection","createNotificationError","dispatch","$parent","EntityCollection","duplicateField","groupId","fieldRepository","context","duplicatedField","fieldKeysBlocklist","position","keys","sanitizePositions","fieldCollection","movedPosition","namespaced","activeItem","getters","templateName","formRepository","groupRepository","formTemplate","isTemplate","title","successMessage","receivers","mailTemplateId","g","width","placeholder","errorMessage","config","mutations","setForm","setFormProperty","setActiveItem","setFieldProperty","fieldId","find","formGroup","setFieldConfigProperty","translated","setFieldType","changeFieldSelectConfig","setGroupProperty","resetState","addField","repository","prefix","overallFieldCount","acc","addGroup","first","moveItem","itemId","callback","duplicateGroup","originalGroup","duplicateCollection","last","entity","deleteGroup","groupToDelete","nextGroup","getAt","remove","deleteField","fieldToRemove","actions","groupPrefix","fieldPrefix","setItemPosition","to","callbackUp","callbackDown","steps","moveFieldToGroup","fromGroupId","toGroupId","originalFields","originalField","toggleActiveOnFieldMove","beforeCreate","list","indexOf","unregisterModule","registerModule","formState","blocks","swagCmsExtensionsForm","validateAllForms","catch","sectionHeaderWrapperClass","sectionHeaderWrapperClasses","scrollNavigationFeatureActive","watch","getScrollNavigationBySection","scrollNavigationIsActive","navigatorSectionHeaderWrapperClass","scrollNavigationAnchorTooltip","hasBlockRule","ruleTooltip","blockRuleNavigatorClasses","getScrollNavigationLabel","sectionHasRulesOnAllBlocks","every","hasRulesOnAllBlocks","rulesOnAllBlocksTooltip","scrollNavigationPointTooltip","tooltipPrefix","showFormCreationModal","formTemplateId","mailTemplateRepository","isElementTypeCustomForm","element","modalTitle","primaryActionText","slotHasFormExtension","setIds","search","result","isDragSorted","swapped","isNew","onSettingsButtonClick","onPrimaryConfirm","isFirstEdit","getDefaultMailTemplateId","addSorting","sort","onCloseSettingsModal","hasChanges","onSelectElement","elementType","$nextTick","onSettingsModalClose","blockId","onCloseEditFormModal","showFormEditorModal","onCloseCreateFormModal","persist","$set","onFormTemplateIdChange","addFilter","multi","equals","total","mixins","displayModal","formTemplates","isLoading","limit","searchTerm","formTemplateRepository","columns","inlineEdit","align","getList","getListCriteria","params","getMainListingParams","term","sortDirection","naturalSorting","searchResult","onModalClose","onInlineEditSave","promise","onRename","item","$refs","templateEntityListing","currentInlineEditId","isInlineEditActive","ChangesetGenerator","ErrorResolver","mapState","showCreateTemplateModal","initiallyValidated","set","newTechnicalName","newMailTemplateId","newTitle","newSuccessMessage","newReceivers","mailTemplateCriteria","fieldTabHasError","optionsTabHasError","formTechnicalNameError","formTitleError","formConfirmationTextError","formReceiversError","formMailTemplateIdError","isArray","handler","validateForm","handleErrorResponse","finally","immediate","deep","onCreateTemplate","onCreateTemplateModalClose","onChangeTechnicalName","newValue","match","replaceAll","generator","changes","generate","translations","Defaults","systemLanguageId","cmsPageState","currentPage","resolve","resolver","handleWriteErrors","showOverwriteWarning","showSaveSuccess","showOverwriteSelect","showOverwriteConfirmation","wasOverwrite","overwriteId","primaryConfirmLabel","templateCriteria","overwriteConfirmationText","onTemplateNameChange","delete","save","onOverwriteSelectChange","openOverwriteContent","Number","loadedGroups","showPreview","slotHasGroups","loadForm","getFieldClass","getFieldComponent","componentName","getComponentRegistry","has","formHasGroups","setFirstGroupAsActiveItem","onStartEditor","onGroupAdd","groupCount","groupHasError","formGroupRepository","formFieldRepository","groupDragData","delay","dragGroup","onDragEnter","onGroupDragSort","onDrop","onGroupDragStop","groupDropData","onAddField","onTitleClick","onMoveUp","lowerPositionValue","onMoveDown","raisePositionValue","onDuplicate","onDelete","fieldIds","errors","selfLink","dragData","dropData","validDrop","String","showMoveFieldToGroupModal","moveToGroupId","fieldHasError","moveToGroups","filter","fieldDragData","onFieldDragSort","onFieldDragStop","fieldDropData","onEdit","onMoveToGroupModalOpen","onMoveToGroupModalClose","newLabel","newType","newWidth","types","widths","fieldTechnicalNameError","_isNew","onTechnicalNameChange","newRequired","newErrorMessage","newPlaceholder","min","newMin","max","newMax","step","newStep","newDefault","values","options","newOptions","Set","newEntity","modes","availableEntities","updateMode","fieldConfigOptionsError","onModeChange","onCustomOptionsChange","rows","newRows","scalable","newScalable","rowsOptions","displayHeader","fieldComponentName","newItem","oldItem","showGroupSettings","getEntityName","addOnKey","mailPattern","performAddTag","disabled","noTriggerKey","newTagName","blurInput","setFocus","fakeEvent","Event","templateId","showFormTemplateModal","formTemplateCriteria","initElementConfig","closeFormTemplateModal","openFormTemplateModal","onTemplateUpdated","Service","registerCmsElement","category","component","configComponent","previewComponent","defaultConfig","source","registerCmsBlock","marginBottom","marginTop","marginLeft","marginRight","sizingMode","addPrivilegeMappingEntry","parent","roles","viewer","privileges","dependencies","editor","creator","deleter","listToStyles","parentId","styles","newStyles","part","css","media","sourceMap","parts","hasDocument","document","DEBUG","Error","stylesInDom","head","getElementsByTagName","singletonElement","singletonCounter","isProduction","noop","ssrIdKey","isOldIE","navigator","test","userAgent","toLowerCase","addStylesClient","_isProduction","_options","addStylesToDom","newList","mayRemove","domStyle","refs","j","addStyle","createStyleElement","styleElement","createElement","appendChild","obj","update","querySelector","parentNode","removeChild","styleIndex","applyToSingletonTag","applyToTag","newObj","textStore","replaceText","index","replacement","Boolean","join","styleSheet","cssText","cssNode","createTextNode","childNodes","insertBefore","setAttribute","ssrId","sources","btoa","unescape","encodeURIComponent","JSON","stringify","firstChild","associationEntitiesConfig","getRuleAssignmentConfiguration","swagCmsExtensionsRuleEntityConfig","notAssignedDataTotal","allowAdd","entityName","setLimit","associationLimit","detailRoute","gridColumns","rawData","sortable","allowEdit","routerLink","deleteContext","column","getRouterLink"],"mappings":"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","file":"static/js/swag-cms-extensions.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/bundles/swagcmsextensions/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"JC3F\");\n","module.exports = \"{% block swag_cms_extensions_form_editor_modal %}\\n    <div class=\\\"swag-cms-extensions-form-editor-modal\\\">\\n        <sw-modal v-if=\\\"displayModal\\\"\\n                  class=\\\"swag-cms-extensions-form-editor-modal\\\"\\n                  :title=\\\"$tc('swag-cms-extensions.sw-cms.elements.custom-form.editor.title')\\\"\\n                  variant=\\\"large\\\"\\n                  @modal-close=\\\"onModalClose(false)\\\">\\n\\n            {% block swag_cms_extensions_form_editor_modal_content %}\\n                {% block swag_cms_extensions_form_editor_modal_content_tabs %}\\n                    <sw-tabs defaultItem=\\\"options\\\">\\n                        <template #default=\\\"{ active }\\\">\\n\\n                            {% block swag_cms_extensions_form_editor_modal_content_tabs_item_options %}\\n                                <sw-tabs-item\\n                                    :activeTab=\\\"active\\\"\\n                                    :title=\\\"$tc('swag-cms-extensions.sw-cms.elements.custom-form.editor.tabs.options.tabTitle')\\\"\\n                                    :hasError=\\\"optionsTabHasError\\\"\\n                                    name=\\\"options\\\">\\n                                    {{ $tc('swag-cms-extensions.sw-cms.elements.custom-form.editor.tabs.options.tabTitle') }}\\n                                </sw-tabs-item>\\n                            {% endblock %}\\n\\n                            {% block swag_cms_extensions_form_editor_modal_content_tabs_item_fields %}\\n                                <sw-tabs-item\\n                                    :activeTab=\\\"active\\\"\\n                                    :title=\\\"$tc('swag-cms-extensions.sw-cms.elements.custom-form.editor.tabs.fields.tabTitle')\\\"\\n                                    :hasError=\\\"fieldTabHasError\\\"\\n                                    name=\\\"fields\\\">\\n                                    {{ $tc('swag-cms-extensions.sw-cms.elements.custom-form.editor.tabs.fields.tabTitle') }}\\n                                </sw-tabs-item>\\n                            {% endblock %}\\n\\n                        </template>\\n\\n                        <template #content=\\\"{ active }\\\">\\n                            <template v-if=\\\"active === 'options'\\\">\\n\\n                                {% block swag_cms_extensions_form_editor_modal_content_tabs_item_options_content %}\\n                                    {% block swag_cms_extensions_form_editor_modal_content_tabs_item_options_content_technical_name %}\\n                                        <sw-text-field v-model=\\\"technicalName\\\"\\n                                                       :label=\\\"$tc('swag-cms-extensions.sw-cms.elements.custom-form.editor.tabs.options.internalNameLabel')\\\"\\n                                                       :error=\\\"formTechnicalNameError\\\"\\n                                                       @change=\\\"onChangeTechnicalName\\\"\\n                                                       required>\\n                                        </sw-text-field>\\n                                    {% endblock %}\\n\\n                                    {% block swag_cms_extensions_form_editor_modal_content_tabs_item_options_content_title %}\\n                                        <sw-text-field v-model=\\\"title\\\"\\n                                                       :label=\\\"$tc('swag-cms-extensions.sw-cms.elements.custom-form.editor.tabs.options.headlineLabel')\\\"\\n                                                       :error=\\\"formTitleError\\\">\\n                                        </sw-text-field>\\n                                    {% endblock %}\\n\\n                                    {% block swag_cms_extensions_form_editor_modal_content_tabs_item_options_content_success_message %}\\n                                        <sw-textarea-field v-model=\\\"successMessage\\\"\\n                                                           :label=\\\"$tc('swag-cms-extensions.sw-cms.elements.custom-form.editor.tabs.options.confirmationTextLabel')\\\"\\n                                                           :error=\\\"formConfirmationTextError\\\">\\n                                        </sw-textarea-field>\\n                                    {% endblock %}\\n\\n                                    {% block swag_cms_extensions_form_editor_modal_content_tabs_item_options_content_mail_receivers %}\\n                                        <swag-cms-extensions-multi-email-field\\n                                                v-model=\\\"receivers\\\"\\n                                                :label=\\\"$tc('sw-cms.elements.form.config.label.receiverEmail')\\\"\\n                                                :error=\\\"formReceiversError\\\"\\n                                                name=\\\"mailReceiver\\\"\\n                                                placeholder=\\\"john@doe.com\\\">\\n                                        </swag-cms-extensions-multi-email-field>\\n                                    {% endblock %}\\n\\n                                    {% block swag_cms_extensions_form_editor_modal_content_tabs_item_options_content_mail_template %}\\n                                        <sw-entity-single-select\\n                                                v-model=\\\"mailTemplateId\\\"\\n                                                entity=\\\"mail_template\\\"\\n                                                :criteria=\\\"mailTemplateCriteria\\\"\\n                                                :label=\\\"$tc('swag-cms-extensions.sw-cms.elements.custom-form.editor.tabs.options.mailTemplateLabel')\\\"\\n                                                :error=\\\"formMailTemplateIdError\\\"\\n                                                valueProperty=\\\"title\\\"\\n                                                labelProperty=\\\"description\\\"\\n                                                required>\\n\\n                                            {% block swag_cms_extensions_form_editor_modal_content_tabs_item_options_content_mail_template_selection %}\\n                                                <template #selection-label-property=\\\"{ item }\\\">\\n                                                    <strong>{{ item.translated.description }}</strong>\\n                                                    <template v-if=\\\"item.translated.description\\\">-</template>\\n                                                    {{ item.mailTemplateType.translated.name }}\\n                                                </template>\\n                                            {% endblock %}\\n\\n                                            {% block swag_cms_extensions_form_editor_modal_content_tabs_item_options_content_mail_template_result %}\\n                                                <template #result-label-property=\\\"{ item, highlightSearchTerm, labelProperty, searchTerm }\\\">\\n                                                    <strong>\\n                                                        <sw-highlight-text\\n                                                                :text=\\\"item.translated.description\\\"\\n                                                                :searchTerm=\\\"searchTerm\\\">\\n                                                        </sw-highlight-text>\\n                                                    </strong>\\n                                                    {{ item.mailTemplateType.translated.name }}\\n                                                </template>\\n                                            {% endblock %}\\n                                        </sw-entity-single-select>\\n                                    {% endblock %}\\n\\n                                {% endblock %}\\n\\n                            </template>\\n\\n                            <template v-else-if=\\\"active === 'fields'\\\">\\n\\n                                {% block swag_cms_extensions_form_editor_modal_content_tabs_item_fields_content %}\\n                                    {% block swag_cms_extensions_form_editor_modal_content_tabs_item_fields_content_fields %}\\n                                        <swag-cms-extensions-form-fields></swag-cms-extensions-form-fields>\\n                                    {% endblock %}\\n                                {% endblock %}\\n\\n                            </template>\\n                        </template>\\n                    </sw-tabs>\\n                {% endblock %}\\n            {% endblock %}\\n\\n            {% block swag_cms_extensions_form_editor_modal_footer %}\\n                <template #modal-footer>\\n\\n                    {% block swag_cms_extensions_form_editor_modal_footer_template_button %}\\n                        <sw-button variant=\\\"ghost\\\"\\n                                   size=\\\"small\\\"\\n                                   @click=\\\"onCreateTemplate\\\">\\n\\n                            {% block swag_cms_extensions_form_editor_modal_footer_template_button_text %}\\n                                {{ $tc('swag-cms-extensions.sw-cms.elements.custom-form.editor.footer.createTemplateButton') }}\\n                            {% endblock %}\\n\\n                        </sw-button>\\n                    {% endblock %}\\n\\n\\n                    {% block swag_cms_extensions_form_editor_modal_footer_close_button %}\\n                        <sw-button variant=\\\"primary\\\"\\n                                   size=\\\"small\\\"\\n                                   @click=\\\"onModalClose(true)\\\">\\n\\n                            {% block swag_cms_extensions_form_editor_modal_footer_close_button_text %}\\n                                {{ $tc('sw-cms.detail.label.buttonElementSettingsConfirm') }}\\n                            {% endblock %}\\n\\n                        </sw-button>\\n                    {% endblock %}\\n\\n                </template>\\n            {% endblock %}\\n\\n        </sw-modal>\\n\\n        {% block swag_cms_extensions_form_template_create_modal %}\\n            <swag-cms-extensions-form-template-create-modal\\n                    v-if=\\\"showCreateTemplateModal\\\"\\n                    @modal-close=\\\"onCreateTemplateModalClose\\\">\\n            </swag-cms-extensions-form-template-create-modal>\\n        {% endblock %}\\n\\n    </div>\\n{% endblock %}\\n\";","const { Component } = Shopware;\n\nif (Shopware.Feature.isActive('FEATURE_SWAGCMSEXTENSIONS_1')) {\n    Component.override('sw-cms-detail', {\n\n        computed: {\n            loadPageCriteria() {\n                const criteria = this.$super('loadPageCriteria');\n\n                criteria\n                    .getAssociation('sections')\n                    .getAssociation('blocks')\n                    .addAssociation('swagCmsExtensionsQuickview');\n\n                return criteria;\n            },\n        },\n    });\n}\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./sw-cms-section-actions.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"2d0e3b13\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./swag-cms-extensions-form-editor-settings-field-type-number.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"1163c264\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./swag-cms-extensions-page-scroll-behavior-config.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"9b352de0\", content, true, {});","module.exports = \"{% block swag_cms_extensions_form_editor_settings_field_type_base %}\\n    <div class=\\\"swag-cms-extensions-form-editor-settings-field-type-select\\\">\\n\\n        {% block swag_cms_extensions_form_editor_settings_field_type_select_mode %}\\n            <sw-single-select v-model=\\\"mode\\\"\\n                              :options=\\\"modes\\\"\\n                              size=\\\"medium\\\"\\n                              :label=\\\"$tc('swag-cms-extensions.sw-cms.components.form-editor.settings-field.modeFieldLabel')\\\"\\n                              required\\n                              @change=\\\"onModeChange\\\">\\n            </sw-single-select>\\n        {% endblock %}\\n\\n        {% block swag_cms_extensions_form_editor_settings_field_type_select_entity %}\\n            <sw-single-select v-if=\\\"mode === 'entity'\\\"\\n                              v-model=\\\"entity\\\"\\n                              :options=\\\"availableEntities\\\"\\n                              :label=\\\"$tc('swag-cms-extensions.sw-cms.components.form-editor.settings-field.entityFieldLabel')\\\"\\n                              size=\\\"medium\\\"\\n                              required>\\n            </sw-single-select>\\n        {% endblock %}\\n\\n        {% block swag_cms_extensions_form_editor_settings_field_type_select_options %}\\n            <sw-tagged-field v-else\\n                             v-model=\\\"options\\\"\\n                             :label=\\\"$tc('swag-cms-extensions.sw-cms.components.form-editor.settings-field.optionsFieldLabel')\\\"\\n                             :error=\\\"fieldConfigOptionsError\\\"\\n                             size=\\\"medium\\\"\\n                             required\\n                             @change=\\\"onCustomOptionsChange\\\">\\n            </sw-tagged-field>\\n        {% endblock %}\\n\\n    </div>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./swag-cms-extensions-form-editor-settings-group-field.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"938d385e\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./sw-cms-page-form.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"afba69cc\", content, true, {});","const { Component } = Shopware;\n\nComponent.extend('swag-cms-extensions-form-editor-settings-field-type-email',\n    'swag-cms-extensions-form-editor-settings-field-type-text',\n    {\n        name: 'swag-cms-extensions-form-editor-settings-field-type-email',\n    });\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./swag-cms-extensions-form-editor.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"4eac1d1c\", content, true, {});","module.exports = \"{% block swag_cms_extensions_form_element_select %}\\n    <sw-select-field :label=\\\"field.translated ? field.translated.label : field.label\\\"\\n                     :required=\\\"field.required\\\">\\n        <option value=\\\"\\\"\\n                :disabled=\\\"field.required\\\"\\n                selected>\\n            {{ field.translated ? field.translated.placeholder : field.placeholder }}\\n        </option>\\n    </sw-select-field>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./swag-cms-extensions-form-fields.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"53095f0e\", content, true, {});","const { Component } = Shopware;\n\nif (Shopware.Feature.isActive('FEATURE_SWAGCMSEXTENSIONS_8')) {\n    Component.override('sw-cms-detail', {\n        inject: [\n            'repositoryFactory',\n        ],\n\n        computed: {\n            loadPageCriteria() {\n                const criteria = this.$super('loadPageCriteria');\n\n                criteria\n                    .getAssociation('sections')\n                    .getAssociation('blocks')\n                    .addAssociation('swagCmsExtensionsBlockRule');\n\n                return criteria;\n            },\n        },\n\n        methods: {\n            cloneSlotsInBlock(block, newBlock) {\n                const blockRule = block.extensions.swagCmsExtensionsBlockRule;\n                if (blockRule === undefined) {\n                    this.$super('cloneSlotsInBlock', block, newBlock);\n                    return;\n                }\n\n                const blockRuleRepository = this.repositoryFactory.create('swag_cms_extensions_block_rule');\n                const newBlockRule = blockRuleRepository.create();\n\n                newBlockRule.cmsBlockId = blockRule.cmsBlockId;\n                newBlockRule.inverted = blockRule.inverted;\n                newBlockRule.visibilityRuleId = blockRule.visibilityRuleId;\n\n                newBlock.extensions.swagCmsExtensionsBlockRule = newBlockRule;\n\n                this.$super('cloneSlotsInBlock', block, newBlock);\n            },\n        },\n    });\n}\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./sw-cms-sidebar-nav-element.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"53145f64\", content, true, {});","module.exports = \"{% block sw_cms_sidebar_navigator_element %}\\n    <div :class=\\\"blockRuleNavigatorClasses\\\">\\n        {% parent %}\\n    </div>\\n{% endblock %}\\n\\n{% block sw_cms_sidebar_sidebar_navigator_element_duplicate %}\\n    {% block sw_cms_sidebar_sidebar_navigator_element_block_rule %}\\n        <div v-if=\\\"hasBlockRule\\\"\\n             v-tooltip=\\\"ruleTooltip\\\"\\n             class=\\\"block-rule-navigator-element__has-rule\\\">\\n            <sw-icon name=\\\"default-symbol-rule\\\" size=\\\"16\\\"></sw-icon>\\n        </div>\\n    {% endblock %}\\n\\n    {% block sw_cms_sidebar_sidebar_navigator_element_block_rule_duplicate_button %}\\n        <div v-if=\\\"block.type !== 'custom-form'\\\">\\n            {% parent %}\\n        </div>\\n    {% endblock %}\\n\\n    {% block sw_cms_sidebar_sidebar_navigator_element_block_rule_duplicate_dummy %}\\n        <div v-else class=\\\"sw-cms-sidebar-nav-element__button-dummy\\\" />\\n    {% endblock %}\\n{% endblock %}\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./sw-cms-sidebar.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"9bdf43b0\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./swag-cms-extensions-preview-custom-form.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"742e6e20\", content, true, {});","module.exports = \"{% block swag_cms_extensions_form_template_create_modal %}\\n    <sw-modal class=\\\"swag-cms-extensions-form-template-create-modal\\\"\\n              :class=\\\"{ 'is-success': showSaveSuccess }\\\"\\n              :title=\\\"modalTitle\\\"\\n              variant=\\\"small\\\"\\n              @modal-close=\\\"onModalClose\\\">\\n\\n        {% block swag_cms_extensions_form_template_create_modal_content %}\\n            {% block swag_cms_extensions_form_template_create_modal_content_save_success %}\\n                <template v-if=\\\"showSaveSuccess\\\">\\n\\n                    {% block swag_cms_extensions_form_template_create_modal_content_save_success_bubble %}\\n                        <span class=\\\"sw-first-run-wizard-finish__bubble\\\">\\n                            <sw-icon class=\\\"sw-first-run-wizard-finish__icon\\\"\\n                                     name=\\\"small-default-checkmark-line-medium\\\"\\n                                     size=\\\"42px\\\"\\n                                     small>\\n                            </sw-icon>\\n                        </span>\\n                    {% endblock %}\\n\\n                    {% block swag_cms_extensions_form_template_create_modal_content_save_success_message %}\\n                        <p class=\\\"message-success\\\">{{ successMessage }}</p>\\n                    {% endblock %}\\n\\n                </template>\\n            {% endblock %}\\n\\n            {% block swag_cms_extensions_form_template_create_modal_content_overwrite_select %}\\n                <sw-entity-single-select v-else-if=\\\"showOverwriteSelect\\\"\\n                                         v-model=\\\"overwriteId\\\"\\n                                         :label=\\\"$tc('swag-cms-extensions.sw-cms.elements.custom-form.createTemplateModal.overwriteSelectLabel')\\\"\\n                                         entity=\\\"swag_cms_extensions_form\\\"\\n                                         labelProperty=\\\"technicalName\\\"\\n                                         :criteria=\\\"templateCriteria\\\"\\n                                         @change=\\\"onOverwriteSelectChange\\\">\\n                </sw-entity-single-select>\\n            {% endblock %}\\n\\n            {% block swag_cms_extensions_form_template_create_modal_content_overwrite_confirmation %}\\n                <div v-else-if=\\\"showOverwriteConfirmation\\\"\\n                     class=\\\"swag-cms-extensions-form-template-create-modal__confrimation-text-container\\\">\\n                    <p v-html=\\\"overwriteConfirmationText\\\"\\n                       class=\\\"swag-cms-extensions-form-template-create-modal__confrimation-text\\\">\\n                    </p>\\n                </div>\\n            {% endblock %}\\n\\n            {% block swag_cms_extensions_form_template_create_modal_content_default %}\\n                <template v-else>\\n\\n                    {% block swag_cms_extensions_form_template_create_modal_content_default_template_name %}\\n                        <sw-text-field v-model=\\\"templateName\\\"\\n                                       :label=\\\"$tc('swag-cms-extensions.sw-cms.elements.custom-form.createTemplateModal.templateNameLabel')\\\"\\n                                       :placeholder=\\\"$tc('swag-cms-extensions.sw-cms.elements.custom-form.createTemplateModal.placeholder')\\\"\\n                                       @input=\\\"onTemplateNameChange\\\">\\n                        </sw-text-field>\\n                    {% endblock %}\\n\\n                    {% block swag_cms_extensions_form_template_create_modal_content_default_overwrite_warning %}\\n                        <sw-alert v-if=\\\"showOverwriteWarning\\\"\\n                                  variant=\\\"warning\\\">\\n                            {{ $tc('swag-cms-extensions.sw-cms.elements.custom-form.createTemplateModal.overwriteWarningText') }}\\n                        </sw-alert>\\n                    {% endblock %}\\n\\n                    {% block swag_cms_extensions_form_template_create_modal_content_default_overwrite_select_link %}\\n                        <a v-else\\n                           class=\\\"swag-cms-extensions-form-template-create-modal__link\\\"\\n                           @click=\\\"openOverwriteContent\\\">\\n                            {{ $tc('swag-cms-extensions.sw-cms.elements.custom-form.createTemplateModal.overwriteLinkText') }}\\n\\n                                <sw-icon name=\\\"default-arrow-simple-right\\\"\\n                                         :small=\\\"true\\\">\\n                                </sw-icon>\\n\\n                        </a>\\n                    {% endblock %}\\n\\n                </template>\\n            {% endblock %}\\n        {% endblock %}\\n\\n        {% block swag_cms_extensions_form_template_create_modal_footer %}\\n            <template #modal-footer>\\n\\n                {% block swag_cms_extensions_form_template_create_modal_footer_ghost_button %}\\n                    <sw-button v-if=\\\"!showSaveSuccess\\\"\\n                               size=\\\"small\\\"\\n                               variant=\\\"ghost\\\"\\n                               @click=\\\"onModalClose\\\">\\n\\n                        {% block swag_cms_extensions_form_template_create_modal_footer_ghost_button_text %}\\n                            {{ $tc('global.default.cancel') }}\\n                        {% endblock %}\\n\\n                    </sw-button>\\n                {% endblock %}\\n\\n\\n                {% block swag_cms_extensions_form_template_create_modal_footer_primary_button %}\\n                    <sw-button variant=\\\"primary\\\"\\n                               size=\\\"small\\\"\\n                               :disabled=\\\"!templateName.length\\\"\\n                               @click=\\\"onPrimaryConfirm\\\">\\n\\n                        {% block swag_cms_extensions_form_template_create_modal_footer_primary_button_text %}\\n                            {{ primaryConfirmLabel }}\\n                        {% endblock %}\\n\\n                    </sw-button>\\n                {% endblock %}\\n\\n            </template>\\n        {% endblock %}\\n\\n    </sw-modal>\\n\\n{% endblock %}\\n\";","module.exports = \"{% block swag_cms_extensions_block_custom_form %}\\n    <div class=\\\"sw-cms-block-custom-form\\\">\\n        <slot name=\\\"content\\\"></slot>\\n    </div>\\n{% endblock %}\\n\";","module.exports = \"{% block swag_cms_extensions_form_editor_settings_field_type_base %}\\n    <div class=\\\"swag-cms-extensions-form-editor-settings-field-type-textarea\\\">\\n\\n        {% block swag_cms_extensions_form_editor_settings_field_type_textarea_rows %}\\n            <sw-single-select v-model=\\\"rows\\\"\\n                              :options=\\\"rowsOptions\\\"\\n                              :label=\\\"$tc('swag-cms-extensions.sw-cms.components.form-editor.settings-field.rowsFieldLabel')\\\"\\n                              size=\\\"medium\\\">\\n            </sw-single-select>\\n        {% endblock %}\\n\\n        {% block swag_cms_extensions_form_editor_settings_field_type_textarea_scalable %}\\n            <sw-switch-field v-model=\\\"scalable\\\"\\n                             :label=\\\"$tc('swag-cms-extensions.sw-cms.components.form-editor.settings-field.scalableFieldLabel')\\\"\\n                             size=\\\"medium\\\">\\n            </sw-switch-field>\\n        {% endblock %}\\n\\n        {% parent %}\\n\\n    </div>\\n{% endblock %}\\n\";","module.exports = \"{% block swag_cms_extensions_form_editor_settings_group %}\\n    <div class=\\\"swag-cms-extensions-form-editor-settings-group\\\">\\n\\n        {% block swag_cms_extensions_form_editor_settings_group_content %}\\n            {% block swag_cms_extensions_form_editor_settings_group_content_technical_name %}\\n                <sw-text-field v-model=\\\"group.technicalName\\\"\\n                               :label=\\\"$tc('swag-cms-extensions.sw-cms.elements.custom-form.editor.tabs.options.internalNameLabel')\\\"\\n                               :helpText=\\\"$tc('swag-cms-extensions.sw-cms.components.form-editor.settings-group.internalNameHelpText')\\\"\\n                               :error=\\\"groupTechnicalNameError\\\"\\n                               size=\\\"medium\\\"\\n                               required>\\n                </sw-text-field>\\n            {% endblock %}\\n\\n            {% block swag_cms_extensions_form_editor_settings_group_content_title %}\\n                <sw-text-field v-model=\\\"group.title\\\"\\n                               :label=\\\"$tc('swag-cms-extensions.sw-cms.components.form-editor.settings-group.titleFieldLabel')\\\"\\n                               size=\\\"medium\\\">\\n                </sw-text-field>\\n            {% endblock %}\\n\\n            {% block swag_cms_extensions_form_editor_settings_group_content_explanation %}\\n                <div class=\\\"swag-cms-extensions-form-editor-settings-group__explanation\\\">\\n                    {{ $tc('swag-cms-extensions.sw-cms.components.form-editor.settings-group.explanation') }}\\n                </div>\\n            {% endblock %}\\n        {% endblock %}\\n\\n    </div>\\n{% endblock %}\\n\";","const { Mixin } = Shopware;\n\nMixin.register('swag-cms-extensions-form-group-field-error', {\n    methods: {\n        validateDuplicateTechnicalName(form, field) {\n            // Try to find field with identical technicalName\n            const hasIdenticalTechnicalNameField = form.groups.some((group) => {\n                return group.fields.some((f) => {\n                    // If the field we are comparing to is the current field or the names do not match return\n                    return (f.id !== field.id && f.technicalName === field.technicalName);\n                });\n            });\n\n            if (!hasIdenticalTechnicalNameField) {\n                return;\n            }\n\n            Shopware.State.commit('error/addApiError', {\n                expression: `swag_cms_extensions_form_group_field.${field.id}.technicalName`,\n                error: {\n                    id: Shopware.Utils.createId(),\n                    code: 'SWAG_CUSTOM_FORM_DUPLICATE_FIELD_TECHNICAL_NAME',\n                    parameters: '__vue_devtool_undefined__',\n                    status: '400',\n                    detail: `The technical name (${field.technicalName}) is not unique in this form.`,\n                },\n            });\n        },\n    },\n});\n","module.exports = \"{% block sw_tagged_field_input %}\\n    <input type=\\\"email\\\"\\n           ref=\\\"taggedFieldInput\\\"\\n           class=\\\"sw-tagged-field__input\\\"\\n           :class=\\\"taggedFieldInputClasses\\\"\\n           v-model=\\\"newTagName\\\"\\n           :disabled=\\\"disabled\\\"\\n           :placeholder=\\\"placeholder\\\"\\n           @focus=\\\"setFocus(true)\\\"\\n           @blur=\\\"blurInput\\\"\\n           @keydown=\\\"performAddTag\\\"\\n           @keydown.delete=\\\"dismissLastTag\\\">\\n{% endblock %}\\n\";","module.exports = \"{% block swag_cms_extensions_form_editor_settings_group_field %}\\n    <div class=\\\"swag-cms-extensions-form-editor-settings-group-field\\\">\\n\\n        {% block swag_cms_extensions_form_editor_settings_group_field_header %}\\n            <swag-cms-extensions-form-editor-settings-field-type-header v-if=\\\"displayHeader\\\">\\n            </swag-cms-extensions-form-editor-settings-field-type-header>\\n        {% endblock %}\\n\\n        {% block swag_cms_extensions_form_editor_settings_group_field_content %}\\n            <component :is=\\\"fieldComponentName\\\">\\n            </component>\\n        {% endblock %}\\n\\n        {% block swag_cms_extensions_form_editor_settings_group_field_footer %}\\n            <swag-cms-extensions-form-editor-settings-field-type-footer>\\n            </swag-cms-extensions-form-editor-settings-field-type-footer>\\n        {% endblock %}\\n\\n    </div>\\n{% endblock %}\\n\";","module.exports = \"{% block swag_cms_extensions_block_config_rule %}\\n    <div class=\\\"swag-cms-extensions-block-config-rule\\\">\\n        <sw-sidebar-collapse :expandOnLoading=\\\"false\\\">\\n\\n            {% block swag_cms_extensions_block_config_rule_header %}\\n                <template #header>\\n                    <div class=\\\"swag-cms-extensions-block-config-rule__header\\\">\\n                        {{ $tc('swag-cms-extensions.sw-cms.detail.blockRule.sidebarHeaderBlockBehaviorSettings') }}\\n                    </div>\\n                </template>\\n            {% endblock %}\\n\\n            {% block swag_cms_extensions_block_config_rule_content %}\\n                <template #content>\\n                    <div class=\\\"sw-cms-block-config swag-cms-extensions-block-config-rule__content\\\">\\n\\n                        {% block swag_cms_extensions_block_config_rule_content_visibility_rule %}\\n                            <swag-cms-extensions-block-rule-select\\n                                    class=\\\"swag-cms-extensions-block-config-rule__field-visibility-rule\\\"\\n                                    :ruleId=\\\"blockRule.visibilityRuleId\\\"\\n                                    :ruleFilter=\\\"ruleFilter\\\"\\n                                    :placeholder=\\\"$tc('swag-cms-extensions.sw-cms.detail.blockRule.alwaysVisiblePlaceholder')\\\"\\n                                    :disabled=\\\"!acl.can('cms.editor')\\\"\\n                                    :label=\\\"$tc('global.entities.rule')\\\"\\n                                    :helpText=\\\"$tc('swag-cms-extensions.sw-cms.detail.blockRule.ruleHelpText')\\\"\\n                                    @save-rule=\\\"onSaveRule\\\"\\n                                    @dismiss-rule=\\\"onDismissRule\\\">\\n                            </swag-cms-extensions-block-rule-select>\\n                        {% endblock %}\\n\\n                        {% block swag_cms_extensions_block_config_rule_content_inverted %}\\n                            <sw-switch-field\\n                                    v-model=\\\"blockRule.inverted\\\"\\n                                    class=\\\"swag-cms-extensions-block-config-rule__field-inverted\\\"\\n                                    :label=\\\"$tc('swag-cms-extensions.sw-cms.detail.blockRule.invertedSwitchLabel')\\\"\\n                                    :disabled=\\\"!acl.can('cms.editor')\\\"\\n                                    @change=\\\"onInvertedChange\\\">\\n                            </sw-switch-field>\\n                        {% endblock %}\\n\\n                    </div>\\n                </template>\\n            {% endblock %}\\n\\n        </sw-sidebar-collapse>\\n    </div>\\n{% endblock %}\";","module.exports = \"{% block swag_cms_extensions_form_element_text %}\\n    <sw-text-field :label=\\\"field.translated ? field.translated.label : field.label\\\"\\n                   :required=\\\"field.required\\\"\\n                   :value=\\\"field.translated ? field.translated.placeholder : field.placeholder\\\">\\n    </sw-text-field>\\n{% endblock %}\\n\";","module.exports = \"{% block swag_cms_extensions_form_editor_settings_field_type_base %}\\n    {% block swag_cms_extensions_form_editor_settings_field_type_checkbox_default %}\\n        <sw-single-select v-model=\\\"defaultValue\\\"\\n                          :options=\\\"values\\\"\\n                          :label=\\\"$tc('swag-cms-extensions.sw-cms.components.form-editor.settings-field.defaultValueFieldLabel')\\\"\\n                          :highlightSearchTerm=\\\"false\\\"\\n                          size=\\\"medium\\\"\\n                          required>\\n        </sw-single-select>\\n    {% endblock %}\\n{% endblock %}\\n\";","const ApiService = Shopware.Classes.ApiService;\n\n/**\n * Gateway for the API endpoint \"swag_cms_extensions_form\"\n *\n * @class\n * @extends ApiService\n */\nclass SwagCmsExtensionsFormValidationService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'swag/cms-extensions/form') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'SwagCmsExtensionsFormValidationService';\n    }\n\n    /**\n     * @returns {Promise<T>}\n     */\n    validateForm(form) {\n        const headers = {\n            ...this.getBasicHeaders(),\n            'sw-language-id': Shopware.Context.api.languageId,\n        };\n\n        return this.httpClient.post(\n            `/_action/${this.getApiBasePath()}/validate`,\n            form,\n            { headers },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    /**\n     * @returns {Promise<T>}\n     */\n    validateAllForms(forms) {\n        const headers = {\n            ...this.getBasicHeaders(),\n            'sw-language-id': Shopware.Context.api.languageId,\n        };\n\n        return this.httpClient.post(\n            `/_action/${this.getApiBasePath()}/validateAll`,\n            forms,\n            { headers },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n}\n\nexport default SwagCmsExtensionsFormValidationService;\n","import SwagCmsExtensionsFormValidationService from '../core/service/api/form-validation.service';\n\nconst initContainer = Shopware.Application.getContainer('init');\n\nif (Shopware.Feature.isActive('FEATURE_SWAGCMSEXTENSIONS_63')) {\n    Shopware.Application.addServiceProvider('SwagCmsExtensionsFormValidationService', (container) => {\n        return new SwagCmsExtensionsFormValidationService(initContainer.httpClient, container.loginService);\n    });\n}\n","import deDE from '../app/snippet/de-DE.json';\nimport enGB from '../app/snippet/en-GB.json';\n\nShopware.Locale.extend('de-DE', deDE);\nShopware.Locale.extend('en-GB', enGB);\n","import template from './swag-cms-extensions-block-behavior-config.html.twig';\n\nconst { Component } = Shopware;\n// @deprecated tag:v2.0.0 - Functionality moved to `swag-cms-extensions-block-config-quickview`\nconst { Application: { view: { setReactive } } } = Shopware;\n\nComponent.register('swag-cms-extensions-block-behavior-config', {\n    template,\n\n    // @deprecated tag:v2.0.0 - Functionality moved to `swag-cms-extensions-block-config-quickview`\n    inject: [\n        'repositoryFactory',\n        'acl',\n    ],\n\n    model: {\n        prop: 'block',\n        event: 'block-update',\n    },\n\n    props: {\n        block: {\n            type: Object,\n            required: true,\n            default() {\n                return {};\n            },\n        },\n    },\n\n    computed: {\n        // @deprecated tag:v2.0.0 - Functionality moved to `swag-cms-extensions-block-config-quickview`\n        productRelatedBlocks() {\n            return [\n                'product-listing',\n                'product-slider',\n                'product-three-column',\n            ];\n        },\n\n        // @deprecated tag:v2.0.0 - Functionality moved to `swag-cms-extensions-block-config-quickview`\n        productRelatedSlots() {\n            return [\n                'product-box',\n                'product-slider',\n            ];\n        },\n\n        // @deprecated tag:v2.0.0 - Functionality moved to `swag-cms-extensions-block-config-quickview`\n        blockIsProductRelated() {\n            // Check if one of the slots is a product related slot\n            const productRelatedSlot = this.block.slots.reduce((accumulator, slot) => {\n                if (accumulator) {\n                    return accumulator;\n                }\n\n                accumulator = this.productRelatedSlots.includes(slot.type);\n\n                return accumulator;\n            }, false);\n\n            return (productRelatedSlot || this.productRelatedBlocks.includes(this.block.type));\n        },\n\n        // @deprecated tag:v2.0.0 - Functionality moved to `swag-cms-extensions-block-config-quickview`\n        quickviewRepository() {\n            return this.repositoryFactory.create('swag_cms_extensions_quickview');\n        },\n\n        // @deprecated tag:v2.0.0 - Functionality moved to `swag-cms-extensions-block-config-quickview`\n        quickviewExtensionDefined() {\n            return this.block.extensions.swagCmsExtensionsQuickview !== undefined;\n        },\n\n        // @deprecated tag:v2.0.0 - Functionality moved to `swag-cms-extensions-block-config-quickview`\n        quickview() {\n            if (this.quickviewExtensionDefined) {\n                return this.block.extensions.swagCmsExtensionsQuickview;\n            }\n            /* Prevents a superfluous call to create(), if the block cannot make use of the quickview */\n            return this.blockIsProductRelated ? this.quickviewRepository.create(Shopware.Context.api) : {};\n        },\n\n        blockRuleFeatureActive() {\n            return Shopware.Feature.isActive('FEATURE_SWAGCMSEXTENSIONS_8');\n        },\n\n        quickviewFeatureActive() {\n            return Shopware.Feature.isActive('FEATURE_SWAGCMSEXTENSIONS_1');\n        },\n    },\n\n    methods: {\n        // @deprecated tag:v2.0.0 - Functionality moved to `swag-cms-extensions-block-config-quickview`\n        quickviewActiveChanged(state) {\n            if (!this.quickviewExtensionDefined) {\n                /**\n                 * This will be executed, when the user activates the quickview for the first\n                 * time and is necessary to prepare the extension to be saved later on.\n                 */\n                setReactive(this.block.extensions, 'swagCmsExtensionsQuickview', this.quickview);\n                setReactive(this.block.extensions.swagCmsExtensionsQuickview, 'active', state);\n            }\n        },\n    },\n});\n","import template from './swag-cms-extensions-page-scroll-behavior-config.html.twig';\nimport './swag-cms-extensions-page-scroll-behavior-config.scss';\n\nconst { Component, Application: { view: { setReactive } } } = Shopware;\n\nComponent.register('swag-cms-extensions-page-scroll-behavior-config', {\n    template,\n\n    inject: [\n        'repositoryFactory',\n        'acl',\n    ],\n\n    model: {\n        prop: 'page',\n        event: 'page-change',\n    },\n\n    props: {\n        page: {\n            type: Object,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            defaults: {\n                active: false,\n                duration: 1000,\n                easing: 'inOut',\n                easingDegree: 3,\n                bouncy: false,\n            },\n            easings: ['linear', 'in', 'out', 'inOut'],\n        };\n    },\n\n    computed: {\n        scrollNavigationPageSettingsRepository() {\n            return this.repositoryFactory.create('swag_cms_extensions_scroll_navigation_page_settings');\n        },\n\n        scrollNavigationPageSettingsDefined() {\n            return this.page.extensions.swagCmsExtensionsScrollNavigationPageSettings !== undefined;\n        },\n\n        scrollNavigationPageSettings() {\n            if (this.scrollNavigationPageSettingsDefined) {\n                return this.page.extensions.swagCmsExtensionsScrollNavigationPageSettings;\n            }\n            return this.scrollNavigationPageSettingsRepository.create(Shopware.Context.api);\n        },\n\n        pageHasNavigationPoints() {\n            return this.page.sections.some((section) => {\n                const scrollNavigation = section.extensions.swagCmsExtensionsScrollNavigation;\n\n                return scrollNavigation && scrollNavigation.active;\n            });\n        },\n\n        smoothScrollingActive() {\n            return this.pageHasNavigationPoints && this.scrollNavigationPageSettings.active;\n        },\n\n        easingTypes() {\n            return this.easings.map((type) => {\n                return {\n                    value: type,\n                    label: this.$tc(`swag-cms-extensions.sw-cms.detail.scrollNavigation.pageSettings.easing.${type}`),\n                };\n            });\n        },\n\n        easingDegreeDisabled() {\n            return !this.smoothScrollingActive ||\n                this.scrollNavigationPageSettings.easing === 'linear' ||\n                this.scrollNavigationPageSettings.bouncy === true;\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.setDefaults();\n        },\n\n        setDefaults() {\n            Object.entries(this.defaults).forEach(([property, defaultValue]) => {\n                if (this.scrollNavigationPageSettings[property] === undefined) {\n                    this.scrollNavigationPageSettings[property] = defaultValue;\n                    this.pageSettingsActiveChanged();\n                }\n            });\n        },\n\n        pageSettingsActiveChanged() {\n            /**\n             * This will be executed, when the user uses the page settings for the first\n             * time and is necessary to prepare the extension to be saved later on.\n             */\n            setReactive(\n                this.page.extensions,\n                'swagCmsExtensionsScrollNavigationPageSettings',\n                this.scrollNavigationPageSettings,\n            );\n            this.$emit('page-change', this.page);\n        },\n    },\n\n});\n","import template from './swag-cms-extensions-section-scroll-behavior-config.html.twig';\nimport './swag-cms-extensions-section-scroll-behavior-config.scss';\n\nconst { Component, Application: { view: { setReactive } } } = Shopware;\nconst { mapPropertyErrors } = Component.getComponentHelper();\n\nComponent.register('swag-cms-extensions-section-scroll-behavior-config', {\n    template,\n\n    inject: [\n        'repositoryFactory',\n        'acl',\n    ],\n\n    model: {\n        prop: 'section',\n        event: 'section-change',\n    },\n\n    props: {\n        section: {\n            type: Object,\n            required: true,\n        },\n    },\n\n    computed: {\n        scrollNavigationRepository() {\n            return this.repositoryFactory.create('swag_cms_extensions_scroll_navigation');\n        },\n\n        scrollNavigationExtensionDefined() {\n            return this.section.extensions.swagCmsExtensionsScrollNavigation !== undefined;\n        },\n\n        swagCmsExtensionsScrollNavigation() {\n            if (this.scrollNavigationExtensionDefined) {\n                return this.section.extensions.swagCmsExtensionsScrollNavigation;\n            }\n            return this.scrollNavigationRepository.create(Shopware.Context.api);\n        },\n\n        ...mapPropertyErrors('swagCmsExtensionsScrollNavigation', [\n            'displayName',\n        ]),\n    },\n\n    methods: {\n        scrollNavigationActiveChanged() {\n            /**\n             * This will be executed, when the user activates the scroll navigation for the first\n             * time and is necessary to prepare the extension to be saved later on.\n             */\n            setReactive(\n                this.section.extensions,\n                'swagCmsExtensionsScrollNavigation',\n                this.swagCmsExtensionsScrollNavigation,\n            );\n            this.$emit('section-change', this.section);\n        },\n    },\n});\n","import template from './swag-cms-extensions-block-config-quickview.html.twig';\nimport './swag-cms-extensions-block-config-quickview.scss';\n\nconst { Component, Application: { view: { setReactive } } } = Shopware;\n\nComponent.register('swag-cms-extensions-block-config-quickview', {\n    template,\n\n    inject: [\n        'repositoryFactory',\n        'acl',\n    ],\n\n    model: {\n        prop: 'block',\n        event: 'block-update',\n    },\n\n    props: {\n        block: {\n            type: Object,\n            required: true,\n            default() {\n                return {};\n            },\n        },\n    },\n\n    computed: {\n        productRelatedBlocks() {\n            return [\n                'product-listing',\n                'product-slider',\n                'product-three-column',\n                'cross-selling',\n            ];\n        },\n\n        productRelatedSlots() {\n            return [\n                'product-box',\n                'product-slider',\n            ];\n        },\n\n        blockIsProductRelated() {\n            // Check if one of the slots is a product related slot\n            const productRelatedSlot = this.block.slots.reduce((accumulator, slot) => {\n                if (accumulator) {\n                    return accumulator;\n                }\n\n                accumulator = this.productRelatedSlots.includes(slot.type);\n\n                return accumulator;\n            }, false);\n\n            return (productRelatedSlot || this.productRelatedBlocks.includes(this.block.type));\n        },\n\n        quickviewRepository() {\n            return this.repositoryFactory.create('swag_cms_extensions_quickview');\n        },\n\n        quickviewExtensionDefined() {\n            return this.block.extensions.swagCmsExtensionsQuickview !== undefined;\n        },\n\n        quickview() {\n            if (this.quickviewExtensionDefined) {\n                return this.block.extensions.swagCmsExtensionsQuickview;\n            }\n            /* Prevents a superfluous call to create(), if the block cannot make use of the quickview */\n            return this.blockIsProductRelated ? this.quickviewRepository.create(Shopware.Context.api) : {};\n        },\n    },\n\n    methods: {\n        quickviewActiveChanged(state) {\n            if (!this.quickviewExtensionDefined) {\n                /**\n                 * This will be executed, when the user activates the quickview for the first\n                 * time and is necessary to prepare the extension to be saved later on.\n                 */\n                setReactive(this.block.extensions, 'swagCmsExtensionsQuickview', this.quickview);\n                setReactive(this.block.extensions.swagCmsExtensionsQuickview, 'active', state);\n            }\n        },\n    },\n});\n","import template from './swag-cms-extensions-block-config-rule.html.twig';\nimport './swag-cms-extensions-block-config-rule.scss';\n\nconst { Component, Application: { view: { setReactive } } } = Shopware;\nconst { Criteria } = Shopware.Data;\n\nComponent.register('swag-cms-extensions-block-config-rule', {\n    template,\n\n    inject: [\n        'repositoryFactory',\n        'acl',\n    ],\n\n    model: {\n        prop: 'block',\n        event: 'block-update',\n    },\n\n    props: {\n        block: {\n            type: Object,\n            required: true,\n        },\n    },\n\n    computed: {\n        blockRuleRepository() {\n            return this.repositoryFactory.create('swag_cms_extensions_block_rule');\n        },\n\n        blockRuleExtensionDefined() {\n            return this.block.extensions.swagCmsExtensionsBlockRule !== undefined;\n        },\n\n        blockRule() {\n            if (this.blockRuleExtensionDefined) {\n                return this.block.extensions.swagCmsExtensionsBlockRule;\n            }\n            const rule = this.blockRuleRepository.create(Shopware.Context.api);\n            rule.inverted = false;\n\n            return rule;\n        },\n\n        ruleFilter() {\n            return new Criteria();\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            if (!this.blockRuleExtensionDefined) {\n                setReactive(this.block.extensions, 'swagCmsExtensionsBlockRule', this.blockRule);\n                setReactive(this.block.extensions.swagCmsExtensionsBlockRule, 'visibilityRuleId', null);\n                setReactive(this.block.extensions.swagCmsExtensionsBlockRule, 'inverted', false);\n            }\n        },\n\n        onInvertedChange(state) {\n            setReactive(this.block.extensions, 'swagCmsExtensionsBlockRule', this.blockRule);\n            setReactive(this.block.extensions.swagCmsExtensionsBlockRule, 'inverted', state);\n        },\n\n        onSaveRule(ruleId) {\n            this.blockRule.visibilityRuleId = ruleId;\n        },\n\n        onDismissRule() {\n            this.blockRule.visibilityRuleId = null;\n        },\n    },\n});\n","import template from './swag-cms-extensions-block-rule-select.html.twig';\n\nconst { Component } = Shopware;\n\nComponent.extend('swag-cms-extensions-block-rule-select', 'sw-select-rule-create', {\n    template,\n\n    methods: {\n        dismissSelection() {\n            this.$emit('dismiss-rule');\n        },\n    },\n});\n","export const ERRORS = Object.freeze({\n    SECTION: {\n        EMPTY_FIELD_WHEN_ACTIVE: 'SWAG_SCROLL_NAVIGATION_EMPTY_FIELD_WHEN_ACTIVE_ERROR',\n        FIELD_TOO_LONG: 'SWAG_SCROLL_NAVIGATION_FIELD_TOO_LONG_ERROR',\n        DUPLICATE_VALUE: 'SWAG_SCROLL_NAVIGATION_DUPLICATE_VALUE_ERROR',\n    },\n});\n\nexport default {\n    ERRORS,\n};\n","import { ERRORS } from '../../../../../../../constant/swag-cms-extensions.constant';\n\nconst { Component, State, Filter } = Shopware;\nconst { ShopwareError } = Shopware.Classes;\nconst { cloneDeep } = Shopware.Utils.object;\n\nif (Shopware.Feature.isActive('FEATURE_SWAGCMSEXTENSIONS_2')) {\n    Component.override('sw-cms-detail', {\n        inject: [\n            'repositoryFactory',\n        ],\n\n        data() {\n            return {\n                occuredDisplayNames: [],\n            };\n        },\n\n        computed: {\n            scrollNavigationRepository() {\n                return this.repositoryFactory.create('swag_cms_extensions_scroll_navigation');\n            },\n\n            loadPageCriteria() {\n                const criteria = this.$super('loadPageCriteria');\n\n                criteria\n                    .addAssociation('swagCmsExtensionsScrollNavigationPageSettings')\n                    .getAssociation('sections')\n                    .addAssociation('swagCmsExtensionsScrollNavigation');\n\n                return criteria;\n            },\n        },\n\n        methods: {\n            onSave() {\n                if (this.validateSections() === false) {\n                    return this.$super('onSave');\n                }\n\n                return Promise.reject();\n            },\n\n            prepareSectionClone(section) {\n                const newSection = this.$super('prepareSectionClone', section);\n\n                const scrollNavigation = section.extensions?.swagCmsExtensionsScrollNavigation;\n                if (!scrollNavigation) {\n                    return;\n                }\n\n                const copySuffix = this.$tc('swag-cms-extensions.sw-cms.section.actions.copySuffix');\n                const newScrollNavigation = this.scrollNavigationRepository.create();\n                const scrollNavigationClone = cloneDeep(scrollNavigation);\n\n                scrollNavigationClone.id = newScrollNavigation.id;\n                scrollNavigationClone.displayName += ` ${copySuffix}`;\n\n                newSection.extensions.swagCmsExtensionsScrollNavigation = Object.assign(\n                    newScrollNavigation,\n                    scrollNavigationClone,\n                );\n            },\n\n            validateSections() {\n                this.occuredDisplayNames = [];\n                return Array.from(this.page.sections).some(this.validateSection);\n            },\n\n            validateSection(section) {\n                const currentScrollNavigation = this.getScrollNavigation(section);\n\n                if (!currentScrollNavigation) {\n                    return false;\n                }\n\n                let currentName = '';\n                if (currentScrollNavigation.displayName) {\n                    currentScrollNavigation.displayName = currentScrollNavigation.displayName.trim();\n                    currentName = currentScrollNavigation.displayName;\n                }\n\n                const nameTooLong = currentName.length > 255;\n                if ((currentScrollNavigation.active && currentName.length === 0) || nameTooLong) {\n                    const code = nameTooLong ? ERRORS.SECTION.FIELD_TOO_LONG : ERRORS.SECTION.EMPTY_FIELD_WHEN_ACTIVE;\n\n                    this.commitApiError(section, 'displayName', code);\n                    this.onInvalidLength(section, currentName);\n\n                    return true;\n                }\n\n                if (currentScrollNavigation.active !== true) {\n                    return false;\n                }\n\n                if (this.occuredDisplayNames.includes(currentName)) {\n                    this.commitApiError(section, 'displayName', ERRORS.SECTION.DUPLICATE_VALUE);\n                    this.onInvalidDisplayName(section, currentName);\n\n                    return true;\n                }\n\n                // Only check active display names for duplicates\n                this.occuredDisplayNames.push(currentName);\n\n                return false;\n            },\n\n            onInvalidDisplayName(section, currentName) {\n                const message = this.$tc(\n                    'swag-cms-extensions.sw-cms.detail.scrollNavigation.duplicateDisplayNameMessage',\n                    0,\n                    { currentName },\n                );\n                this.onInvalidInput(section, message);\n            },\n\n            onInvalidLength(section, currentName) {\n                const truncatedName = Filter.getByName('truncate')(currentName, 40);\n                const message = this.$tc(\n                    'swag-cms-extensions.sw-cms.detail.scrollNavigation.invalidDisplayNameLengthMessage',\n                    currentName.length - 1,\n                    { truncatedName },\n                );\n                this.onInvalidInput(section, message);\n            },\n\n            onInvalidInput(section, message) {\n                this.selectSection(section);\n                this.createNotificationError({\n                    message,\n                });\n            },\n\n            commitApiError(section, property, code) {\n                const expression =\n                    `swag_cms_extensions_scroll_navigation.${this.getScrollNavigation(section).id}.${property}`;\n                const error = new ShopwareError({\n                    code,\n                    detail: this.$tc(`swag-cms-extensions.error-codes.${code}`),\n                });\n\n                State.commit('error/addApiError', { expression, error });\n            },\n\n            selectSection(section) {\n                State.dispatch('cmsPageState/setSection', section);\n                this.$parent.$emit('page-config-open', 'itemConfig');\n            },\n\n            getScrollNavigation(section) {\n                if (section.extensions.swagCmsExtensionsScrollNavigation !== undefined) {\n                    return section.extensions.swagCmsExtensionsScrollNavigation;\n                }\n                return this.scrollNavigationRepository.create(Shopware.Context.api);\n            },\n        },\n    });\n}\n","const { EntityCollection } = Shopware.Data;\nconst { setReactive } = Shopware.Application.view;\n\n// Local helper method to duplicate a field\nconst duplicateField = (state, field, groupId, fieldRepository, context) => {\n    const duplicatedField = fieldRepository.create(context);\n    const group = state.form.groups.get(groupId);\n    const fieldKeysBlocklist = ['id', 'groupId', 'group', 'position'];\n\n    duplicatedField.position = group.fields.length + 1;\n\n    Object.keys(field).forEach((key) => {\n        if (fieldKeysBlocklist.includes(key)) {\n            return;\n        }\n\n        duplicatedField[key] = field[key];\n    });\n\n    return duplicatedField;\n};\n\n// Local helper method to sanitize quantities\nconst sanitizePositions = (fieldCollection, movedPosition) => {\n    fieldCollection.forEach((field) => {\n        if (field.position < movedPosition) {\n            return;\n        }\n\n        field.position -= 1;\n    });\n};\n\nexport default {\n    namespaced: true,\n\n    state() {\n        return {\n            form: null,\n            activeItem: null,\n        };\n    },\n\n    getters: {\n        form: (state) => {\n            return state.form;\n        },\n\n        template: (state) => (templateName, formRepository, groupRepository, fieldRepository) => {\n            const formTemplate = formRepository.create(Shopware.Context.api);\n            formTemplate.isTemplate = true;\n            formTemplate.technicalName = templateName;\n            formTemplate.title = state.form.title;\n            formTemplate.successMessage = state.form.successMessage;\n            formTemplate.receivers = state.form.receivers;\n            formTemplate.mailTemplateId = state.form.mailTemplateId;\n\n            state.form.groups.forEach((group) => {\n                const g = groupRepository.create(Shopware.Context.api);\n                g.technicalName = group.technicalName;\n                g.title = group.title;\n                g.position = group.position;\n\n                group.fields.forEach((field) => {\n                    const f = fieldRepository.create(Shopware.Context.api);\n                    f.position = field.position;\n                    f.width = field.width;\n                    f.type = field.type;\n                    f.technicalName = field.technicalName;\n                    f.required = field.required;\n                    f.label = field.label;\n                    f.placeholder = field.placeholder;\n                    f.errorMessage = field.errorMessage;\n                    f.config = field.config;\n\n                    g.fields.add(f);\n                });\n\n                formTemplate.groups.add(g);\n            });\n\n            return formTemplate;\n        },\n    },\n\n    mutations: {\n        setForm(state, form) {\n            state.form = form;\n        },\n\n        setFormProperty(state, { property, value }) {\n            state.form[property] = value;\n        },\n\n        setActiveItem(state, activeItem) {\n            state.activeItem = activeItem;\n        },\n\n        setFieldProperty(state, { fieldId, property, value }) {\n            const group = state.form.groups.find(formGroup => formGroup.fields.get(fieldId));\n            group.fields.get(fieldId)[property] = value;\n        },\n\n        setFieldConfigProperty(state, { fieldId, property, value }) {\n            const group = state.form.groups.find(formGroup => formGroup.fields.get(fieldId));\n            const field = group.fields.get(fieldId);\n\n            field.config = {\n                ...(field.translated?.config ?? {}),\n                [property]: value,\n            };\n\n            field.translated = { ...field.translated };\n            field.translated.config = { ...field.config };\n        },\n\n        setFieldType(state, { fieldId, type }) {\n            const group = state.form.groups.find(formGroup => formGroup.fields.get(fieldId));\n            const field = state.form.groups.get(group.id).fields.get(fieldId);\n            field.config = {};\n\n            switch (type) {\n                case 'number':\n                    setReactive(field.config, 'min', null);\n                    setReactive(field.config, 'max', null);\n                    setReactive(field.config, 'step', 1);\n                    break;\n                case 'select':\n                    setReactive(field.config, 'entity', null);\n                    break;\n                case 'textarea':\n                    setReactive(field.config, 'scalable', true);\n                    setReactive(field.config, 'rows', 5);\n                    break;\n                case 'checkbox':\n                    setReactive(field.config, 'default', false);\n                    break;\n                case 'text':\n                case 'email':\n                default:\n                    break;\n            }\n\n            field.type = type;\n        },\n\n        changeFieldSelectConfig(state, { fieldId, mode }) {\n            const group = state.form.groups.find(formGroup => formGroup.fields.get(fieldId));\n            const field = state.form.groups.get(group.id).fields.get(fieldId);\n\n            if (!field?.translated?.config) {\n                return;\n            }\n            setReactive(field, 'config', {});\n\n            if (mode === 'custom') {\n                setReactive(field.config, 'options', []);\n                return;\n            }\n            setReactive(field.config, 'entity', null);\n        },\n\n        setGroupProperty(state, { groupId, property, value }) {\n            const group = state.form.groups.get(groupId);\n            group[property] = value;\n        },\n\n        resetState(state) {\n            state.form = null;\n            state.activeItem = null;\n        },\n\n        addField(state, { groupId, repository, context, prefix }) {\n            const group = state.form.groups.get(groupId);\n            const field = repository.create(context);\n            const overallFieldCount = state.form.groups.reduce((acc, g) => {\n                acc += g.fields.length;\n\n                return acc;\n            }, 0);\n\n            field.id = Shopware.Utils.createId();\n            field.technicalName = `${prefix}${overallFieldCount + 1}`;\n            field.position = group.fields.length + 1;\n            field.type = 'text';\n            field.width = 12;\n            field.config = {};\n\n            group.fields.add(field);\n            state.activeItem = field;\n        },\n\n        addGroup(state, { repository, prefix, context }) {\n            const group = repository.create(context);\n\n            group.technicalName = `${prefix}${state.form.groups.length + 1}`;\n            group.position = state.form.groups.length + 1;\n            state.form.groups.add(group);\n            state.activeItem = group.fields.first();\n        },\n\n        moveItem(state, { itemId, callback }) {\n            let group = state.form.groups.find(formGroup => formGroup.id === itemId);\n\n            // itemId is not a group find the group containing a field with the id itemId\n            if (!group) {\n                group = state.form.groups.find(formGroup => formGroup.fields.get(itemId));\n                callback(group.fields, group.fields.get(itemId));\n                return;\n            }\n\n            callback(state.form.groups, state.form.groups.get(itemId));\n        },\n\n        duplicateGroup(state, { groupId, fieldRepository, context }) {\n            const originalGroup = state.form.groups.get(groupId);\n\n            const duplicateCollection = new EntityCollection(\n                `/swag-cms-extensions-form-group/${state.form.groups.last().id}/fields`,\n                originalGroup.fields.entity,\n                originalGroup.fields.context,\n                originalGroup.fields.criteria,\n            );\n\n            originalGroup.fields.forEach((field) => {\n                duplicateCollection.add(duplicateField(state, field, groupId, fieldRepository, context));\n            });\n\n            state.form.groups.last().fields = duplicateCollection;\n        },\n\n        deleteGroup(state, groupId) {\n            const groupToDelete = state.form.groups.get(groupId);\n\n            if (state.activeItem.id === groupId) {\n                const nextGroup = state.form.groups.getAt(groupToDelete.position);\n                if (nextGroup) {\n                    state.activeItem = nextGroup;\n                } else {\n                    state.activeItem = state.form.groups.getAt(groupToDelete.position - 2);\n                }\n            }\n\n            sanitizePositions(state.form.groups, groupToDelete.position);\n            state.form.groups.remove(groupId);\n        },\n\n        deleteField(state, { fieldId, groupId }) {\n            const group = state.form.groups.get(groupId);\n            const fieldToRemove = group.fields.get(fieldId);\n\n            sanitizePositions(group.fields, fieldToRemove.position);\n            group.fields.remove(fieldId);\n            state.activeItem = group;\n        },\n\n        duplicateField(state, { groupId, fieldId, repository, context }) {\n            const group = state.form.groups.get(groupId);\n            group.fields.add(duplicateField(state, group.fields.get(fieldId), groupId, repository, context));\n        },\n    },\n\n    actions: {\n        addGroup({ commit, state }, { groupRepository, groupPrefix, fieldRepository, fieldPrefix, context }) {\n            commit('addGroup', { repository: groupRepository, prefix: groupPrefix, context });\n            commit(\n                'addField',\n                {\n                    groupId: state.form.groups.last().id,\n                    repository: fieldRepository,\n                    context,\n                    prefix: fieldPrefix,\n                },\n            );\n        },\n\n        duplicateGroup({ commit }, { groupId, groupRepository, groupPrefix, fieldRepository, context }) {\n            commit('addGroup', { repository: groupRepository, prefix: groupPrefix, context });\n            commit('duplicateGroup', { groupId, fieldRepository, context });\n        },\n\n        setItemPosition({ commit }, { itemId, to, from, callbackUp, callbackDown }) {\n            let steps = 0;\n\n            if (to > from) {\n                steps = to - from;\n            } else {\n                steps = from - to;\n            }\n\n            for (let i = 0; i < steps; i += 1) {\n                if (to > from) {\n                    commit('moveItem', { itemId, callback: callbackDown });\n                } else {\n                    commit('moveItem', { itemId, callback: callbackUp });\n                }\n            }\n        },\n\n        moveFieldToGroup({ commit, state }, { fieldId, fromGroupId, toGroupId, fieldRepository, context }) {\n            const originalFields = state.form.groups.get(fromGroupId).fields;\n            const originalField = originalFields.get(fieldId);\n            const toggleActiveOnFieldMove = originalField.id === state.activeItem.id;\n\n            const fields = state.form.groups.get(toGroupId).fields;\n            const field = duplicateField(state, originalField, fromGroupId, fieldRepository, context);\n            field.position = fields.length + 1;\n            fields.add(\n                field,\n            );\n            originalFields.remove(fieldId);\n            sanitizePositions(originalFields, originalField.position);\n\n            if (toggleActiveOnFieldMove) {\n                commit('setActiveItem', fields.last());\n            }\n        },\n    },\n};\n","import formState from './state';\n\nconst { Component } = Shopware;\n\nif (Shopware.Feature.isActive('FEATURE_SWAGCMSEXTENSIONS_63')) {\n    Component.override('sw-cms-detail', {\n        inject: [\n            'SwagCmsExtensionsFormValidationService',\n        ],\n\n        beforeCreate() {\n            if (Shopware.State.list().indexOf('swCmsDetailCurrentCustomForm') !== -1) {\n                Shopware.State.unregisterModule('swCmsDetailCurrentCustomForm');\n            }\n            Shopware.State.registerModule('swCmsDetailCurrentCustomForm', formState);\n            Shopware.State.commit('swCmsDetailCurrentCustomForm/resetState');\n        },\n\n        methods: {\n            onSave() {\n                const forms = [];\n\n                this.page.sections.forEach((section) => {\n                    section.blocks.forEach((block) => {\n                        block.slots.forEach((slot) => {\n                            if (!Shopware.Utils.object.hasOwnProperty(slot, 'extensions') ||\n                                !Shopware.Utils.object.hasOwnProperty(slot.extensions, 'swagCmsExtensionsForm')\n                            ) {\n                                return;\n                            }\n\n                            forms.push(slot.extensions.swagCmsExtensionsForm);\n                        });\n                    });\n                });\n\n                return this.SwagCmsExtensionsFormValidationService.validateAllForms(forms).catch(() => {\n                    this.createNotificationError({\n                        message: this.$tc('swag-cms-extensions.sw-cms.detail.errors.customFormConfigurationInvalid'),\n                    });\n\n                    return Promise.reject();\n                }).then(() => {\n                    return this.$super('onSave');\n                });\n            },\n        },\n    });\n}\n","import template from './sw-cms-sidebar.html.twig';\nimport './sw-cms-sidebar.scss';\n\nconst { Component, State } = Shopware;\n\nComponent.override('sw-cms-sidebar', {\n    template,\n\n    data() {\n        return {\n            sectionHeaderWrapperClass: 'sw-cms-sidebar__navigator-section-header-wrapper',\n        };\n    },\n\n    computed: {\n        sectionHeaderWrapperClasses() {\n            return [this.sectionHeaderWrapperClass];\n        },\n\n        scrollNavigationFeatureActive() {\n            return Shopware.Feature.isActive('FEATURE_SWAGCMSEXTENSIONS_2');\n        },\n    },\n\n    watch: {\n        'cmsPageState.currentPage'() {\n            State.commit('cmsPageState/removeSelectedSection');\n        },\n    },\n\n    methods: {\n        getScrollNavigationBySection(section) {\n            return section.extensions.swagCmsExtensionsScrollNavigation;\n        },\n\n        scrollNavigationIsActive(section) {\n            return this.scrollNavigationFeatureActive &&\n                this.getScrollNavigationBySection(section) &&\n                this.getScrollNavigationBySection(section).active;\n        },\n\n        navigatorSectionHeaderWrapperClass(section) {\n            const scrollNavigation = this.getScrollNavigationBySection(section);\n\n            return scrollNavigation && scrollNavigation.active ? [this.sectionHeaderWrapperClasses] : '';\n        },\n\n        scrollNavigationAnchorTooltip(section) {\n            const scrollNavigation = this.getScrollNavigationBySection(section);\n            const message = scrollNavigation && scrollNavigation.displayName !== null ?\n                scrollNavigation.displayName :\n                this.$tc('swag-cms-extensions.sw-cms.sidebar.emptyAnchorName');\n\n            return {\n                message,\n            };\n        },\n    },\n});\n","import template from './sw-cms-sidebar-nav-element.html.twig';\nimport './sw-cms-sidebar-nav-element.scss';\n\nconst { Component, Feature } = Shopware;\n\nif (Feature.isActive('FEATURE_SWAGCMSEXTENSIONS_8') || Feature.isActive('FEATURE_SWAGCMSEXTENSIONS_63')) {\n    Component.override('sw-cms-sidebar-nav-element', {\n        template,\n\n        inject: [\n            'feature',\n        ],\n\n        computed: {\n            hasBlockRule() {\n                const rule = this.block.extensions.swagCmsExtensionsBlockRule;\n\n                return Feature.isActive('FEATURE_SWAGCMSEXTENSIONS_8') && (rule?.inverted || !!rule?.visibilityRuleId);\n            },\n\n            ruleTooltip() {\n                return {\n                    message: this.$tc('swag-cms-extensions.sw-cms.sidebar.navElement.blockRuleTooltip'),\n                };\n            },\n\n            blockRuleNavigatorClasses() {\n                return {\n                    'has--rule': Feature.isActive('FEATURE_SWAGCMSEXTENSIONS_8') && this.hasBlockRule,\n                };\n            },\n        },\n    });\n}\n","import template from './sw-cms-page-form.html.twig';\nimport './sw-cms-page-form.scss';\n\nconst { Component } = Shopware;\n\nif (Shopware.Feature.isActive('FEATURE_SWAGCMSEXTENSIONS_2')) {\n    Component.override('sw-cms-page-form', {\n        template,\n\n        methods: {\n            getScrollNavigationBySection(section) {\n                return section.extensions.swagCmsExtensionsScrollNavigation;\n            },\n\n            getScrollNavigationLabel(section) {\n                const prefix = this.$tc('swag-cms-extensions.sw-cms.section.actions.pageForm.labelPrefix');\n                const scrollNavigation = this.getScrollNavigationBySection(section);\n\n                const displayName = scrollNavigation && scrollNavigation.displayName !== null ?\n                    scrollNavigation.displayName :\n                    this.$tc('swag-cms-extensions.sw-cms.section.actions.pageForm.emptyAnchorName');\n\n                return `${prefix} - ${displayName}`;\n            },\n        },\n    });\n}\n","import template from './sw-cms-page-form.html.twig';\nimport './sw-cms-page-form.scss';\n\nconst { Component } = Shopware;\n\nif (Shopware.Feature.isActive('FEATURE_SWAGCMSEXTENSIONS_8')) {\n    Component.override('sw-cms-page-form', {\n        template,\n\n        methods: {\n            sectionHasRulesOnAllBlocks(section) {\n                return section.blocks.every((block) => {\n                    const rule = block.extensions.swagCmsExtensionsBlockRule;\n\n                    return rule && (rule.inverted || !!rule.visibilityRuleId);\n                });\n            },\n        },\n    });\n}\n","import template from './sw-cms-section.html.twig';\n\nconst { Component } = Shopware;\n\nComponent.override('sw-cms-section', {\n    template,\n});\n","import template from './sw-cms-section-actions.html.twig';\n\nconst { Component } = Shopware;\n\nif (Shopware.Feature.isActive('FEATURE_SWAGCMSEXTENSIONS_8')) {\n    Component.override('sw-cms-section-actions', {\n        template,\n\n        computed: {\n            hasRulesOnAllBlocks() {\n                return this.section.blocks.every((block) => {\n                    const rule = block.extensions.swagCmsExtensionsBlockRule;\n\n                    return rule && (rule.inverted || !!rule.visibilityRuleId);\n                });\n            },\n\n            rulesOnAllBlocksTooltip() {\n                return {\n                    message: this.$tc('swag-cms-extensions.sw-cms.sidebar.rulesOnAllBlocks'),\n                    position: 'right',\n                };\n            },\n        },\n    });\n}\n","import template from './sw-cms-section-actions.html.twig';\nimport './sw-cms-section-actions.scss';\n\nconst { Component } = Shopware;\n\nif (Shopware.Feature.isActive('FEATURE_SWAGCMSEXTENSIONS_2')) {\n    Component.override('sw-cms-section-actions', {\n        template,\n\n        computed: {\n            scrollNavigation() {\n                return this.section.extensions.swagCmsExtensionsScrollNavigation;\n            },\n\n            scrollNavigationPointTooltip() {\n                const tooltipPrefix = this.$tc('swag-cms-extensions.sw-cms.section.actions.viewports.tooltipPrefix');\n                const displayName = this.scrollNavigation && this.scrollNavigation.displayName ?\n                    this.scrollNavigation.displayName :\n                    this.$tc('swag-cms-extensions.sw-cms.section.actions.viewports.emptyAnchorName');\n\n                return {\n                    message: `${tooltipPrefix} ${displayName}`,\n                    position: 'right',\n                };\n            },\n        },\n    });\n}\n","import template from './sw-cms-section-config.html.twig';\n\nconst { Component } = Shopware;\n\nif (Shopware.Feature.isActive('FEATURE_SWAGCMSEXTENSIONS_8')) {\n    Component.override('sw-cms-section-config', {\n        template,\n\n        computed: {\n            hasRulesOnAllBlocks() {\n                return this.section.blocks.every((block) => {\n                    const rule = block.extensions.swagCmsExtensionsBlockRule;\n\n                    return rule && (rule.inverted || !!rule.visibilityRuleId);\n                });\n            },\n        },\n    });\n}\n","import template from './sw-cms-slot.html.twig';\n\nconst { Component, Utils } = Shopware;\nconst { Criteria } = Shopware.Data;\n\nif (Shopware.Feature.isActive('FEATURE_SWAGCMSEXTENSIONS_63')) {\n    Component.override('sw-cms-slot', {\n        template,\n\n        inject: [\n            'repositoryFactory',\n        ],\n\n        data() {\n            return {\n                showFormCreationModal: false,\n                formTemplateId: null,\n            };\n        },\n\n        computed: {\n            formRepository() {\n                return this.repositoryFactory.create('swag_cms_extensions_form');\n            },\n\n            groupRepository() {\n                return this.repositoryFactory.create('swag_cms_extensions_form_group');\n            },\n\n            fieldRepository() {\n                return this.repositoryFactory.create('swag_cms_extensions_form_group_field');\n            },\n\n            mailTemplateRepository() {\n                return this.repositoryFactory.create('mail_template');\n            },\n\n            isElementTypeCustomForm() {\n                return this.element.type === 'custom-form';\n            },\n\n            modalTitle() {\n                if (this.isElementTypeCustomForm) {\n                    return this.$tc('swag-cms-extensions.sw-cms.components.sw-cms-slot.formModalTitle');\n                }\n\n                return this.$tc('sw-cms.detail.title.elementSettingsModal');\n            },\n\n            primaryActionText() {\n                if (this.isElementTypeCustomForm) {\n                    return this.$tc('swag-cms-extensions.sw-cms.components.sw-cms-slot.formModalPrimary');\n                }\n\n                return this.$tc('sw-cms.detail.label.buttonElementSettingsConfirm');\n            },\n\n            slotHasFormExtension() {\n                return Utils.object.hasOwnProperty(this.element, 'extensions') &&\n                    Utils.object.hasOwnProperty(this.element.extensions, 'swagCmsExtensionsForm');\n            },\n        },\n\n        beforeCreate() {\n            if (this.slotHasFormExtension) {\n                const criteria = new Criteria(1, 1);\n                criteria.setIds([this.element.extensions.swagCmsExtensionsForm.id]);\n                criteria.addAssociation('groups.fields');\n\n                this.formRepository.search(criteria, Shopware.Context.api).then((result) => {\n                    this.element.extensions.swagCmsExtensionsForm = result.first();\n                    Shopware.State.commit(\n                        'swCmsDetailCurrentCustomForm/setForm',\n                        this.element.extensions.swagCmsExtensionsForm,\n                    );\n                });\n            }\n        },\n\n        created() {\n            this.createdComponent();\n        },\n\n        methods: {\n            createdComponent() {\n                if (!this.isElementTypeCustomForm) {\n                    return;\n                }\n\n                if (Utils.object.hasOwnProperty(this.element, 'isDragSorted') && this.element.isDragSorted) {\n                    return;\n                }\n\n                if (Utils.object.hasOwnProperty(this.element, 'swapped') && this.element.swapped) {\n                    this.onSettingsButtonClick();\n                    return;\n                }\n\n                if (!this.element.isNew()) {\n                    return;\n                }\n\n                this.onSettingsButtonClick();\n            },\n\n            onPrimaryConfirm() {\n                if (!this.isElementTypeCustomForm) {\n                    this.onCloseSettingsModal();\n                    return;\n                }\n\n                if (!this.formTemplateId) {\n                    const form = this.formRepository.create(Shopware.Context.api);\n                    form.receivers = [];\n\n                    // This flag is used to determine if the form should be validated on load or not\n                    form.isFirstEdit = true;\n\n                    Shopware.State.commit('swCmsDetailCurrentCustomForm/setForm', form);\n\n                    this.getDefaultMailTemplateId();\n\n                    this.showFormCreationModal = true;\n                    return;\n                }\n\n                const criteria = new Criteria(1, 1);\n                criteria.setIds([this.formTemplateId]);\n                criteria.addAssociation('groups.fields');\n                criteria.getAssociation('groups').addSorting(Criteria.sort('position'));\n                criteria.getAssociation('groups.fields').addSorting(Criteria.sort('position'));\n\n                this.formRepository.get(this.formTemplateId, Shopware.Context.api, criteria).then((result) => {\n                    // Set original template as form\n                    Shopware.State.commit('swCmsDetailCurrentCustomForm/setForm', result);\n\n                    // Get a clone without any ids and a empty technical name\n                    const formTemplate = Shopware.State.getters['swCmsDetailCurrentCustomForm/template'](\n                        '',\n                        this.formRepository,\n                        this.groupRepository,\n                        this.fieldRepository,\n                    );\n\n                    // Prevent templates from self replicating\n                    formTemplate.isTemplate = false;\n\n                    // Prevent null errors\n                    if (formTemplate.receivers === null) {\n                        formTemplate.receivers = [];\n                    }\n\n                    // Prevents the form from being validated on creation\n                    formTemplate.isFirstEdit = true;\n\n                    // Set the clone as the form\n                    Shopware.State.commit('swCmsDetailCurrentCustomForm/setForm', formTemplate);\n\n                    // Reset formTemplateId and display modal\n                    this.formTemplateId = null;\n                    this.showFormCreationModal = true;\n                });\n            },\n\n            onSettingsButtonClick() {\n                if (this.slotHasFormExtension) {\n                    // If the element is new or has changes compared to the server load local version into store\n                    if (this.formRepository.hasChanges(this.element.extensions.swagCmsExtensionsForm)) {\n                        Shopware.State.commit(\n                            'swCmsDetailCurrentCustomForm/setForm',\n                            this.element.extensions.swagCmsExtensionsForm,\n                        );\n                    } else {\n                        const criteria = new Criteria(1, 1);\n                        criteria.setIds([this.element.extensions.swagCmsExtensionsForm.id]);\n                        criteria.addAssociation('groups.fields');\n                        criteria.getAssociation('groups').addSorting(\n                            Criteria.sort('position'),\n                        );\n                        criteria.getAssociation('groups.fields').addSorting(\n                            Criteria.sort('position'),\n                        );\n\n                        this.formRepository.search(criteria, Shopware.Context.api).then((result) => {\n                            this.element.extensions.swagCmsExtensionsForm = result.first();\n                            Shopware.State.commit(\n                                'swCmsDetailCurrentCustomForm/setForm',\n                                this.element.extensions.swagCmsExtensionsForm,\n                            );\n                        });\n                    }\n                }\n\n                this.$super('onSettingsButtonClick');\n            },\n\n            onSelectElement(elementType) {\n                this.$super('onSelectElement', elementType);\n\n                if (elementType !== 'custom-form') {\n                    return;\n                }\n\n                this.$nextTick(() => {\n                    this.element.swapped = true;\n                    this.createdComponent();\n                });\n            },\n\n            onCloseSettingsModal() {\n                Shopware.State.commit('swCmsDetailCurrentCustomForm/resetState');\n                this.$super('onCloseSettingsModal');\n            },\n\n            onSettingsModalClose() {\n                this.onCloseSettingsModal();\n\n                const deleteBlock = this.isElementTypeCustomForm && (this.element.isNew() ||\n                    (Utils.object.hasOwnProperty(this.element, 'swapped') && this.element.swapped));\n\n                if (deleteBlock) {\n                    this.$nextTick(() => {\n                        this.$emit('delete-block-id', this.element.blockId);\n                    });\n                }\n            },\n\n            onCloseEditFormModal() {\n                this.onCloseSettingsModal();\n                this.showFormEditorModal = false;\n            },\n\n            onCloseCreateFormModal(persist) {\n                if (persist) {\n                    if (Utils.object.hasOwnProperty(this.element, 'swapped') && this.element.swapped) {\n                        delete this.element.swapped;\n                    }\n\n                    this.$set(\n                        this.element.extensions,\n                        'swagCmsExtensionsForm',\n                        Shopware.State.get('swCmsDetailCurrentCustomForm').form,\n                    );\n\n                    this.onCloseSettingsModal();\n\n                    this.$nextTick(() => {\n                        this.showFormCreationModal = false;\n                    });\n\n                    return;\n                }\n\n                this.showFormCreationModal = false;\n            },\n\n            onFormTemplateIdChange(formTemplateId) {\n                this.formTemplateId = formTemplateId;\n            },\n\n            getDefaultMailTemplateId() {\n                const criteria = new Criteria(1, 1);\n                criteria.addFilter(\n                    Criteria.multi('and', [\n                        Criteria.equals('mailTemplateTypeId', '7072eded48ee479185c4a51ff4c9634d'),\n                        Criteria.equals('systemDefault', true),\n                    ]),\n                );\n\n                this.mailTemplateRepository.search(criteria, Shopware.Context.api).then((result) => {\n                    if (result.total <= 0) {\n                        return;\n                    }\n\n                    Shopware.State.commit('swCmsDetailCurrentCustomForm/setFormProperty',\n                        {\n                            property: 'mailTemplateId',\n                            value: result.first().id,\n                        });\n                });\n            },\n        },\n    });\n}\n","import template from './swag-cms-extensions-form-template-modal.html.twig';\nimport './swag-cms-extensions-form-template-modal.scss';\n\nconst { Component } = Shopware;\nconst { Criteria } = Shopware.Data;\n\nComponent.register('swag-cms-extensions-form-template-modal', {\n    name: 'swag-cms-extensions-form-template-modal',\n\n    template,\n\n    inject: [\n        'repositoryFactory',\n    ],\n\n    mixins: [\n        'listing',\n    ],\n\n    data() {\n        return {\n            displayModal: true,\n            formTemplates: false,\n            isLoading: false,\n            limit: 5,\n            searchTerm: '',\n        };\n    },\n\n    computed: {\n        formTemplateRepository() {\n            return this.repositoryFactory.create('swag_cms_extensions_form');\n        },\n\n        columns() {\n            return [\n                {\n                    property: 'technicalName',\n                    label: 'swag-cms-extensions.sw-cms.elements.custom-form.templateListing.templateNameLabel',\n                    inlineEdit: 'string',\n                    align: 'left',\n                },\n            ];\n        },\n    },\n\n    watch: {\n        searchTerm() {\n            this.page = 1;\n            this.isLoading = true;\n            this.getList()\n                .then(() => {\n                    this.isLoading = false;\n                });\n        },\n    },\n\n    methods: {\n        getListCriteria() {\n            const params = this.getMainListingParams();\n            const criteria = new Criteria(this.page, this.limit);\n            criteria.term = this.searchTerm || null;\n            criteria.addFilter(Criteria.equals('isTemplate', true));\n            criteria.addSorting(Criteria.sort('technicalName', params.sortDirection, params.naturalSorting));\n\n            return criteria;\n        },\n\n        getList() {\n            this.isLoading = true;\n\n            return this.formTemplateRepository.search(this.getListCriteria(), Shopware.Context.api).then((searchResult) => {\n                this.total = searchResult.total;\n                this.page = searchResult.criteria.page;\n                this.limit = searchResult.criteria.limit;\n                this.formTemplates = searchResult;\n                this.isLoading = false;\n            });\n        },\n\n        onModalClose() {\n            // This dismounts the sw-modal it self\n            this.displayModal = false;\n\n            // The event fired is used to dismount this component\n            this.$nextTick(() => {\n                this.$emit('modal-close');\n            });\n        },\n\n        onInlineEditSave(promise, formTemplate) {\n            this.$emit('template-updated', formTemplate);\n        },\n\n        onRename(item) {\n            this.$refs.templateEntityListing.currentInlineEditId = item.id;\n            this.$refs.templateEntityListing.isInlineEditActive = true;\n        },\n    },\n});\n","import template from './swag-cms-extensions-form-editor-modal.html.twig';\nimport './swag-cms-extensions-form-editor-modal.scss';\n\nconst { Component } = Shopware;\nconst { Criteria, ChangesetGenerator, ErrorResolver } = Shopware.Data;\nconst { mapState, mapPropertyErrors } = Shopware.Component.getComponentHelper();\n\nComponent.register('swag-cms-extensions-form-editor-modal', {\n    name: 'swag-cms-extensions-form-editor-modal',\n\n    template,\n\n    inject: [\n        'SwagCmsExtensionsFormValidationService',\n    ],\n\n    mixins: [\n        'cms-state',\n    ],\n\n    data() {\n        return {\n            displayModal: true,\n            showCreateTemplateModal: false,\n            initiallyValidated: false,\n        };\n    },\n\n    computed: {\n        ...mapState('swCmsDetailCurrentCustomForm', [\n            'form',\n        ]),\n\n        ...mapPropertyErrors('form', [\n            'technicalName',\n            'title',\n            'confirmationText',\n            'receivers',\n            'mailTemplateId',\n        ]),\n\n        technicalName: {\n            set(newTechnicalName) {\n                Shopware.State.commit(\n                    'swCmsDetailCurrentCustomForm/setFormProperty',\n                    {\n                        property: 'technicalName',\n                        value: newTechnicalName,\n                    },\n                );\n            },\n\n            get() {\n                if (this.form === null) {\n                    return '';\n                }\n\n                return this.form.technicalName;\n            },\n        },\n\n        mailTemplateId: {\n            set(newMailTemplateId) {\n                Shopware.State.commit(\n                    'swCmsDetailCurrentCustomForm/setFormProperty',\n                    {\n                        property: 'mailTemplateId',\n                        value: newMailTemplateId,\n                    },\n                );\n            },\n\n            get() {\n                if (this.form === null) {\n                    return null;\n                }\n\n                return this.form.mailTemplateId;\n            },\n        },\n\n        title: {\n            set(newTitle) {\n                Shopware.State.commit(\n                    'swCmsDetailCurrentCustomForm/setFormProperty',\n                    {\n                        property: 'title',\n                        value: newTitle,\n                    },\n                );\n            },\n\n            get() {\n                if (this.form === null) {\n                    return '';\n                }\n\n                return this.form.title;\n            },\n        },\n\n        successMessage: {\n            set(newSuccessMessage) {\n                Shopware.State.commit(\n                    'swCmsDetailCurrentCustomForm/setFormProperty',\n                    {\n                        property: 'successMessage',\n                        value: newSuccessMessage,\n                    },\n                );\n            },\n\n            get() {\n                if (this.form === null) {\n                    return '';\n                }\n\n                return this.form.successMessage;\n            },\n        },\n\n        receivers: {\n            set(newReceivers) {\n                Shopware.State.commit(\n                    'swCmsDetailCurrentCustomForm/setFormProperty',\n                    {\n                        property: 'receivers',\n                        value: newReceivers,\n                    },\n                );\n            },\n\n            get() {\n                if (this.form === null) {\n                    return [];\n                }\n\n                return this.form.receivers;\n            },\n        },\n\n        mailTemplateCriteria() {\n            const criteria = new Criteria();\n            criteria.addAssociation('mailTemplateType');\n            criteria.addFilter(\n                Criteria.equals('mailTemplateType.technicalName', 'cms_extensions.form'),\n            );\n\n            return criteria;\n        },\n\n        fieldTabHasError() {\n            const fieldProperties = [\n                'width',\n                'type',\n                'technicalName',\n                'label',\n                'config',\n            ];\n\n            const fieldErrorExists = fieldProperties.reduce((acc, property) => {\n                if (acc) {\n                    return acc;\n                }\n\n                return Shopware.State.getters['error/existsErrorInProperty'](\n                    'swag_cms_extensions_form_group_field',\n                    property,\n                );\n            }, false);\n\n            if (fieldErrorExists) {\n                return true;\n            }\n\n            return Shopware.State.getters['error/existsErrorInProperty']('swag_cms_extensions_form_group', 'technicalName');\n        },\n\n        optionsTabHasError() {\n            return !!(this.formTechnicalNameError ||\n                this.formTitleError ||\n                this.formConfirmationTextError ||\n                this.formReceiversError ||\n                this.formMailTemplateIdError\n            );\n        },\n    },\n\n    watch: {\n        // Empty values get filtered by the DAL this watcher prevents Array function calls on null\n        receivers() {\n            if (Array.isArray(this.receivers)) {\n                return;\n            }\n\n            this.receivers = [];\n        },\n\n        form: {\n            handler() {\n                if (this.initiallyValidated || !this.form) {\n                    return;\n                }\n\n                if ((Shopware.Utils.object.hasOwnProperty(this.form, 'isFirstEdit') && this.form.isFirstEdit)) {\n                    return;\n                }\n\n                this.validateForm().catch((error) => {\n                    // The form is not valid. Add the api errors to the error state by hand.\n                    this.handleErrorResponse(error);\n                }).finally(() => {\n                    this.initiallyValidated = true;\n                });\n            },\n            immediate: true,\n            deep: true,\n        },\n    },\n\n    methods: {\n        onModalClose(persist) {\n            if (this.form.isFirstEdit) {\n                delete this.form.isFirstEdit;\n            }\n\n            if (!persist) {\n                // This dismounts the sw-modal it self\n                this.displayModal = false;\n\n                // The event fired is used to dismount this component\n                this.$nextTick(() => {\n                    this.$emit('modal-close', persist);\n                });\n\n                return;\n            }\n\n            this.validateForm().then(() => {\n                // Form is valid for the DAL. Technical names of the fields are validated by the Admin.\n                // Check if a error for the technicalName of the Field still exists.\n                if (Shopware.State.getters['error/existsErrorInProperty'](\n                    'swag_cms_extensions_form_group_field',\n                    'technicalName',\n                )) {\n                    return;\n                }\n\n                // This dismounts the sw-modal it self\n                this.displayModal = false;\n\n                // The event fired is used to dismount this component\n                this.$nextTick(() => {\n                    this.$emit('modal-close', persist);\n                });\n            }).catch((error) => {\n                // The form is not valid. Add the api errors to the error state by hand.\n                this.handleErrorResponse(error);\n            });\n        },\n\n        onCreateTemplate() {\n            this.validateForm().then(() => {\n                if (Shopware.State.getters['error/existsErrorInProperty'](\n                    'swag_cms_extensions_form_group_field',\n                    'technicalName',\n                )) {\n                    return;\n                }\n\n                this.showCreateTemplateModal = true;\n            }).catch((error) => {\n                this.handleErrorResponse(error);\n            });\n        },\n\n        onCreateTemplateModalClose() {\n            this.showCreateTemplateModal = false;\n        },\n\n        onChangeTechnicalName(newValue) {\n            // If technicalName includes spaces remove all of them\n            if (newValue.match(/\\s/)) {\n                this.technicalName = newValue.replaceAll(/\\s/g, '');\n            }\n        },\n\n        validateForm() {\n            const generator = new ChangesetGenerator();\n            const form = Shopware.State.get('swCmsDetailCurrentCustomForm').form;\n            const changes = generator.generate(form).changes;\n\n            if (!changes) {\n                return Promise.resolve();\n            }\n\n            // For each form related entity, we add an empty translation if there are none to retrieve all errors\n            if (!Shopware.Utils.object.hasOwnProperty(changes, 'translations')) {\n                changes.translations = [\n                    {\n                        languageId: Shopware.Defaults.systemLanguageId,\n                    },\n                ];\n            }\n\n            if (Shopware.Utils.object.hasOwnProperty(changes, 'groups')) {\n                changes.groups.forEach((group) => {\n                    if (!Shopware.Utils.object.hasOwnProperty(group, 'translations')) {\n                        group.translations = [\n                            {\n                                languageId: Shopware.Defaults.systemLanguageId,\n                            },\n                        ];\n                    }\n\n                    if (Shopware.Utils.object.hasOwnProperty(group, 'fields')) {\n                        group.fields.forEach((field) => {\n                            if (!Shopware.Utils.object.hasOwnProperty(field, 'translations')) {\n                                field.translations = [\n                                    {\n                                        languageId: Shopware.Defaults.systemLanguageId,\n                                    },\n                                ];\n                            }\n                        });\n                    }\n                });\n            }\n\n            return this.SwagCmsExtensionsFormValidationService.validateForm(\n                {\n                    id: form.id,\n                    ...changes,\n                },\n            ).then((response) => {\n                // Try to find form with identical technicalName\n                const hasIdenticalTechnicalNameForm = this.cmsPageState.currentPage.sections.some((section) => {\n                    return section.blocks.some((block) => {\n                        return block.slots.some((slot) => {\n                            if (!Shopware.Utils.object.hasOwnProperty(slot, 'extensions') ||\n                                !Shopware.Utils.object.hasOwnProperty(slot.extensions, 'swagCmsExtensionsForm')\n                            ) {\n                                return false;\n                            }\n\n                            // If the form we are comparing to is the current form or the names do not match return\n                            return (slot.extensions.swagCmsExtensionsForm.id !== form.id\n                                 && slot.extensions.swagCmsExtensionsForm.technicalName === form.technicalName);\n                        });\n                    });\n                });\n\n                if (!hasIdenticalTechnicalNameForm) {\n                    return Promise.resolve(response);\n                }\n\n                Shopware.State.commit('error/addApiError', {\n                    expression: `swag_cms_extensions_form.${form.id}.technicalName`,\n                    error: {\n                        id: Shopware.Utils.createId(),\n                        code: 'SWAG_CUSTOM_FORM_DUPLICATE_FORM_TECHNICAL_NAME',\n                        parameters: '__vue_devtool_undefined__',\n                        status: '400',\n                        detail: `The technical name (${form.technicalName}) is not unique in this page.`,\n                    },\n                });\n\n                return Promise.reject();\n            });\n        },\n\n        handleErrorResponse(error) {\n            const resolver = new ErrorResolver();\n            const generator = new ChangesetGenerator();\n            const form = Shopware.State.get('swCmsDetailCurrentCustomForm').form;\n\n            resolver.handleWriteErrors(\n                error.response.data,\n                [\n                    {\n                        entity: form,\n                        changes: generator.generate(form).changes,\n                    },\n                ],\n            );\n        },\n    },\n});\n","import template from './swag-cms-extensions-form-template-create-modal.html.twig';\nimport './swag-cms-extensions-form-template-create-modal.scss';\n\nconst { Component } = Shopware;\nconst { Criteria } = Shopware.Data;\n\nComponent.register('swag-cms-extensions-form-template-create-modal', {\n    name: 'swag-cms-extensions-form-template-create-modal',\n\n    template,\n\n    inject: [\n        'repositoryFactory',\n    ],\n\n    data() {\n        return {\n            templateName: '',\n            showOverwriteWarning: false,\n            showSaveSuccess: false,\n            showOverwriteSelect: false,\n            showOverwriteConfirmation: false,\n            wasOverwrite: false,\n            successMessage: '',\n            overwriteId: null,\n        };\n    },\n\n    computed: {\n        formRepository() {\n            return this.repositoryFactory.create('swag_cms_extensions_form');\n        },\n\n        groupRepository() {\n            return this.repositoryFactory.create('swag_cms_extensions_form_group');\n        },\n\n        fieldRepository() {\n            return this.repositoryFactory.create('swag_cms_extensions_form_group_field');\n        },\n\n        primaryConfirmLabel() {\n            if (this.showOverwriteWarning || this.showOverwriteSelect || this.showOverwriteConfirmation) {\n                return this.$tc('swag-cms-extensions.sw-cms.elements.custom-form.createTemplateModal.overwriteButtonLabel');\n            }\n\n            if (this.showSaveSuccess) {\n                return this.$tc('sw-wizard.closeButton');\n            }\n\n            return this.$tc('global.default.save');\n        },\n\n        templateCriteria() {\n            const criteria = new Criteria();\n            criteria.addFilter(\n                Criteria.equals('isTemplate', true),\n            );\n\n            return criteria;\n        },\n\n        overwriteConfirmationText() {\n            return this.$tc(\n                'swag-cms-extensions.sw-cms.elements.custom-form.createTemplateModal.overwriteConfirmationText',\n                0,\n                {\n                    templateName: this.templateName,\n                },\n            );\n        },\n\n        modalTitle() {\n            if (this.showOverwriteWarning ||\n                this.showOverwriteSelect ||\n                this.showOverwriteConfirmation ||\n                this.wasOverwrite\n            ) {\n                return this.$tc('swag-cms-extensions.sw-cms.elements.custom-form.createTemplateModal.titles.overwrite');\n            }\n\n            return this.$tc('swag-cms-extensions.sw-cms.elements.custom-form.createTemplateModal.titles.default');\n        },\n    },\n\n    methods: {\n        onTemplateNameChange() {\n            if (!this.showOverwriteWarning) {\n                return;\n            }\n\n            this.showOverwriteWarning = false;\n        },\n\n        onModalClose() {\n            this.$emit('modal-close');\n        },\n\n        onPrimaryConfirm() {\n            // Template got saved or overwritten, close modal\n            if (this.showSaveSuccess) {\n                this.onModalClose();\n                return;\n            }\n\n            // If the overwrite warning is already displayed and the form id to overwrite is persisted, overwrite.\n            if (this.showOverwriteConfirmation) {\n                // Delete old template and save new one with same name. Uuid change does not matter\n                this.formRepository.delete(this.overwriteId, Shopware.Context.api).then(() => {\n                    this.formRepository.save(\n                        Shopware.State.getters['swCmsDetailCurrentCustomForm/template'](\n                            this.templateName,\n                            this.formRepository,\n                            this.groupRepository,\n                            this.fieldRepository,\n                        ),\n                        Shopware.Context.api,\n                    ).then(() => {\n                        this.successMessage = this.$tc(\n                            'swag-cms-extensions.sw-cms.elements.custom-form.createTemplateModal.overwriteMessage',\n                        );\n                        this.showOverwriteConfirmation = false;\n                        this.overwriteId = null;\n                        this.wasOverwrite = true;\n                        this.showSaveSuccess = true;\n                    });\n                });\n\n                return;\n            }\n\n            if ((this.showOverwriteWarning || this.showOverwriteSelect) && this.overwriteId) {\n                this.showOverwriteWarning = false;\n                this.showOverwriteSelect = false;\n                this.showOverwriteConfirmation = true;\n                return;\n            }\n\n            // Initial try to save a template, search for template with same technical Name\n            const criteria = new Criteria(1, 1);\n            criteria.addFilter(\n                Criteria.multi('and', [\n                    Criteria.equals('isTemplate', true),\n                    Criteria.equals('technicalName', this.templateName),\n                ]),\n            );\n\n            this.formRepository.search(criteria, Shopware.Context.api).then((result) => {\n                // Template with same name found abort save and show overwrite warning\n                if (result.total === 1) {\n                    this.showOverwriteWarning = true;\n                    this.overwriteId = result.first().id;\n                    return;\n                }\n\n                // Save and show success message\n                this.formRepository.save(\n                    Shopware.State.getters['swCmsDetailCurrentCustomForm/template'](\n                        this.templateName,\n                        this.formRepository,\n                        this.groupRepository,\n                        this.fieldRepository,\n                    ),\n                    Shopware.Context.api,\n                ).then(() => {\n                    this.successMessage = this.$tc(\n                        'swag-cms-extensions.sw-cms.elements.custom-form.createTemplateModal.successMessage',\n                    );\n                    this.showSaveSuccess = true;\n                });\n            });\n        },\n\n        onOverwriteSelectChange(id, form) {\n            if (!form) {\n                this.templateName = '';\n                return;\n            }\n\n            this.templateName = form.technicalName;\n        },\n\n        openOverwriteContent() {\n            this.showOverwriteSelect = true;\n        },\n    },\n});\n","import template from './swag-cms-extensions-custom-form-element-checkbox.html.twig';\n\nconst { Component } = Shopware;\n\nComponent.register('swag-cms-extensions-custom-form-element-checkbox', {\n    template,\n\n    props: {\n        field: {\n            type: Object,\n            required: true,\n        },\n    },\n\n    computed: {\n        value() {\n            if (this.field.translated && this.field.translated.config) {\n                return this.field.translated.config.default;\n            }\n\n            if (this.field.config) {\n                return this.field.config.default;\n            }\n\n            return false;\n        },\n    },\n});\n","import template from './swag-cms-extensions-custom-form-element-email.html.twig';\n\nconst { Component } = Shopware;\n\nComponent.register('swag-cms-extensions-custom-form-element-email', {\n    template,\n\n    props: {\n        field: {\n            type: Object,\n            required: true,\n        },\n    },\n});\n","import template from './swag-cms-extensions-custom-form-element-number.html.twig';\n\nconst { Component } = Shopware;\n\nComponent.register('swag-cms-extensions-custom-form-element-number', {\n    template,\n\n    props: {\n        field: {\n            type: Object,\n            required: true,\n        },\n    },\n\n    computed: {\n        value() {\n            const placeholder = this.field.translated ? this.field.translated.placeholder : this.field.placeholder;\n            return Number(placeholder);\n        },\n    },\n});\n","import template from './swag-cms-extensions-custom-form-element-select.html.twig';\n\nconst { Component } = Shopware;\n\nComponent.register('swag-cms-extensions-custom-form-element-select', {\n    template,\n\n    props: {\n        field: {\n            type: Object,\n            required: true,\n        },\n    },\n});\n","import template from './swag-cms-extensions-custom-form-element-text.html.twig';\n\nconst { Component } = Shopware;\n\nComponent.register('swag-cms-extensions-custom-form-element-text', {\n    template,\n\n    props: {\n        field: {\n            type: Object,\n            required: true,\n        },\n    },\n});\n","import template from './swag-cms-extensions-custom-form-element-textarea.html.twig';\n\nconst { Component } = Shopware;\n\nComponent.register('swag-cms-extensions-custom-form-element-textarea', {\n    template,\n\n    props: {\n        field: {\n            type: Object,\n            required: true,\n        },\n    },\n});\n","import template from './swag-cms-extensions-custom-form-element.html.twig';\nimport './swag-cms-extensions-custom-form-element.scss';\nimport './swag-cms-extensions-custom-form-element-checkbox';\nimport './swag-cms-extensions-custom-form-element-email';\nimport './swag-cms-extensions-custom-form-element-number';\nimport './swag-cms-extensions-custom-form-element-select';\nimport './swag-cms-extensions-custom-form-element-text';\nimport './swag-cms-extensions-custom-form-element-textarea';\n\nconst { Component } = Shopware;\nconst { Criteria } = Shopware.Data;\n\nComponent.register('swag-cms-extensions-custom-form-element', {\n    template,\n\n    inject: [\n        'repositoryFactory',\n    ],\n\n    mixins: [\n        'cms-element',\n    ],\n\n    data() {\n        return {\n            loadedGroups: [],\n        };\n    },\n\n    computed: {\n        groupRepository() {\n            return this.repositoryFactory.create('swag_cms_extensions_form_group');\n        },\n\n        showPreview() {\n            return this.groups.length !== 0;\n        },\n\n        slotHasFormExtension() {\n            return Shopware.Utils.object.hasOwnProperty(this.element, 'extensions') &&\n                Shopware.Utils.object.hasOwnProperty(this.element.extensions, 'swagCmsExtensionsForm');\n        },\n\n        slotHasGroups() {\n            return this.slotHasFormExtension &&\n                Shopware.Utils.object.hasOwnProperty(this.element.extensions.swagCmsExtensionsForm, 'groups') &&\n                this.element.extensions.swagCmsExtensionsForm.groups.length > 0;\n        },\n\n        groups() {\n            if (this.slotHasGroups) {\n                return this.element.extensions.swagCmsExtensionsForm.groups;\n            }\n\n            return this.loadedGroups;\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.loadForm();\n        },\n\n        loadForm() {\n            this.loadedGroups = [];\n\n            if (this.slotHasFormExtension && this.element.extensions.swagCmsExtensionsForm.id !== null) {\n                const criteria = new Criteria();\n                criteria.addFilter(\n                    Criteria.equals('formId', this.element.extensions.swagCmsExtensionsForm.id),\n                );\n                criteria.addAssociation('fields');\n                criteria.addSorting(Criteria.sort('position'));\n                criteria.getAssociation('fields').addSorting(Criteria.sort('position'));\n\n                this.groupRepository.search(criteria, Shopware.Context.api).then((result) => {\n                    this.loadedGroups = result;\n                });\n            }\n        },\n\n        getFieldClass(field) {\n            return [`swag-cms-extensions-custom-form-element__field-col-${field.width}`];\n        },\n\n        getFieldComponent(field) {\n            const componentName = `swag-cms-extensions-custom-form-element-${field.type}`;\n\n            if (!Component.getComponentRegistry().has(componentName)) {\n                return null;\n            }\n\n            return componentName;\n        },\n    },\n});\n","import template from './swag-cms-extensions-form-fields.html.twig';\nimport './swag-cms-extensions-form-fields.scss';\n\nconst { Component } = Shopware;\nconst { Criteria } = Shopware.Data;\nconst { mapState } = Shopware.Component.getComponentHelper();\n\nComponent.register('swag-cms-extensions-form-fields', {\n    name: 'swag-cms-extensions-form-fields',\n\n    template,\n\n    inject: [\n        'repositoryFactory',\n    ],\n\n    mixins: [\n        'swag-cms-extensions-form-group-field-error',\n    ],\n\n    computed: {\n        ...mapState('swCmsDetailCurrentCustomForm', {\n            form: state => state.form,\n            activeItem: state => state.activeItem,\n            groups: state => state.form.groups,\n        }),\n\n        groupRepository() {\n            return this.repositoryFactory.create('swag_cms_extensions_form_group');\n        },\n\n        fieldRepository() {\n            return this.repositoryFactory.create('swag_cms_extensions_form_group_field');\n        },\n\n        formHasGroups() {\n            return this.groups.length > 0;\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            if (this.groups.length >= 1) {\n                this.setFirstGroupAsActiveItem();\n                return;\n            }\n\n            const criteria = new Criteria();\n            criteria.addFilter(\n                Criteria.equals('formId', this.form.id),\n            );\n            criteria.addAssociation('fields');\n            criteria.addSorting(Criteria.sort('position'));\n            criteria.getAssociation('fields').addSorting(Criteria.sort('position'));\n\n            this.groupRepository.search(criteria, Shopware.Context.api).then((groups) => {\n                Shopware.State.commit('swCmsDetailCurrentCustomForm/setFormProperty', {\n                    property: 'groups',\n                    value: groups,\n                });\n\n                if (this.groups.length >= 1) {\n                    this.setFirstGroupAsActiveItem();\n                }\n            });\n        },\n\n        setFirstGroupAsActiveItem() {\n            Shopware.State.commit('swCmsDetailCurrentCustomForm/setActiveItem', this.groups[0]);\n        },\n\n        onStartEditor() {\n            this.onGroupAdd();\n        },\n\n        onGroupAdd() {\n            Shopware.State.dispatch('swCmsDetailCurrentCustomForm/addGroup', {\n                groupRepository: this.groupRepository,\n                fieldRepository: this.fieldRepository,\n                groupPrefix: this.$tc(\n                    'swag-cms-extensions.sw-cms.components.form-editor.group.groupNamePrefix',\n                ),\n                fieldPrefix: this.$tc(\n                    'swag-cms-extensions.sw-cms.components.form-editor.group.field.fieldPrefix',\n                ),\n                context: Shopware.Context.api,\n            });\n\n            this.validateDuplicateTechnicalName(this.form, this.form.groups.last().fields.last());\n        },\n    },\n});\n","import template from './swag-cms-extensions-form-editor-empty-state.html.twig';\nimport './swag-cms-extensions-form-editor-empty-state.scss';\n\nconst { Component } = Shopware;\n\nComponent.register('swag-cms-extensions-form-editor-empty-state', {\n    name: 'swag-cms-extensions-form-editor-empty-state',\n\n    template,\n\n    methods: {\n        onStartEditor() {\n            this.$emit('start-editor');\n        },\n    },\n});\n","import template from './swag-cms-extensions-form-editor-group.html.twig';\nimport './swag-cms-extensions-form-editor-group.scss';\n\nconst { Component } = Shopware;\nconst { mapState } = Shopware.Component.getComponentHelper();\n\nComponent.register('swag-cms-extensions-form-editor-group', {\n    name: 'swag-cms-extensions-form-editor-group',\n\n    template,\n\n    inject: [\n        'repositoryFactory',\n    ],\n\n    mixins: [\n        'cms-state',\n        'position',\n        'swag-cms-extensions-form-group-field-error',\n    ],\n\n    props: {\n        group: {\n            type: Object,\n            required: true,\n        },\n\n        groupCount: {\n            type: Number,\n            required: true,\n        },\n    },\n\n    computed: {\n        ...mapState('swCmsDetailCurrentCustomForm', [\n            'activeItem',\n            'form',\n        ]),\n\n        groupHasError() {\n            return !!Shopware.State.getters['error/getErrorsForEntity'](\n                'swag_cms_extensions_form_group',\n                this.group.id,\n            );\n        },\n\n        formGroupRepository() {\n            return this.repositoryFactory.create('swag_cms_extensions_form_group');\n        },\n\n        formFieldRepository() {\n            return this.repositoryFactory.create('swag_cms_extensions_form_group_field');\n        },\n\n        isActive() {\n            return this.group.id === this.activeItem.id;\n        },\n\n        groupDragData() {\n            return {\n                delay: 200,\n                dragGroup: 'editor-group',\n                data: { group: this.group },\n                onDragEnter: this.onGroupDragSort,\n                onDrop: this.onGroupDragStop,\n            };\n        },\n\n        groupDropData() {\n            return {\n                dragGroup: 'editor-group',\n                data: { group: this.group },\n            };\n        },\n    },\n\n    methods: {\n        onAddField() {\n            Shopware.State.commit('swCmsDetailCurrentCustomForm/addField', {\n                groupId: this.group.id,\n                repository: this.formFieldRepository,\n                context: Shopware.Context.api,\n                prefix: this.$tc(\n                    'swag-cms-extensions.sw-cms.components.form-editor.group.field.fieldPrefix',\n                ),\n            });\n\n            this.validateDuplicateTechnicalName(this.form, this.group.fields.last());\n        },\n\n        onTitleClick() {\n            Shopware.State.commit('swCmsDetailCurrentCustomForm/setActiveItem', this.group);\n        },\n\n        onMoveUp() {\n            Shopware.State.commit('swCmsDetailCurrentCustomForm/moveItem', {\n                itemId: this.group.id,\n                callback: this.lowerPositionValue,\n            });\n        },\n\n        onMoveDown() {\n            Shopware.State.commit('swCmsDetailCurrentCustomForm/moveItem', {\n                itemId: this.group.id,\n                callback: this.raisePositionValue,\n            });\n        },\n\n        onDuplicate() {\n            Shopware.State.dispatch('swCmsDetailCurrentCustomForm/duplicateGroup', {\n                groupId: this.group.id,\n                groupRepository: this.formGroupRepository,\n                groupPrefix: this.$tc(\n                    'swag-cms-extensions.sw-cms.components.form-editor.group.groupNamePrefix',\n                ),\n                fieldRepository: this.formFieldRepository,\n                context: Shopware.Context.api,\n            });\n        },\n\n        onDelete() {\n            const fieldIds = this.group.fields.map(field => field.id);\n\n            Shopware.State.commit('swCmsDetailCurrentCustomForm/deleteGroup', this.group.id);\n\n            // Remove errors in state for fields in group\n            fieldIds.forEach((fieldId) => {\n                const errors = Shopware.State.getters['error/getErrorsForEntity'](\n                    'swag_cms_extensions_form_group_field',\n                    fieldId,\n                );\n\n                if (!errors) {\n                    return;\n                }\n\n                Object.keys(errors).forEach((key) => {\n                    Shopware.State.dispatch(\n                        'error/removeApiError',\n                        { expression: errors[key].selfLink },\n                    );\n                });\n            });\n\n            // Remove errors in state for the group\n            const errors = Shopware.State.getters['error/getErrorsForEntity'](\n                'swag_cms_extensions_form_group',\n                this.group.id,\n            );\n\n            if (!errors) {\n                return;\n            }\n\n            Object.keys(errors).forEach((key) => {\n                Shopware.State.dispatch(\n                    'error/removeApiError',\n                    { expression: errors[key].selfLink },\n                );\n            });\n        },\n\n        onGroupDragStop() {\n            Shopware.State.commit('swCmsDetailCurrentCustomForm/setGroupProperty', {\n                groupId: this.group.id,\n                property: 'isDragging',\n                value: false,\n            });\n        },\n\n        onGroupDragSort(dragData, dropData, validDrop) {\n            if (!validDrop) {\n                return;\n            }\n\n            if (dragData.group.position !== dropData.group.position) {\n                Shopware.State.commit('swCmsDetailCurrentCustomForm/setGroupProperty', {\n                    groupId: this.group.id,\n                    property: 'isDragging',\n                    value: true,\n                });\n\n                Shopware.State.dispatch('swCmsDetailCurrentCustomForm/setItemPosition', {\n                    itemId: dragData.group.id,\n                    to: dropData.group.position,\n                    from: dragData.group.position,\n                    callbackUp: this.lowerPositionValue,\n                    callbackDown: this.raisePositionValue,\n                });\n            }\n        },\n    },\n});\n","import template from './swag-cms-extensions-form-editor-group-field.html.twig';\nimport './swag-cms-extensions-form-editor-group-field.scss';\n\nconst { Component } = Shopware;\nconst { mapState } = Shopware.Component.getComponentHelper();\n\nComponent.register('swag-cms-extensions-form-editor-group-field', {\n    name: 'swag-cms-extensions-form-editor-group-field',\n\n    template,\n\n    inject: [\n        'repositoryFactory',\n    ],\n\n    mixins: [\n        'cms-state',\n        'position',\n    ],\n\n    props: {\n        field: {\n            type: Object,\n            required: true,\n        },\n\n        groupId: {\n            type: String,\n            required: true,\n        },\n\n        groupCount: {\n            type: Number,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            showMoveFieldToGroupModal: false,\n            moveToGroupId: null,\n        };\n    },\n\n    computed: {\n        ...mapState('swCmsDetailCurrentCustomForm', {\n            activeItem: state => state.activeItem,\n            groups: state => state.form.groups,\n        }),\n\n        fieldHasError() {\n            return !!Shopware.State.getters['error/getErrorsForEntity'](\n                'swag_cms_extensions_form_group_field',\n                this.field.id,\n            );\n        },\n\n        moveToGroups() {\n            return this.groups.filter(group => group.id !== this.groupId);\n        },\n\n        isActive() {\n            return this.field.id === this.activeItem.id;\n        },\n\n        fieldDragData() {\n            return {\n                delay: 200,\n                dragGroup: `editor-field-${this.groupId}`,\n                data: { field: this.field },\n                onDragEnter: this.onFieldDragSort,\n                onDrop: this.onFieldDragStop,\n            };\n        },\n\n        fieldDropData() {\n            return {\n                dragGroup: `editor-field-${this.groupId}`,\n                data: { field: this.field },\n            };\n        },\n\n        fieldRepository() {\n            return this.repositoryFactory.create('swag_cms_extensions_form_group_field');\n        },\n    },\n\n    methods: {\n        onTitleClick() {\n            Shopware.State.commit('swCmsDetailCurrentCustomForm/setActiveItem', this.field);\n        },\n\n        onDelete() {\n            Shopware.State.commit(\n                'swCmsDetailCurrentCustomForm/deleteField',\n                {\n                    fieldId: this.field.id,\n                    groupId: this.groupId,\n                },\n            );\n\n            const errors = Shopware.State.getters['error/getErrorsForEntity'](\n                'swag_cms_extensions_form_group_field',\n                this.field.id,\n            );\n\n            if (!errors) {\n                return;\n            }\n\n            Object.keys(errors).forEach((key) => {\n                Shopware.State.dispatch(\n                    'error/removeApiError',\n                    { expression: errors[key].selfLink },\n                );\n            });\n        },\n\n        onDuplicate() {\n            Shopware.State.commit('swCmsDetailCurrentCustomForm/duplicateField', {\n                groupId: this.groupId,\n                fieldId: this.field.id,\n                repository: this.fieldRepository,\n                context: Shopware.Context.api,\n            });\n        },\n\n        onEdit() {\n            Shopware.State.commit('swCmsDetailCurrentCustomForm/setActiveItem', this.field);\n        },\n\n        onMoveDown() {\n            Shopware.State.commit('swCmsDetailCurrentCustomForm/moveItem', {\n                itemId: this.field.id,\n                callback: this.raisePositionValue,\n            });\n        },\n\n        onMoveUp() {\n            Shopware.State.commit('swCmsDetailCurrentCustomForm/moveItem', {\n                itemId: this.field.id,\n                callback: this.lowerPositionValue,\n            });\n        },\n\n        onFieldDragStop(dragData) {\n            Shopware.State.commit('swCmsDetailCurrentCustomForm/setFieldProperty', {\n                fieldId: dragData.field.id,\n                property: 'isDragging',\n                value: false,\n            });\n        },\n\n        onFieldDragSort(dragData, dropData, validDrop) {\n            if (!validDrop) {\n                return;\n            }\n\n            if (dragData.field.position !== dropData.field.position) {\n                Shopware.State.commit('swCmsDetailCurrentCustomForm/setFieldProperty', {\n                    fieldId: dragData.field.id,\n                    property: 'isDragging',\n                    value: true,\n                });\n\n                Shopware.State.dispatch('swCmsDetailCurrentCustomForm/setItemPosition', {\n                    itemId: dragData.field.id,\n                    to: dropData.field.position,\n                    from: dragData.field.position,\n                    callbackUp: this.lowerPositionValue,\n                    callbackDown: this.raisePositionValue,\n                });\n            }\n        },\n\n        onMoveToGroupModalOpen() {\n            this.showMoveFieldToGroupModal = true;\n        },\n\n        onMoveToGroupModalClose() {\n            this.showMoveFieldToGroupModal = false;\n        },\n\n        moveFieldToGroup() {\n            this.onMoveToGroupModalClose();\n\n            this.$nextTick(() => {\n                Shopware.State.dispatch('swCmsDetailCurrentCustomForm/moveFieldToGroup', {\n                    toGroupId: this.moveToGroupId,\n                    fromGroupId: this.groupId,\n                    fieldId: this.field.id,\n                    fieldRepository: this.fieldRepository,\n                    context: Shopware.Context.api,\n                });\n            });\n        },\n    },\n});\n","import template from './swag-cms-extensions-form-editor-settings-field-type-base.html.twig';\n\nconst { Component } = Shopware;\nconst { mapState } = Shopware.Component.getComponentHelper();\n\nComponent.register('swag-cms-extensions-form-editor-settings-field-type-base', {\n    name: 'swag-cms-extensions-form-editor-settings-field-type-base',\n\n    template,\n\n    computed: {\n        ...mapState('swCmsDetailCurrentCustomForm', {\n            field: state => state.activeItem,\n        }),\n    },\n});\n","import template from './swag-cms-extensions-form-editor-settings-field-type-header.html.twig';\n\nconst { Component } = Shopware;\nconst { mapState, mapPropertyErrors } = Shopware.Component.getComponentHelper();\n\nComponent.register('swag-cms-extensions-form-editor-settings-field-type-header', {\n    name: 'swag-cms-extensions-form-editor-settings-field-type-header',\n\n    template,\n\n    mixins: [\n        'swag-cms-extensions-form-group-field-error',\n    ],\n\n    computed: {\n        ...mapState('swCmsDetailCurrentCustomForm', {\n            field: state => state.activeItem,\n            form: state => state.form,\n        }),\n\n        ...mapPropertyErrors('field', [\n            'technicalName',\n            'label',\n            'type',\n            'width',\n        ]),\n\n        technicalName: {\n            set(newTechnicalName) {\n                Shopware.State.commit(\n                    'swCmsDetailCurrentCustomForm/setFieldProperty',\n                    {\n                        fieldId: this.field.id,\n                        property: 'technicalName',\n                        value: newTechnicalName,\n                    },\n                );\n            },\n\n            get() {\n                return this.field.technicalName;\n            },\n        },\n\n        label: {\n            set(newLabel) {\n                Shopware.State.commit(\n                    'swCmsDetailCurrentCustomForm/setFieldProperty',\n                    {\n                        fieldId: this.field.id,\n                        property: 'label',\n                        value: newLabel,\n                    },\n                );\n            },\n\n            get() {\n                return this.field.label;\n            },\n        },\n\n        type: {\n            set(newType) {\n                Shopware.State.commit(\n                    'swCmsDetailCurrentCustomForm/setFieldType',\n                    {\n                        fieldId: this.field.id,\n                        type: newType,\n                    },\n                );\n            },\n\n            get() {\n                return this.field.type;\n            },\n        },\n\n        width: {\n            set(newWidth) {\n                Shopware.State.commit(\n                    'swCmsDetailCurrentCustomForm/setFieldProperty',\n                    {\n                        fieldId: this.field.id,\n                        property: 'width',\n                        value: newWidth,\n                    },\n                );\n            },\n\n            get() {\n                return this.field.width;\n            },\n        },\n\n        types() {\n            return [\n                {\n                    value: 'text',\n                    label: this.$tc('swag-cms-extensions.sw-cms.components.form-editor.settings-field.types.text'),\n                },\n                {\n                    value: 'email',\n                    label: this.$tc('swag-cms-extensions.sw-cms.components.form-editor.settings-field.types.email'),\n                },\n                {\n                    value: 'number',\n                    label: this.$tc('swag-cms-extensions.sw-cms.components.form-editor.settings-field.types.number'),\n                },\n                {\n                    value: 'checkbox',\n                    label: this.$tc('swag-cms-extensions.sw-cms.components.form-editor.settings-field.types.checkbox'),\n                },\n                {\n                    value: 'select',\n                    label: this.$tc('swag-cms-extensions.sw-cms.components.form-editor.settings-field.types.select'),\n                },\n                {\n                    value: 'textarea',\n                    label: this.$tc('swag-cms-extensions.sw-cms.components.form-editor.settings-field.types.textarea'),\n                },\n            ];\n        },\n\n        widths() {\n            return [\n                {\n                    value: 1,\n                    label: '8%',\n                },\n                {\n                    value: 2,\n                    label: '17%',\n                },\n                {\n                    value: 3,\n                    label: '25%',\n                },\n                {\n                    value: 4,\n                    label: '33%',\n                },\n                {\n                    value: 5,\n                    label: '42%',\n                },\n                {\n                    value: 6,\n                    label: '50%',\n                },\n                {\n                    value: 7,\n                    label: '58%',\n                },\n                {\n                    value: 8,\n                    label: '67%',\n                },\n                {\n                    value: 9,\n                    label: '75%',\n                },\n                {\n                    value: 10,\n                    label: '83%',\n                },\n                {\n                    value: 11,\n                    label: '92%',\n                },\n                {\n                    value: 12,\n                    label: '100%',\n                },\n            ];\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            // if no field is persisted yet, one could have changed the other field and we can revalidate\n            // otherwise, the DAL is not able to resolve that first the old field has to be renamed first\n            // we therefore need to first name this field differently and the error has to stay\n            if (this.fieldTechnicalNameError && this.form._isNew) {\n                Shopware.State.commit('error/removeApiError', {\n                    expression: `swag_cms_extensions_form_group_field.${this.field.id}.technicalName`,\n                });\n                this.validateDuplicateTechnicalName(this.form, this.field);\n            }\n        },\n\n        onTechnicalNameChange(newValue) {\n            // If technicalName includes spaces remove all of them\n            if (newValue.match(/\\s/)) {\n                this.technicalName = newValue.replaceAll(/\\s/g, '');\n            }\n\n            this.$nextTick(() => {\n                this.validateDuplicateTechnicalName(this.form, this.field);\n            });\n        },\n    },\n});\n","import template from './swag-cms-extensions-form-editor-settings-field-type-footer.html.twig';\n\nconst { Component } = Shopware;\nconst { mapState } = Shopware.Component.getComponentHelper();\n\nComponent.register('swag-cms-extensions-form-editor-settings-field-type-footer', {\n    name: 'swag-cms-extensions-form-editor-settings-field-type-footer',\n\n    template,\n\n    computed: {\n        ...mapState('swCmsDetailCurrentCustomForm', {\n            field: state => state.activeItem,\n        }),\n\n        required: {\n            set(newRequired) {\n                Shopware.State.commit(\n                    'swCmsDetailCurrentCustomForm/setFieldProperty',\n                    {\n                        fieldId: this.field.id,\n                        property: 'required',\n                        value: newRequired,\n                    },\n                );\n            },\n\n            get() {\n                return this.field.required;\n            },\n        },\n\n        errorMessage: {\n            set(newErrorMessage) {\n                Shopware.State.commit(\n                    'swCmsDetailCurrentCustomForm/setFieldProperty',\n                    {\n                        fieldId: this.field.id,\n                        property: 'errorMessage',\n                        value: newErrorMessage,\n                    },\n                );\n            },\n\n            get() {\n                return this.field.errorMessage;\n            },\n        },\n    },\n});\n","import template from './swag-cms-extensions-form-editor-settings-field-type-text.html.twig';\n\nconst { Component } = Shopware;\n\nComponent.extend('swag-cms-extensions-form-editor-settings-field-type-text',\n    'swag-cms-extensions-form-editor-settings-field-type-base',\n    {\n        name: 'swag-cms-extensions-form-editor-settings-field-type-text',\n\n        template,\n\n        computed: {\n            placeholder: {\n                set(newPlaceholder) {\n                    Shopware.State.commit('swCmsDetailCurrentCustomForm/setFieldProperty', {\n                        fieldId: this.field.id,\n                        property: 'placeholder',\n                        value: newPlaceholder,\n                    });\n                },\n\n                get() {\n                    return this.field.placeholder;\n                },\n            },\n        },\n    });\n","import template from './swag-cms-extensions-form-editor-settings-field-type-number.html.twig';\nimport './swag-cms-extensions-form-editor-settings-field-type-number.scss';\n\nconst { Component } = Shopware;\n\nComponent.extend('swag-cms-extensions-form-editor-settings-field-type-number',\n    'swag-cms-extensions-form-editor-settings-field-type-base',\n    {\n        name: 'swag-cms-extensions-form-editor-settings-field-type-number',\n\n        template,\n\n        computed: {\n            min: {\n                set(newMin) {\n                    Shopware.State.commit('swCmsDetailCurrentCustomForm/setFieldConfigProperty', {\n                        fieldId: this.field.id,\n                        property: 'min',\n                        value: newMin,\n                    });\n                },\n\n                get() {\n                    return this.field?.translated?.config?.min ?? this.field?.config?.min;\n                },\n            },\n\n            max: {\n                set(newMax) {\n                    Shopware.State.commit('swCmsDetailCurrentCustomForm/setFieldConfigProperty', {\n                        fieldId: this.field.id,\n                        property: 'max',\n                        value: newMax,\n                    });\n                },\n\n                get() {\n                    return this.field?.translated?.config?.max ?? this.field?.config?.max;\n                },\n            },\n\n            step: {\n                set(newStep) {\n                    Shopware.State.commit('swCmsDetailCurrentCustomForm/setFieldConfigProperty', {\n                        fieldId: this.field.id,\n                        property: 'step',\n                        value: newStep,\n                    });\n                },\n\n                get() {\n                    return this.field?.translated?.config?.step ?? this.field?.config?.step ?? 1;\n                },\n            },\n        },\n    });\n","import template from './swag-cms-extensions-form-editor-settings-field-type-checkbox.html.twig';\n\nconst { Component } = Shopware;\n\nComponent.extend('swag-cms-extensions-form-editor-settings-field-type-checkbox',\n    'swag-cms-extensions-form-editor-settings-field-type-base',\n    {\n        name: 'swag-cms-extensions-form-editor-settings-field-type-checkbox',\n\n        template,\n\n        computed: {\n            defaultValue: {\n                set(newDefault) {\n                    Shopware.State.commit('swCmsDetailCurrentCustomForm/setFieldConfigProperty', {\n                        fieldId: this.field.id,\n                        property: 'default',\n                        value: newDefault,\n                    });\n                },\n\n                get() {\n                    return this.field?.translated?.config?.default ?? this.field?.config?.default ?? false;\n                },\n            },\n\n            values() {\n                return [\n                    {\n                        value: true,\n                        label: this.$tc(\n                            'swag-cms-extensions.sw-cms.components.form-editor.settings-field.defaultValues.checked',\n                        ),\n                    },\n                    {\n                        value: false,\n                        label: this.$tc(\n                            'swag-cms-extensions.sw-cms.components.form-editor.settings-field.defaultValues.notChecked',\n                        ),\n                    },\n                ];\n            },\n        },\n    });\n","import template from './swag-cms-extensions-form-editor-settings-field-type-select.html.twig';\n\nconst { Component } = Shopware;\nconst { mapPropertyErrors } = Shopware.Component.getComponentHelper();\n\nComponent.extend('swag-cms-extensions-form-editor-settings-field-type-select',\n    'swag-cms-extensions-form-editor-settings-field-type-base',\n    {\n        name: 'swag-cms-extensions-form-editor-settings-field-type-select',\n\n        template,\n\n        data() {\n            return {\n                mode: null,\n            };\n        },\n\n        computed: {\n            ...mapPropertyErrors('field', [\n                'config.options',\n            ]),\n\n            options: {\n                set(newOptions) {\n                    Shopware.State.commit('swCmsDetailCurrentCustomForm/setFieldConfigProperty', {\n                        fieldId: this.field.id,\n                        property: 'options',\n                        value: Array.from(new Set(newOptions)),\n                    });\n                },\n\n                get() {\n                    return this.field?.translated?.config?.options ?? this.field?.config?.options;\n                },\n            },\n\n            entity: {\n                set(newEntity) {\n                    Shopware.State.commit('swCmsDetailCurrentCustomForm/setFieldConfigProperty', {\n                        fieldId: this.field.id,\n                        property: 'entity',\n                        value: newEntity,\n                    });\n                },\n\n                get() {\n                    return this.field?.translated?.config?.entity ?? this.field?.config?.entity;\n                },\n            },\n\n            modes() {\n                return [\n                    {\n                        value: 'entity',\n                        label: this.$tc(\n                            'swag-cms-extensions.sw-cms.components.form-editor.settings-field.modeOptionEntity',\n                        ),\n                    },\n                    {\n                        value: 'custom',\n                        label: this.$tc(\n                            'swag-cms-extensions.sw-cms.components.form-editor.settings-field.modeOptionCustom',\n                        ),\n                    },\n                ];\n            },\n\n            availableEntities() {\n                return [\n                    {\n                        value: 'country',\n                        label: this.$tc('global.entities.country'),\n                    },\n                    {\n                        value: 'salutation',\n                        label: this.$tc('global.entities.salutation'),\n                    },\n                ];\n            },\n        },\n\n        watch: {\n            options() {\n                this.updateMode();\n            },\n        },\n\n        created() {\n            this.createdComponent();\n        },\n\n        methods: {\n            createdComponent() {\n                this.updateMode();\n            },\n\n            updateMode() {\n                if (this.fieldConfigOptionsError || this.options?.length > 0) {\n                    this.mode = 'custom';\n                    return;\n                }\n\n                this.mode = 'entity';\n            },\n\n            onModeChange() {\n                Shopware.State.commit('swCmsDetailCurrentCustomForm/changeFieldSelectConfig', {\n                    fieldId: this.field.id,\n                    mode: this.mode,\n                });\n            },\n\n            onCustomOptionsChange() {\n                if (!this.fieldConfigOptionsError) {\n                    return;\n                }\n\n                Shopware.State.dispatch(\n                    'error/removeApiError',\n                    { expression: this.fieldConfigOptionsError.selfLink },\n                );\n            },\n        },\n    });\n","import template from './swag-cms-extensions-form-editor-settings-field-type-textarea.html.twig';\n\nconst { Component } = Shopware;\n\nComponent.extend('swag-cms-extensions-form-editor-settings-field-type-textarea',\n    'swag-cms-extensions-form-editor-settings-field-type-text',\n    {\n        name: 'swag-cms-extensions-form-editor-settings-field-type-textarea',\n\n        template,\n\n        computed: {\n            rows: {\n                set(newRows) {\n                    Shopware.State.commit('swCmsDetailCurrentCustomForm/setFieldConfigProperty', {\n                        fieldId: this.field.id,\n                        property: 'rows',\n                        value: newRows,\n                    });\n                },\n\n                get() {\n                    return this.field?.translated?.config?.rows ?? this.field?.config?.rows ?? 5;\n                },\n            },\n\n            scalable: {\n                set(newScalable) {\n                    Shopware.State.commit('swCmsDetailCurrentCustomForm/setFieldConfigProperty', {\n                        fieldId: this.field.id,\n                        property: 'scalable',\n                        value: newScalable,\n                    });\n                },\n\n                get() {\n                    return this.field?.translated?.config?.scalable ?? this.field?.config?.scalable ?? true;\n                },\n            },\n\n            rowsOptions() {\n                const rows = [];\n                for (let i = 1; i < 100; i += 1) {\n                    rows.push(\n                        {\n                            value: i,\n                            label: this.$tc(\n                                'swag-cms-extensions.sw-cms.components.form-editor.settings-field.rowsLabel',\n                                i,\n                            ),\n                        },\n                    );\n                }\n\n                return rows;\n            },\n        },\n    });\n","import template from './swag-cms-extensions-form-editor-settings-group.html.twig';\nimport './swag-cms-extensions-form-editor-settings-group.scss';\n\nconst { Component } = Shopware;\nconst { mapState, mapPropertyErrors } = Shopware.Component.getComponentHelper();\n\nComponent.register('swag-cms-extensions-form-editor-settings-group', {\n    name: 'swag-cms-extensions-form-editor-settings-group',\n\n    template,\n\n    computed: {\n        ...mapState('swCmsDetailCurrentCustomForm', {\n            group: state => state.activeItem,\n        }),\n\n        ...mapPropertyErrors('group', [\n            'technicalName',\n        ]),\n    },\n});\n","import template from './swag-cms-extensions-form-editor-settings-group-field.html.twig';\nimport './swag-cms-extensions-form-editor-settings-group-field.scss';\n\nconst { Component } = Shopware;\nconst { mapState } = Shopware.Component.getComponentHelper();\n\nComponent.register('swag-cms-extensions-form-editor-settings-group-field', {\n    name: 'swag-cms-extensions-form-editor-settings-group-field',\n\n    template,\n\n    data() {\n        return {\n            displayHeader: true,\n        };\n    },\n\n    computed: {\n        ...mapState('swCmsDetailCurrentCustomForm', {\n            item: state => state.activeItem,\n        }),\n\n        fieldComponentName() {\n            return `swag-cms-extensions-form-editor-settings-field-type-${this.item.type}`;\n        },\n    },\n\n    watch: {\n        item(newItem, oldItem) {\n            if (newItem.id === oldItem.id) {\n                return;\n            }\n\n            // This prevents unintentional removal of api errors on active item change\n            this.displayHeader = false;\n\n            this.$nextTick(() => {\n                this.displayHeader = true;\n            });\n        },\n    },\n});\n","import template from './swag-cms-extensions-form-editor-settings.html.twig';\nimport './swag-cms-extensions-form-editor-settings.scss';\nimport './field-types';\nimport './swag-cms-extensions-form-editor-settings-group';\nimport './swag-cms-extensions-form-editor-settings-group-field';\n\nconst { Component } = Shopware;\nconst { mapState } = Shopware.Component.getComponentHelper();\n\nComponent.register('swag-cms-extensions-form-editor-settings', {\n    name: 'swag-cms-extensions-form-editor-settings',\n\n    template,\n\n    computed: {\n        ...mapState('swCmsDetailCurrentCustomForm', {\n            item: state => state.activeItem,\n        }),\n\n        showGroupSettings() {\n            return this.item.getEntityName() === 'swag_cms_extensions_form_group';\n        },\n\n        fieldComponentName() {\n            return `swag-cms-extensions-form-editor-settings-field-type-${this.item.type}`;\n        },\n    },\n});\n","import template from './swag-cms-extensions-form-editor.html.twig';\nimport './swag-cms-extensions-form-editor.scss';\nimport './swag-cms-extensions-form-editor-empty-state';\nimport './swag-cms-extensions-form-editor-group';\nimport './swag-cms-extensions-form-editor-group-field';\nimport './swag-cms-extensions-form-editor-settings';\n\nconst { Component } = Shopware;\nconst { mapState } = Shopware.Component.getComponentHelper();\n\nComponent.register('swag-cms-extensions-form-editor', {\n    name: 'swag-cms-extensions-form-editor',\n\n    template,\n\n    mixins: [\n        'cms-state',\n    ],\n\n    computed: {\n        ...mapState('swCmsDetailCurrentCustomForm', {\n            groups: state => state.form.groups,\n        }),\n    },\n\n    methods: {\n        onGroupAdd() {\n            this.$emit('add-group');\n        },\n    },\n});\n","import template from './swag-cms-extensions-multi-email-field.html.twig';\n\nconst { Component } = Shopware;\n\nComponent.extend('swag-cms-extensions-multi-email-field', 'sw-tagged-field', {\n    template,\n\n    props: {\n        addOnKey: {\n            type: Array,\n            required: false,\n            default: () => ['enter', ' ', ',', ';'],\n        },\n    },\n\n    computed: {\n        mailPattern() {\n            return /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)+$/;\n        },\n    },\n\n    methods: {\n        performAddTag(event) {\n            if (this.disabled || this.noTriggerKey(event)) {\n                return;\n            }\n\n            if (typeof this.newTagName !== 'string' || this.newTagName === '') {\n                return;\n            }\n\n            // is an email?\n            if (this.newTagName.match(this.mailPattern) === null) {\n                this.newTagName = '';\n                return;\n            }\n\n            // no duplicates\n            if (this.value.indexOf(this.newTagName) !== -1) {\n                this.newTagName = '';\n                return;\n            }\n\n            this.$emit('change', [...this.value, this.newTagName]);\n            this.newTagName = '';\n        },\n\n        blurInput() {\n            this.setFocus(false);\n\n            // add on blur\n            const fakeEvent = new Event('keydown');\n            fakeEvent.key = this.addOnKey[0];\n            this.performAddTag(fakeEvent);\n        },\n    },\n});\n","import template from './swag-cms-extensions-custom-form-element-preview.html.twig';\nimport './swag-cms-extensions-custom-form-element-preview.scss';\n\nconst { Component } = Shopware;\n\nComponent.register('swag-cms-extensions-custom-form-element-preview', {\n    template,\n});\n","import template from './swag-cms-extensions-custom-form-element-config.html.twig';\nimport './swag-cms-extensions-custom-form-element-config.scss';\n\nconst { Component } = Shopware;\nconst { Criteria } = Shopware.Data;\n\nComponent.register('swag-cms-extensions-custom-form-element-config', {\n    template,\n\n    mixins: [\n        'cms-element',\n    ],\n\n    data() {\n        return {\n            templateId: null,\n            showFormTemplateModal: false,\n        };\n    },\n\n    computed: {\n        formTemplateCriteria() {\n            const criteria = new Criteria();\n            criteria.addFilter(\n                Criteria.equals('isTemplate', true),\n            );\n\n            return criteria;\n        },\n    },\n\n    watch: {\n        templateId() {\n            this.$emit('form-template-id-change', this.templateId);\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.initElementConfig('custom-form');\n        },\n\n        closeFormTemplateModal() {\n            this.templateId = null;\n            this.showFormTemplateModal = false;\n        },\n\n        openFormTemplateModal() {\n            this.showFormTemplateModal = true;\n        },\n\n        onTemplateUpdated(formTemplate) {\n            // If the selected form template got updated reset selection\n            if (formTemplate.id === this.templateId) {\n                this.templateId = null;\n            }\n        },\n    },\n});\n","import './component';\nimport './preview';\nimport './config';\n\nif (Shopware.Feature.isActive('FEATURE_SWAGCMSEXTENSIONS_63')) {\n    Shopware.Service('cmsService').registerCmsElement({\n        name: 'custom-form',\n        category: 'form',\n        label: 'swag-cms-extensions.sw-cms.elements.custom-form.label',\n        component: 'swag-cms-extensions-custom-form-element',\n        configComponent: 'swag-cms-extensions-custom-form-element-config',\n        previewComponent: 'swag-cms-extensions-custom-form-element-preview',\n        defaultConfig: {\n            type: {\n                source: 'static',\n                value: 'custom-form',\n            },\n        },\n    });\n}\n","import template from './sw-cms-block-custom-form.html.twig';\n\nconst { Component } = Shopware;\n\nComponent.register('sw-cms-block-custom-form', {\n    template,\n});\n","import template from './swag-cms-extensions-preview-custom-form.html.twig';\nimport './swag-cms-extensions-preview-custom-form.scss';\n\nconst { Component } = Shopware;\n\nComponent.register('swag-cms-extensions-preview-custom-form', {\n    template,\n});\n","import './component';\nimport './preview';\n\nif (Shopware.Feature.isActive('FEATURE_SWAGCMSEXTENSIONS_63')) {\n    Shopware.Service('cmsService').registerCmsBlock({\n        name: 'custom-form',\n        label: 'swag-cms-extensions.sw-cms.elements.custom-form.label',\n        category: 'form',\n        component: 'sw-cms-block-custom-form',\n        previewComponent: 'swag-cms-extensions-preview-custom-form',\n        defaultConfig: {\n            marginBottom: '20px',\n            marginTop: '20px',\n            marginLeft: '20px',\n            marginRight: '20px',\n            sizingMode: 'boxed',\n        },\n        slots: {\n            content: {\n                type: 'custom-form',\n            },\n        },\n    });\n}\n","module.exports = \"{% block sw_cms_page_form_section_name_wrapper %}\\n    {% parent %}\\n\\n    {% block sw_cms_page_form_section_anchor %}\\n        <div v-if=\\\"getScrollNavigationBySection(section) && getScrollNavigationBySection(section).active\\\"\\n             class=\\\"sw-cms-page-form__section-action sw-cms-page-form__section-anchor\\\">\\n\\n            {% block sw_cms_page_form_section_anchor_icon %}\\n                <sw-icon class=\\\"sw-cms-page-form__section-action-icon sw-cms-page-form__section-anchor-icon\\\"\\n                         name=\\\"default-action-tags\\\"\\n                         size=\\\"20\\\">\\n                </sw-icon>\\n            {% endblock %}\\n\\n            {# @deprecated tag:v3.0.0 Use `sw_cms_page_form_section_anchor_text` instead #}\\n            {% block sw_cms_page_form__section_anchor %}\\n                {% block sw_cms_page_form_section_anchor_text %}\\n                    <span class=\\\"sw-cms-page-form__section-action-label sw-cms-page-form__section-anchor-label\\\">\\n                        {{ getScrollNavigationLabel(section) }}\\n                    </span>\\n                {% endblock %}\\n            {% endblock %}\\n\\n        </div>\\n\\n    {% endblock %}\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./swag-cms-extensions-custom-form-element-config.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"baa69362\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./swag-cms-extensions-custom-form-element-preview.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"01e0b201\", content, true, {});","Shopware.Service('privileges')\n    .addPrivilegeMappingEntry({\n        category: 'permissions',\n        parent: 'content',\n        key: 'cms',\n        roles: {\n            viewer: {\n                privileges: [\n                    'swag_cms_extensions_quickview:read',\n                    'swag_cms_extensions_scroll_navigation:read',\n                    'swag_cms_extensions_scroll_navigation_page_settings:read',\n                    \"swag_cms_extensions_block_rule:read\",\n                ],\n                dependencies: [],\n            },\n            editor: {\n                privileges: [\n                    'swag_cms_extensions_quickview:update',\n                    'swag_cms_extensions_scroll_navigation:update',\n                    'swag_cms_extensions_scroll_navigation_page_settings:update',\n                ],\n                dependencies: [\n                    'cms.viewer',\n                ],\n            },\n\n            creator: {\n                privileges: [\n                    'swag_cms_extensions_quickview:create',\n                    'swag_cms_extensions_scroll_navigation:create',\n                    'swag_cms_extensions_scroll_navigation_page_settings:create',\n                ],\n                dependencies: [\n                    'cms.viewer',\n                    'cms.editor',\n                ],\n            },\n\n            deleter: {\n                privileges: [\n                    'swag_cms_extensions_quickview:delete',\n                    'swag_cms_extensions_scroll_navigation:delete',\n                    'swag_cms_extensions_scroll_navigation_page_settings:delete',\n                ],\n                dependencies: [\n                    'cms.viewer',\n                ],\n            },\n        },\n    });\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./swag-cms-extensions-form-editor-modal.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"5cc4c65c\", content, true, {});","module.exports = \"{% block swag_cms_extensions_block_behavior_config %}\\n    <div class=\\\"swag-cms-extensions-block-behavior-config\\\">\\n\\n        {% block swag_cms_extensions_block_behavior_config_rule %}\\n            <swag-cms-extensions-block-config-rule\\n                    v-if=\\\"blockRuleFeatureActive\\\"\\n                    v-model=\\\"block\\\">\\n            </swag-cms-extensions-block-config-rule>\\n        {% endblock %}\\n\\n        {% block swag_cms_extensions_block_behavior_config_quickview %}\\n            <swag-cms-extensions-block-config-quickview\\n                    v-if=\\\"quickviewFeatureActive\\\"\\n                    v-model=\\\"block\\\">\\n            </swag-cms-extensions-block-config-quickview>\\n        {% endblock %}\\n\\n    </div>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./swag-cms-extensions-form-template-create-modal.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"f477ae50\", content, true, {});","module.exports = \"{% block sw_cms_section_action_select %}\\n    {% parent %}\\n\\n    {% block sw_cms_section_action_scroll_navigation_label %}\\n        <div v-if=\\\"scrollNavigation && scrollNavigation.active\\\"\\n             class=\\\"sw-cms-section__action sw-cms-section__scroll-navigation-label\\\">\\n            <sw-icon\\n                    v-tooltip=\\\"scrollNavigationPointTooltip\\\"\\n                    name=\\\"default-action-tags\\\"\\n                    size=\\\"20\\\">\\n            </sw-icon>\\n        </div>\\n    {% endblock %}\\n{% endblock %}\\n\";","/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nexport default function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n","/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nimport listToStyles from './listToStyles'\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\nvar options = null\nvar ssrIdKey = 'data-vue-ssr-id'\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nexport default function addStylesClient (parentId, list, _isProduction, _options) {\n  isProduction = _isProduction\n\n  options = _options || {}\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[' + ssrIdKey + '~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n  if (options.ssrId) {\n    styleElement.setAttribute(ssrIdKey, obj.id)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n","module.exports = \"{% block sw_cms_section_content_block_slot %}\\n    <sw-cms-slot v-for=\\\"el in block.slots\\\"\\n                 :slot=\\\"el.slot\\\"\\n                 :key=\\\"el.id\\\"\\n                 :element=\\\"el\\\"\\n                 :disabled=\\\"disabled\\\"\\n                 :active=\\\"selectedBlock !== null && selectedBlock.id === block.id\\\"\\n                 @delete-block-id=\\\"onBlockDelete\\\">\\n    </sw-cms-slot>\\n{% endblock %}\\n\";","module.exports = \"{% block swag_cms_extensions_form_element_checkbox %}\\n    <sw-checkbox-field v-model=\\\"value\\\"\\n                       :label=\\\"field.translated ? field.translated.label : field.label\\\"\\n                       :required=\\\"field.required\\\">\\n    </sw-checkbox-field>\\n{% endblock %}\\n\";","module.exports = \"{% block swag_cms_extensions_form_editor_settings_field_type_base %}\\n    <div class=\\\"swag-cms-extensions-form-editor-settings-field-type-number\\\">\\n\\n        {% block swag_cms_extensions_form_editor_settings_field_type_number_min_max %}\\n            <div class=\\\"swag-cms-extensions-form-editor-settings-field-type-number__min-max\\\">\\n\\n                {% block swag_cms_extensions_form_editor_settings_field_type_number_min %}\\n                    <sw-number-field v-model=\\\"min\\\"\\n                                     :label=\\\"$tc('swag-cms-extensions.sw-cms.components.form-editor.settings-field.minFieldLabel')\\\"\\n                                     :max=\\\"max\\\"\\n                                     :step=\\\"step\\\"\\n                                     size=\\\"medium\\\"\\n                                     numberType=\\\"int\\\"\\n                                     allowEmpty>\\n                    </sw-number-field>\\n                {% endblock %}\\n\\n                {% block swag_cms_extensions_form_editor_settings_field_type_number_max %}\\n                    <sw-number-field v-model=\\\"max\\\"\\n                                     :label=\\\"$tc('swag-cms-extensions.sw-cms.components.form-editor.settings-field.maxFieldLabel')\\\"\\n                                     :min=\\\"min\\\"\\n                                     :step=\\\"step\\\"\\n                                     size=\\\"medium\\\"\\n                                     numberType=\\\"int\\\"\\n                                     allowEmpty>\\n                    </sw-number-field>\\n                {% endblock %}\\n\\n            </div>\\n        {% endblock %}\\n\\n        {% block swag_cms_extensions_form_editor_settings_field_type_number_step %}\\n            <sw-number-field v-model=\\\"step\\\"\\n                             :label=\\\"$tc('swag-cms-extensions.sw-cms.components.form-editor.settings-field.stepFieldLabel')\\\"\\n                             size=\\\"medium\\\"\\n                             required>\\n            </sw-number-field>\\n        {% endblock %}\\n\\n    </div>\\n{% endblock %}\\n\";","module.exports = \"{% block swag_cms_extensions_form_editor %}\\n    <div class=\\\"swag-cms-extensions-form-editor\\\">\\n\\n        {% block swag_cms_extensions_form_editor_container %}\\n            <sw-container class=\\\"swag-cms-extensions-form-editor__container\\\"\\n                          columns=\\\"50% 50%\\\">\\n\\n                {% block swag_cms_extensions_form_editor_container_content %}\\n                    {% block swag_cms_extensions_form_editor_container_content_groups_container %}\\n                        <div class=\\\"swag-cms-extensions-form-editor__group-container\\\">\\n\\n                            {% block swag_cms_extensions_form_editor_container_content_groups_container_content %}\\n                                {% block swag_cms_extensions_form_editor_container_content_groups_container_content_groups %}\\n                                    <swag-cms-extensions-form-editor-group v-for=\\\"group in groups\\\"\\n                                                                           :group=\\\"group\\\"\\n                                                                           :groupCount=\\\"groups.length\\\"\\n                                                                           :key=\\\"group.id\\\">\\n                                    </swag-cms-extensions-form-editor-group>\\n                                {% endblock %}\\n\\n                                {% block swag_cms_extensions_form_editor_container_content_groups_container_content_add_group_button %}\\n                                    <sw-button class=\\\"swag-cms-extensions-form-editor__add-group-button\\\"\\n                                               size=\\\"small\\\"\\n                                               :disabled=\\\"!isSystemDefaultLanguage\\\"\\n                                               @click=\\\"onGroupAdd\\\">\\n\\n                                        {% block swag_cms_extensions_form_editor_container_content_groups_container_content_add_group_button_text %}\\n                                            {{ $tc('swag-cms-extensions.sw-cms.components.form-editor.addGroupButton') }}\\n                                        {% endblock %}\\n\\n                                    </sw-button>\\n                                {% endblock %}\\n                            {% endblock %}\\n\\n                        </div>\\n                    {% endblock %}\\n\\n                    {% block swag_cms_extensions_form_editor_container_content_settings %}\\n                        <swag-cms-extensions-form-editor-settings>\\n                        </swag-cms-extensions-form-editor-settings>\\n                    {% endblock %}\\n                {% endblock %}\\n\\n            </sw-container>\\n        {% endblock %}\\n\\n    </div>\\n{% endblock %}\\n\";","module.exports = \"{% block swag_cms_extensions_form_element %}\\n    <div class=\\\"swag-cms-extensions-custom-form-element\\\">\\n\\n        {% block swag_cms_extensions_form_element_preview %}\\n            <div v-if=\\\"showPreview\\\"\\n                 class=\\\"swag-cms-extensions-custom-form-element__preview\\\">\\n\\n                {% block swag_cms_extensions_form_element_preview_title %}\\n                    <h3 v-if=\\\"element.extensions.swagCmsExtensionsForm.title\\\"\\n                        class=\\\"swag-cms-extensions-custom-form-element__title\\\" >\\n                        {{ element.extensions.swagCmsExtensionsForm.title }}\\n                    </h3>\\n                {% endblock %}\\n\\n                {% block swag_cms_extensions_form_element_preview_groups %}\\n                    <div v-for=\\\"group in groups\\\" class=\\\"swag-cms-extensions-custom-form-element__group\\\">\\n\\n                        {% block swag_cms_extensions_form_element_preview_group %}\\n                            {% block swag_cms_extensions_form_element_preview_group_title %}\\n                                <h6 v-if=\\\"group.title\\\"\\n                                    class=\\\"swag-cms-extensions-custom-form-element__field-col-12 swag-cms-extensions-custom-form-element__subtitle\\\">\\n                                    {{ group.title }}\\n                                </h6>\\n                            {% endblock %}\\n\\n                            {% block swag_cms_extensions_form_element_preview_fields %}\\n                                <div v-for=\\\"field in group.fields\\\"\\n                                     :class=\\\"getFieldClass(field)\\\">\\n\\n                                    {% block swag_cms_extensions_form_element_preview_field_content %}\\n                                        <component v-if=\\\"getFieldComponent(field)\\\"\\n                                                   :is=\\\"getFieldComponent(field)\\\"\\n                                                   :field=\\\"field\\\">\\n                                        </component>\\n                                    {% endblock %}\\n\\n                                    {% block swag_cms_extensions_form_element_preview_field_dummy %}\\n                                        <div v-else>\\n                                            <div class=\\\"swag-cms-extensions-custom-form-element__dummy-label\\\"></div>\\n                                            <div class=\\\"swag-cms-extensions-custom-form-element__dummy-input\\\"></div>\\n                                        </div>\\n                                    {% endblock %}\\n\\n                                </div>\\n                            {% endblock %}\\n                        {% endblock %}\\n\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_cms_extensions_form_element_preview_footer %}\\n                    <p class=\\\"swag-cms-extensions-custom-form-element__note\\\">{{ $tc('sw-cms.elements.form.element.helpText.requiredFields') }}</p>\\n\\n                    <p class=\\\"swag-cms-extensions-custom-form-element__note\\\">{{ $tc('sw-cms.elements.form.element.label.privacy') }}</p>\\n\\n                    <sw-checkbox-field :label=\\\"$tc('sw-cms.elements.form.element.helpText.privacy')\\\" />\\n\\n                    <div class=\\\"swag-cms-extensions-custom-form-element__action\\\">{{ $tc('sw-cms.elements.form.element.label.send') }}</div>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n\\n        {% block swag_cms_extensions_form_element_dummy %}\\n            <div v-else\\n                 class=\\\"swag-cms-extensions-custom-form-element__dummy\\\">\\n                <div class=\\\"swag-cms-extensions-custom-form-element__group\\\">\\n                    <div class=\\\"swag-cms-extensions-custom-form-element__field-col-4\\\">\\n                        <div class=\\\"swag-cms-extensions-custom-form-element__dummy-label\\\"></div>\\n                        <div class=\\\"swag-cms-extensions-custom-form-element__dummy-input\\\"></div>\\n                    </div>\\n                    <div class=\\\"swag-cms-extensions-custom-form-element__field-col-4\\\">\\n                        <div class=\\\"swag-cms-extensions-custom-form-element__dummy-label\\\"></div>\\n                        <div class=\\\"swag-cms-extensions-custom-form-element__dummy-input\\\"></div>\\n                    </div>\\n                    <div class=\\\"swag-cms-extensions-custom-form-element__field-col-4\\\">\\n                        <div class=\\\"swag-cms-extensions-custom-form-element__dummy-label\\\"></div>\\n                        <div class=\\\"swag-cms-extensions-custom-form-element__dummy-input\\\"></div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"swag-cms-extensions-custom-form-element__group\\\">\\n                    <div class=\\\"swag-cms-extensions-custom-form-element__field-col-6\\\">\\n                        <div class=\\\"swag-cms-extensions-custom-form-element__dummy-label\\\"></div>\\n                        <div class=\\\"swag-cms-extensions-custom-form-element__dummy-input\\\"></div>\\n                    </div>\\n                    <div class=\\\"swag-cms-extensions-custom-form-element__field-col-6\\\">\\n                        <div class=\\\"swag-cms-extensions-custom-form-element__dummy-label\\\"></div>\\n                        <div class=\\\"swag-cms-extensions-custom-form-element__dummy-input\\\"></div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"swag-cms-extensions-custom-form-element__group\\\">\\n                    <div class=\\\"swag-cms-extensions-custom-form-element__field-col-12\\\">\\n                        <div class=\\\"swag-cms-extensions-custom-form-element__dummy-label\\\"></div>\\n                        <div class=\\\"swag-cms-extensions-custom-form-element__dummy-input\\\"></div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"swag-cms-extensions-custom-form-element__group\\\">\\n                    <div class=\\\"swag-cms-extensions-custom-form-element__field-col-12\\\">\\n                        <div class=\\\"swag-cms-extensions-custom-form-element__dummy-label\\\"></div>\\n                        <div class=\\\"swag-cms-extensions-custom-form-element__dummy-textarea\\\"></div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"swag-cms-extensions-custom-form-element__group\\\">\\n                    <div class=\\\"swag-cms-extensions-custom-form-element__field-col-12\\\">\\n                        <div class=\\\"swag-cms-extensions-custom-form-element__dummy-submit\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        {% endblock %}\\n\\n    </div>\\n{% endblock %}\\n\";","module.exports = \"{% block swag_cms_extensions_form_element_number %}\\n    <sw-textarea-field :label=\\\"field.translated ? field.translated.label : field.label\\\"\\n                       :required=\\\"field.required\\\"\\n                       :value=\\\"field.translated ? field.translated.placeholder : field.placeholder\\\">\\n    </sw-textarea-field>\\n{% endblock %}\\n\";","module.exports = \"{% block swag_cms_extensions_custom_form_element_preview %}\\n    <div class=\\\"swag-cms-extensions-custom-form-element-preview\\\">\\n        <h4 class=\\\"swag-cms-extensions-custom-form-element-preview__headline\\\">{{ $tc('swag-cms-extensions.sw-cms.elements.custom-form.label') }}</h4>\\n        <div class=\\\"swag-cms-extensions-custom-form-element-preview__static_inputs\\\">\\n            <div class=\\\"swag-cms-extensions-custom-form-element-preview__input\\\"></div>\\n            <div class=\\\"swag-cms-extensions-custom-form-element-preview__input\\\"></div>\\n        </div>\\n        <div class=\\\"swag-cms-extensions-custom-form-element-preview__flexible_inputs\\\">\\n            <div class=\\\"swag-cms-extensions-custom-form-element-preview__input\\\"></div>\\n            <div class=\\\"swag-cms-extensions-custom-form-element-preview__input\\\"></div>\\n            <div class=\\\"swag-cms-extensions-custom-form-element-preview__input swag-cms-extensions-custom-form-element-preview__input-new\\\">\\n                <sw-icon name=\\\"default-basic-plus-line\\\"></sw-icon>\\n            </div>\\n        </div>\\n        <div class=\\\"swag-cms-extensions-custom-form-element-preview__action\\\">{{ $tc('sw-cms.elements.form.preview.label.send') }}</div>\\n    </div>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./sw-cms-page-form.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"75e9e82c\", content, true, {});","module.exports = \"{% block sw_select_rule_create_select_before %}\\n    {% parent %}\\n\\n    {% block swag_cms_extensions_block_rule_select_dismiss_selection %}\\n        <div class=\\\"sw-select-rule-create__dismiss-rule sw-select-result\\\" @click=\\\"dismissSelection\\\">\\n            {{ $tc('swag-cms-extensions.sw-cms.detail.blockRule.alwaysVisiblePlaceholder') }}\\n        </div>\\n    {% endblock %}\\n{% endblock %}\";","module.exports = \"{% block swag_cms_extensions_form_editor_settings_field_type_base %}\\n{% endblock %}\\n\";","module.exports = \"{% block swag_cms_extensions_form_editor_settings_field_type_base %}\\n    {% block swag_cms_extensions_form_editor_settings_field_type_text_placeholder %}\\n        <sw-text-field v-model=\\\"placeholder\\\"\\n                       :label=\\\"$tc('swag-cms-extensions.sw-cms.components.form-editor.settings-field.placeholderFieldLabel')\\\"\\n                       size=\\\"medium\\\">\\n        </sw-text-field>\\n    {% endblock %}\\n{% endblock %}\\n\";","module.exports = \"{% block swag_cms_extensions_form_editor_group %}\\n    <div class=\\\"swag-cms-extensions-form-editor-group\\\">\\n\\n        {% block swag_cms_extensions_form_editor_group_card %}\\n            <sw-card class=\\\"swag-cms-extensions-form-editor-group__card\\\"\\n                     :class=\\\"{ 'is--dragging': group.isDragging, 'has--error': groupHasError }\\\"\\n                     v-draggable=\\\"groupDragData\\\"\\n                     v-droppable=\\\"groupDropData\\\">\\n\\n                {% block swag_cms_extensions_form_editor_group_card_header %}\\n                    <div class=\\\"swag-cms-extensions-form-editor-group__header\\\">\\n\\n                        {% block swag_cms_extensions_form_editor_group_card_header_drag_icon %}\\n                            <div class=\\\"swag-cms-extensions-form-editor-group__drag-icon\\\">\\n                                <sw-icon name=\\\"small-default-x-drag-horizontal\\\" small></sw-icon>\\n                            </div>\\n                        {% endblock %}\\n\\n                        {% block swag_cms_extensions_form_editor_group_card_header_title %}\\n                            <div class=\\\"swag-cms-extensions-form-editor-group__title\\\"\\n                                 @click=\\\"onTitleClick\\\">\\n\\n                                {% block swag_cms_extensions_form_editor_group_card_header_title_text %}\\n                                    <p :class=\\\"{ active: isActive }\\\">\\n                                        <template v-if=\\\"group.title\\\">\\n                                            <span>{{ group.technicalName }}</span> <span>(</span><span>{{ group.title }}</span><span>)</span>\\n                                        </template>\\n\\n                                        <template v-else>\\n                                            <span>{{ group.technicalName }}</span>\\n                                        </template>\\n                                    </p>\\n                                {% endblock %}\\n\\n                            </div>\\n                        {% endblock %}\\n\\n                        {% block swag_cms_extensions_form_editor_group_card_header_context_button %}\\n                            <div class=\\\"swag-cms-extensions-form-editor-group__context-button\\\">\\n                                <sw-context-button>\\n\\n                                    {% block swag_cms_extensions_form_editor_group_card_header_context_button_items %}\\n                                        <div class=\\\"swag-cms-extensions-form-editor-group__context-button-container\\\">\\n\\n                                            {% block swag_cms_extensions_form_editor_group_card_header_context_button_items_move_up %}\\n                                                <sw-context-menu-item @click=\\\"onMoveUp\\\">\\n\\n                                                    {% block swag_cms_extensions_form_editor_group_card_header_context_button_items_move_up_text %}\\n                                                        {{ $tc('swag-cms-extensions.sw-cms.components.form-editor.group.actions.moveUp') }}\\n                                                    {% endblock %}\\n\\n                                                </sw-context-menu-item>\\n                                            {% endblock %}\\n\\n                                            {% block swag_cms_extensions_form_editor_group_card_header_context_button_items_move_down %}\\n                                                <sw-context-menu-item @click=\\\"onMoveDown\\\">\\n\\n                                                    {% block swag_cms_extensions_form_editor_group_card_header_context_button_items_move_down_text %}\\n                                                        {{ $tc('swag-cms-extensions.sw-cms.components.form-editor.group.actions.moveDown') }}\\n                                                    {% endblock %}\\n\\n                                                </sw-context-menu-item>\\n                                            {% endblock %}\\n\\n                                            {% block swag_cms_extensions_form_editor_group_card_header_context_button_items_divider %}\\n                                                <sw-context-menu-divider>\\n                                                </sw-context-menu-divider>\\n                                            {% endblock %}\\n\\n                                            {% block swag_cms_extensions_form_editor_group_card_header_context_button_items_edit %}\\n                                                <sw-context-menu-item @click=\\\"onTitleClick\\\">\\n\\n                                                    {% block swag_cms_extensions_form_editor_group_card_header_context_button_items_edit_text %}\\n                                                        {{ $tc('global.default.edit') }}\\n                                                    {% endblock %}\\n\\n                                                </sw-context-menu-item>\\n                                            {% endblock %}\\n\\n                                            {% block swag_cms_extensions_form_editor_group_card_header_context_button_items_duplicate %}\\n                                                <sw-context-menu-item :disabled=\\\"!isSystemDefaultLanguage\\\"\\n                                                                      @click=\\\"onDuplicate\\\">\\n\\n                                                    {% block swag_cms_extensions_form_editor_group_card_header_context_button_items_duplicate_text %}\\n                                                        {{ $tc('swag-cms-extensions.sw-cms.components.form-editor.group.actions.duplicate') }}\\n                                                    {% endblock %}\\n\\n                                                </sw-context-menu-item>\\n                                            {% endblock %}\\n\\n                                            {% block swag_cms_extensions_form_editor_group_card_header_context_button_items_delete %}\\n                                                <sw-context-menu-item variant=\\\"danger\\\"\\n                                                                      :disabled=\\\"!isSystemDefaultLanguage\\\"\\n                                                                      @click=\\\"onDelete\\\">\\n\\n                                                    {% block swag_cms_extensions_form_editor_group_card_header_context_button_items_delete_text %}\\n                                                        {{ $tc('global.default.delete') }}\\n                                                    {% endblock %}\\n\\n                                                </sw-context-menu-item>\\n                                            {% endblock %}\\n\\n                                        </div>\\n                                    {% endblock %}\\n\\n                                </sw-context-button>\\n                            </div>\\n                        {% endblock %}\\n\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_cms_extensions_form_editor_group_card_fields %}\\n                    <swag-cms-extensions-form-editor-group-field v-for=\\\"field in group.fields\\\"\\n                                                                 :field=\\\"field\\\"\\n                                                                 :groupCount=\\\"groupCount\\\"\\n                                                                 :groupId=\\\"group.id\\\"\\n                                                                 :key=\\\"field.id\\\">\\n                    </swag-cms-extensions-form-editor-group-field>\\n                {% endblock %}\\n\\n                {% block swag_cms_extensions_form_editor_group_card_add_field_button %}\\n                    <sw-button class=\\\"swag-cms-extensions-form-editor-group__add-field-button\\\"\\n                               size=\\\"small\\\"\\n                               :disabled=\\\"!isSystemDefaultLanguage\\\"\\n                               @click=\\\"onAddField\\\">\\n\\n                        {% block swag_cms_extensions_form_editor_group_card_add_field_button_text %}\\n                            {{ $tc('swag-cms-extensions.sw-cms.components.form-editor.group.field.addFieldButton') }}\\n                        {% endblock %}\\n\\n                    </sw-button>\\n                {% endblock %}\\n\\n            </sw-card>\\n        {% endblock %}\\n\\n    </div>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./swag-cms-extensions-form-editor-group-field.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"13b7224d\", content, true, {});","module.exports = \"{% block swag_cms_extensions_form_fields %}\\n    <div class=\\\"swag-cms-extensions-form-fields\\\">\\n\\n        {% block swag_cms_extensions_form_fields_label %}\\n            <div class=\\\"swag-cms-extensions-form-fields__label\\\">\\n                <label>{{ $tc('swag-cms-extensions.sw-cms.components.form-editor.title') }}</label>\\n            </div>\\n        {% endblock %}\\n\\n        {% block swag_cms_extensions_form_fields_editor %}\\n            <swag-cms-extensions-form-editor v-if=\\\"formHasGroups && activeItem\\\"\\n                                             :groups=\\\"groups\\\"\\n                                             @add-group=\\\"onGroupAdd\\\">\\n            </swag-cms-extensions-form-editor>\\n        {% endblock %}\\n\\n        {% block swag_cms_extensions_form_fields_editor_empty_state %}\\n            <swag-cms-extensions-form-editor-empty-state v-else\\n                                                         @start-editor=\\\"onStartEditor\\\">\\n            </swag-cms-extensions-form-editor-empty-state>\\n        {% endblock %}\\n\\n    </div>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./swag-cms-extensions-block-config-rule.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"79844a44\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./swag-cms-extensions-form-editor-settings-group.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"10af8984\", content, true, {});","module.exports = \"{% block sw_cms_sidebar_block_layout_settings_content %}\\n    {% parent %}\\n\\n    {% block swag_cms_extensions_sidebar_block_behavior_settings_content %}\\n        <swag-cms-extensions-block-behavior-config\\n                v-model=\\\"selectedBlock\\\">\\n        </swag-cms-extensions-block-behavior-config>\\n    {% endblock %}\\n{% endblock %}\\n\\n{% block sw_cms_sidebar_section_settings_content %}\\n    {% parent %}\\n\\n    {% block swag_cms_extensions_sidebar_section_settings_scroll_navigation %}\\n        <sw-sidebar-collapse\\n            v-if=\\\"scrollNavigationFeatureActive\\\"\\n            :expandOnLoading=\\\"true\\\">\\n\\n            {% block swag_cms_extensions_sidebar_section_settings_scroll_navigation_header %}\\n                <template #header>\\n                    <span>\\n                        {{ $tc('swag-cms-extensions.sw-cms.detail.scrollNavigation.title') }}\\n                    </span>\\n                </template>\\n            {% endblock %}\\n\\n            {% block swag_cms_extensions_sidebar_section_settings_scroll_navigation_content %}\\n                <template #content>\\n                    <swag-cms-extensions-section-scroll-behavior-config\\n                        v-model=\\\"selectedSection\\\">\\n                    </swag-cms-extensions-section-scroll-behavior-config>\\n                </template>\\n            {% endblock %}\\n        </sw-sidebar-collapse>\\n    {% endblock %}\\n{% endblock %}\\n\\n{% block sw_cms_sidebar_navigator_section_header %}\\n    <div v-if=\\\"scrollNavigationFeatureActive\\\"\\n         :class=\\\"navigatorSectionHeaderWrapperClass(section)\\\">\\n        {% parent %}\\n    </div>\\n\\n    <template v-else>\\n        {% parent %}\\n    </template>\\n{% endblock %}\\n\\n{% block sw_cms_sidebar_navigator_section_menu %}\\n    {% block sw_cms_sidebar_navigator_section_menu_scroll_navigation_anchor %}\\n        <div v-if=\\\"scrollNavigationIsActive(section)\\\">\\n            <sw-icon v-tooltip=\\\"scrollNavigationAnchorTooltip(section)\\\"\\n                     class=\\\"navigator-section-header__scroll-navigation-anchor\\\"\\n                     name=\\\"default-action-tags\\\"\\n                     size=\\\"16\\\">\\n            </sw-icon>\\n        </div>\\n    {% endblock %}\\n\\n    {% parent %}\\n{% endblock %}\\n\\n{% block sw_cms_sidebar_page_settings_content %}\\n    {% parent %}\\n\\n    {% block sw_cms_sidebar_page_settings_content_scroll_navigation %}\\n        <sw-sidebar-collapse\\n            v-if=\\\"scrollNavigationFeatureActive\\\"\\n            :expandOnLoading=\\\"true\\\">\\n\\n            {% block sw_cms_sidebar_page_settings_content_scroll_navigation_header %}\\n                <template #header>\\n                    <span>\\n                        {{ $tc('swag-cms-extensions.sw-cms.detail.scrollNavigation.pageSettings.title') }}\\n                    </span>\\n                </template>\\n            {% endblock %}\\n\\n            {% block sw_cms_sidebar_page_settings_content_scroll_navigation_header_content %}\\n                <template #content>\\n                    <swag-cms-extensions-page-scroll-behavior-config\\n                        v-model=\\\"page\\\">\\n                    </swag-cms-extensions-page-scroll-behavior-config>\\n                </template>\\n            {% endblock %}\\n        </sw-sidebar-collapse>\\n    {% endblock %}\\n{% endblock %}\\n\";","module.exports = \"{% block swag_cms_extensions_form_editor_settings_field_type_header %}\\n    <div class=\\\"swag-cms-extensions-form-editor-settings-field-type-header\\\">\\n\\n        {% block swag_cms_extensions_form_editor_settings_field_type_header_technical_name %}\\n            <sw-text-field v-model=\\\"technicalName\\\"\\n                           :label=\\\"$tc('swag-cms-extensions.sw-cms.elements.custom-form.editor.tabs.options.internalNameLabel')\\\"\\n                           :error=\\\"fieldTechnicalNameError\\\"\\n                           size=\\\"medium\\\"\\n                           required\\n                           :helpText=\\\"$tc('swag-cms-extensions.sw-cms.components.form-editor.settings-field.internalNameHelpText')\\\"\\n                           @change=\\\"onTechnicalNameChange\\\">\\n            </sw-text-field>\\n        {% endblock %}\\n\\n        {% block swag_cms_extensions_form_editor_settings_field_type_header_title %}\\n            <sw-text-field v-model=\\\"label\\\"\\n                           :label=\\\"$tc('swag-cms-extensions.sw-cms.components.form-editor.settings-field.titleFieldLabel')\\\"\\n                           :error=\\\"fieldLabelError\\\"\\n                           size=\\\"medium\\\"\\n                           required>\\n            </sw-text-field>\\n        {% endblock %}\\n\\n        {% block swag_cms_extensions_form_editor_settings_field_type_header_type %}\\n            <sw-single-select v-model=\\\"type\\\"\\n                              :options=\\\"types\\\"\\n                              :label=\\\"$tc('swag-cms-extensions.sw-cms.components.form-editor.settings-field.typeFieldLabel')\\\"\\n                              :error=\\\"fieldTypeError\\\"\\n                              size=\\\"medium\\\"\\n                              :highlightSearchTerm=\\\"false\\\"\\n                              required>\\n            </sw-single-select>\\n        {% endblock %}\\n\\n        {% block swag_cms_extensions_form_editor_settings_field_type_header_width %}\\n            <sw-single-select v-model=\\\"width\\\"\\n                              :options=\\\"widths\\\"\\n                              :label=\\\"$tc('swag-cms-extensions.sw-cms.components.form-editor.settings-field.widthFieldLabel')\\\"\\n                              :error=\\\"fieldWidthError\\\"\\n                              size=\\\"medium\\\"\\n                              :highlightSearchTerm=\\\"false\\\"\\n                              required>\\n            </sw-single-select>\\n        {% endblock %}\\n\\n    </div>\\n{% endblock %}\\n\";","module.exports = \"{% block swag_cms_extensions_form_element_email %}\\n    <sw-email-field :label=\\\"field.translated ? field.translated.label : field.label\\\"\\n                    :required=\\\"field.required\\\"\\n                    :value=\\\"field.translated ? field.translated.placeholder : field.placeholder\\\">\\n    </sw-email-field>\\n{% endblock %}\\n\";","module.exports = \"{% block swag_cms_extensions_sidebar_page_scroll_behavior_config %}\\n    <div class=\\\"swag-cms-page-config__scroll-navigation-page-settings\\\">\\n\\n        {% block swag_cms_extensions_sidebar_page_scroll_behavior_config_smooth_scrolling %}\\n            {% block swag_cms_extensions_sidebar_page_scroll_behavior_config_smooth_scrolling_description %}\\n                <div class=\\\"info-text\\\">\\n                    {{ $tc('swag-cms-extensions.sw-cms.detail.scrollNavigation.pageSettings.description') }}\\n                </div>\\n            {% endblock %}\\n\\n            {% block swag_cms_extensions_sidebar_page_scroll_behavior_config_smooth_scrolling_active %}\\n                <sw-switch-field\\n                    v-model=\\\"scrollNavigationPageSettings.active\\\"\\n                    class=\\\"scroll-navigation__smooth-scrolling-active\\\"\\n                    :label=\\\"$tc('swag-cms-extensions.sw-cms.detail.scrollNavigation.pageSettings.activeLabel')\\\"\\n                    :helpText=\\\"$tc('swag-cms-extensions.sw-cms.detail.scrollNavigation.pageSettings.activeHelpText')\\\"\\n                    :disabled=\\\"!pageHasNavigationPoints  || !acl.can('cms.editor')\\\"\\n                    @change=\\\"pageSettingsActiveChanged\\\">\\n                </sw-switch-field>\\n            {% endblock %}\\n\\n            {% block swag_cms_extensions_sidebar_page_scroll_behavior_config_smooth_scrolling_easing %}\\n                <sw-single-select\\n                    v-model=\\\"scrollNavigationPageSettings.easing\\\"\\n                    :label=\\\"$tc('swag-cms-extensions.sw-cms.detail.scrollNavigation.pageSettings.easingLabel')\\\"\\n                    :options=\\\"easingTypes\\\"\\n                    :disabled=\\\"!smoothScrollingActive  || !acl.can('cms.editor')\\\"\\n                    @change=\\\"pageSettingsActiveChanged\\\">\\n                </sw-single-select>\\n            {% endblock %}\\n\\n            {% block swag_cms_extensions_sidebar_page_scroll_behavior_config_smooth_scrolling_duration %}\\n                <sw-number-field\\n                    v-model=\\\"scrollNavigationPageSettings.duration\\\"\\n                    class=\\\"scroll-navigation__smooth-scrolling-duration\\\"\\n                    :label=\\\"$tc('swag-cms-extensions.sw-cms.detail.scrollNavigation.pageSettings.durationLabel')\\\"\\n                    :disabled=\\\"!smoothScrollingActive || !acl.can('cms.editor')\\\"\\n                    :digits=\\\"0\\\"\\n                    @change=\\\"pageSettingsActiveChanged\\\">\\n\\n                    {% block swag_cms_extensions_sidebar_page_scroll_behavior_config_smooth_scrolling_duration_suffix %}\\n                        <template #suffix>\\n                            <span class=\\\"scroll-navigation__smooth-scrolling-duration-suffix\\\">\\n                                {{ $tc('swag-cms-extensions.sw-cms.detail.scrollNavigation.pageSettings.durationSuffix') }}\\n                            </span>\\n                        </template>\\n                    {% endblock %}\\n                </sw-number-field>\\n            {% endblock %}\\n\\n            {% block swag_cms_extensions_sidebar_page_scroll_behavior_config_smooth_scrolling_advanced %}\\n                <sw-sidebar-collapse\\n                    class=\\\"scroll-navigation__smooth-scrolling-advanced-settings\\\"\\n                    :expandOnLoading=\\\"false\\\">\\n\\n                    {% block swag_cms_extensions_sidebar_page_scroll_behavior_config_smooth_scrolling_advanced_header %}\\n                        <template #header>\\n                            {{ $tc('swag-cms-extensions.sw-cms.detail.scrollNavigation.pageSettings.advancedSettingsLabel') }}\\n                        </template>\\n                    {% endblock %}\\n\\n                    {% block swag_cms_extensions_sidebar_page_scroll_behavior_config_smooth_scrolling_advanced_content %}\\n                        <template #content>\\n\\n                            {% block swag_cms_extensions_sidebar_page_scroll_behavior_config_smooth_scrolling_bouncy %}\\n                                <sw-switch-field\\n                                    v-model=\\\"scrollNavigationPageSettings.bouncy\\\"\\n                                    class=\\\"scroll-navigation__smooth-scrolling-bouncy\\\"\\n                                    :label=\\\"$tc('swag-cms-extensions.sw-cms.detail.scrollNavigation.pageSettings.bouncyLabel')\\\"\\n                                    :disabled=\\\"!smoothScrollingActive || scrollNavigationPageSettings.easing === 'linear' || !acl.can('cms.editor')\\\"\\n                                    @change=\\\"pageSettingsActiveChanged\\\">\\n                                </sw-switch-field>\\n                            {% endblock %}\\n\\n                            {% block swag_cms_extensions_sidebar_page_scroll_behavior_config_smooth_scrolling_easing_degree %}\\n                                {# ToDo CMS-11 - Re-enable helptext and remove tooltip #}\\n                                <sw-number-field\\n                                    v-model=\\\"scrollNavigationPageSettings.easingDegree\\\"\\n                                    class=\\\"scroll-navigation__smooth-scrolling-easing-degree\\\"\\n                                    :label=\\\"$tc('swag-cms-extensions.sw-cms.detail.scrollNavigation.pageSettings.easingDegreeLabel')\\\"\\n                                    :disabled=\\\"easingDegreeDisabled  || !acl.can('cms.editor')\\\"\\n{#                                    :helpText=\\\"$tc('swag-cms-extensions.sw-cms.detail.scrollNavigation.pageSettings.easingDegreeHelpText')\\\"#}\\n                                    v-tooltip=\\\"{\\n                                        message: $tc('swag-cms-extensions.sw-cms.detail.scrollNavigation.pageSettings.easingDegreeHelpText')\\n                                    }\\\"\\n                                    :digits=\\\"0\\\"\\n                                    :min=\\\"2\\\"\\n                                    :max=\\\"32\\\"\\n                                    @change=\\\"pageSettingsActiveChanged\\\">\\n                                </sw-number-field>\\n                            {% endblock %}\\n                        </template>\\n                    {% endblock %}\\n                </sw-sidebar-collapse>\\n            {% endblock %}\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","module.exports = \"{% block sw_cms_page_form_section_name_wrapper %}\\n    {% parent %}\\n\\n    {% block sw_cms_page_form_block_rules %}\\n        <div v-if=\\\"sectionHasRulesOnAllBlocks(section)\\\"\\n             class=\\\"sw-cms-page-form__section-action sw-cms-page-form__section-anchor\\\">\\n\\n            {% block sw_cms_page_form_block_rules_icon %}\\n                <sw-icon class=\\\"sw-cms-page-form__section-action-icon sw-cms-page-form__block-rules-icon\\\"\\n                         name=\\\"default-badge-info\\\"\\n                         size=\\\"20\\\">\\n                </sw-icon>\\n            {% endblock %}\\n\\n            {% block sw_cms_page_form_block_rules_text %}\\n                <span class=\\\"sw-cms-page-form__section-action-label sw-cms-page-form__block-rules-label\\\">\\n                    {{ $tc('swag-cms-extensions.sw-cms.sidebar.rulesOnAllBlocks') }}\\n                </span>\\n            {% endblock %}\\n\\n        </div>\\n    {% endblock %}\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./swag-cms-extensions-form-editor-settings.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"319a2a42\", content, true, {});","Shopware.Service('privileges')\n    .addPrivilegeMappingEntry({\n        category: 'permissions',\n        parent: 'settings',\n        key: 'rule',\n        roles: {\n            viewer: {\n                privileges: [\n                    'cms_block:read',\n                    'cms_section:read',\n                    'cms_page:read',\n                    'swag_cms_extensions_block_rule:read',\n                ],\n            },\n            editor: {\n                privileges: [\n                    'cms_block:update',\n                    'swag_cms_extensions_block_rule:update',\n                ],\n            },\n        },\n    });\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./swag-cms-extensions-form-editor-empty-state.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"24009a84\", content, true, {});","module.exports = \"{% block sw_cms_slot_content %}\\n    {% parent %}\\n\\n    {% block swag_cms_extensions_form_editor_modal %}\\n        <swag-cms-extensions-form-editor-modal v-if=\\\"showFormCreationModal\\\"\\n                                               @modal-close=\\\"onCloseCreateFormModal\\\">\\n        </swag-cms-extensions-form-editor-modal>\\n    {% endblock %}\\n{% endblock %}\\n\\n{% block sw_cms_slot_content_settings_modal %}\\n    <template v-if=\\\"showElementSettings\\\">\\n        <swag-cms-extensions-form-editor-modal v-if=\\\"slotHasFormExtension\\\"\\n                                               @modal-close=\\\"onCloseEditFormModal\\\">\\n        </swag-cms-extensions-form-editor-modal>\\n\\n        <sw-modal v-else\\n                  class=\\\"sw-cms-slot__config-modal\\\"\\n                  :title=\\\"modalTitle\\\"\\n                  @modal-close=\\\"onSettingsModalClose\\\">\\n\\n            {% block sw_cms_slot_content_settings_modal_component %}\\n                <component v-model=\\\"element\\\"\\n                           :is=\\\"elementConfig.configComponent\\\"\\n                           @form-template-id-change=\\\"onFormTemplateIdChange\\\">\\n                </component>\\n            {% endblock %}\\n\\n            {% block sw_cms_slot_content_settings_modal_footer %}\\n                <template #modal-footer>\\n\\n                    {% block sw_cms_slot_content_settings_modal_action_confirm %}\\n                        {% block swag_cms_extensions_modal_action_cancel %}\\n                            <sw-button v-if=\\\"isElementTypeCustomForm\\\"\\n                                       @click=\\\"onSettingsModalClose\\\">\\n                                {{ $tc('sw-settings-customer-group.general.buttonCancel') }}\\n                            </sw-button>\\n                        {% endblock %}\\n\\n                        {% block swag_cms_extensions_modal_action_confirm %}\\n                            <sw-button variant=\\\"primary\\\"\\n                                       @click=\\\"onPrimaryConfirm\\\">\\n                                {{ primaryActionText }}\\n                            </sw-button>\\n                        {% endblock %}\\n                    {% endblock %}\\n\\n                </template>\\n            {% endblock %}\\n\\n        </sw-modal>\\n    </template>\\n{% endblock %}\\n\";","module.exports = \"{% block swag_cms_extensions_sidebar_section_scroll_behavior_config %}\\n    <div class=\\\"swag-cms-section-config__scroll-navigation\\\">\\n\\n        {% block swag_cms_extensions_sidebar_section_scroll_behavior_config_anchor_switch %}\\n            <sw-switch-field\\n                v-model=\\\"swagCmsExtensionsScrollNavigation.active\\\"\\n                class=\\\"scroll-navigation__anchor-switch\\\"\\n                :label=\\\"$tc('swag-cms-extensions.sw-cms.detail.scrollNavigation.anchorSwitch')\\\"\\n                :disabled=\\\"!acl.can('cms.editor')\\\"\\n                @change=\\\"scrollNavigationActiveChanged\\\">\\n            </sw-switch-field>\\n        {% endblock %}\\n\\n        {% block swag_cms_extensions_sidebar_section_scroll_behavior_config_anchor_title %}\\n            <sw-text-field\\n                v-model=\\\"swagCmsExtensionsScrollNavigation.displayName\\\"\\n                class=\\\"scroll-navigation__anchor-title\\\"\\n                :label=\\\"$tc('swag-cms-extensions.sw-cms.detail.scrollNavigation.anchorTitle')\\\"\\n                :helpText=\\\"$tc('swag-cms-extensions.sw-cms.detail.scrollNavigation.anchorTitleHelpText')\\\"\\n                :error=\\\"swagCmsExtensionsScrollNavigationDisplayNameError\\\"\\n                :disabled=\\\"!acl.can('cms.editor')\\\"\\n                @change=\\\"scrollNavigationActiveChanged\\\">\\n            </sw-text-field>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","module.exports = \"{% block sw_cms_section_action_select %}\\n    {% parent %}\\n\\n    {% block sw_cms_section_action_block_rules_label %}\\n        <div v-if=\\\"hasRulesOnAllBlocks\\\"\\n             class=\\\"sw-cms-section__action sw-cms-section__block-rules-label\\\">\\n            <sw-icon\\n                    v-tooltip=\\\"rulesOnAllBlocksTooltip\\\"\\n                    name=\\\"default-badge-info\\\"\\n                    size=\\\"20\\\">\\n            </sw-icon>\\n        </div>\\n    {% endblock %}\\n{% endblock %}\\n\";","module.exports = \"{% block swag_cms_extensions_block_custom_form_preview %}\\n    <div class=\\\"swag-cms-extensions-block-custom-form-preview\\\">\\n        <h4 class=\\\"swag-cms-extensions-block-custom-form-preview__headline\\\">{{ $tc('swag-cms-extensions.sw-cms.elements.custom-form.label') }}</h4>\\n        <div class=\\\"swag-cms-extensions-block-custom-form-preview__static_inputs\\\">\\n            <div class=\\\"swag-cms-extensions-block-custom-form-preview__input\\\"></div>\\n            <div class=\\\"swag-cms-extensions-block-custom-form-preview__input\\\"></div>\\n        </div>\\n        <div class=\\\"swag-cms-extensions-block-custom-form-preview__flexible_inputs\\\">\\n            <div class=\\\"swag-cms-extensions-block-custom-form-preview__input\\\"></div>\\n            <div class=\\\"swag-cms-extensions-block-custom-form-preview__input\\\"></div>\\n            <div class=\\\"swag-cms-extensions-block-custom-form-preview__input swag-cms-extensions-block-custom-form-preview__input-new\\\">\\n                <sw-icon name=\\\"default-basic-plus-line\\\"></sw-icon>\\n            </div>\\n        </div>\\n        <div class=\\\"swag-cms-extensions-block-custom-form-preview__action\\\">{{ $tc('sw-cms.elements.form.preview.label.send') }}</div>\\n    </div>\\n{% endblock %}\\n\";","module.exports = \"{% block swag_cms_extensions_form_editor_group_field %}\\n    <div class=\\\"swag-cms-extensions-form-editor-group-field\\\">\\n\\n        {% block swag_cms_extensions_form_editor_group_field_card %}\\n            <sw-card v-draggable=\\\"fieldDragData\\\"\\n                     v-droppable=\\\"fieldDropData\\\"\\n                     class=\\\"swag-cms-extensions-form-editor-group-field__card\\\"\\n                     :class=\\\"{ 'is--dragging': field.isDragging, 'has--error': fieldHasError }\\\">\\n\\n                {% block swag_cms_extensions_form_editor_group_field_card_content %}\\n                    <div class=\\\"swag-cms-extensions-form-editor-group-field__content\\\">\\n\\n                        {% block swag_cms_extensions_form_editor_group_field_card_content_drag_icon %}\\n                            <div class=\\\"swag-cms-extensions-form-editor-group-field__drag-icon\\\">\\n                                <sw-icon name=\\\"small-default-x-drag-horizontal\\\" small></sw-icon>\\n                            </div>\\n                        {% endblock %}\\n\\n                        {% block swag_cms_extensions_form_editor_group_field_card_content_title %}\\n                            <div class=\\\"swag-cms-extensions-form-editor-group-field__title\\\"\\n                                 @click=\\\"onTitleClick\\\">\\n                                <p class=\\\"swag-cms-extensions-form-editor-group-field__title-text\\\"\\n                                   :class=\\\"{ active: isActive }\\\">\\n                                    <template v-if=\\\"field.label\\\">\\n                                        <span>{{ field.technicalName }}</span> <span>(</span><span>{{ field.label }}</span><span>)</span>\\n                                    </template>\\n\\n                                    <template v-else>\\n                                        <span>{{ field.technicalName }}</span>\\n                                    </template>\\n                                </p>\\n                            </div>\\n                        {% endblock %}\\n\\n                        {% block swag_cms_extensions_form_editor_group_field_card_content_context_button_wrapper %}\\n                            <div class=\\\"swag-cms-extensions-form-editor-group-field__context-button\\\">\\n\\n                                {% block swag_cms_extensions_form_editor_group_field_card_content_context_button %}\\n                                    <sw-context-button>\\n\\n                                        {% block swag_cms_extensions_form_editor_group_field_card_content_context_button_items %}\\n                                            <div\\n                                                class=\\\"swag-cms-extensions-form-editor-group-field__context-button-container\\\">\\n\\n                                                {% block swag_cms_extensions_form_editor_group_field_card_content_context_button_items_move_up %}\\n                                                    <sw-context-menu-item @click=\\\"onMoveUp\\\">\\n\\n                                                        {% block swag_cms_extensions_form_editor_group_field_card_content_context_button_items_move_up_text %}\\n                                                            {{ $tc('swag-cms-extensions.sw-cms.components.form-editor.group.actions.moveUp') }}\\n                                                        {% endblock %}\\n\\n                                                    </sw-context-menu-item>\\n                                                {% endblock %}\\n\\n                                                {% block swag_cms_extensions_form_editor_group_field_card_content_context_button_items_move_down %}\\n                                                    <sw-context-menu-item @click=\\\"onMoveDown\\\">\\n\\n                                                        {% block swag_cms_extensions_form_editor_group_field_card_content_context_button_items_move_down_text %}\\n                                                            {{ $tc('swag-cms-extensions.sw-cms.components.form-editor.group.actions.moveDown') }}\\n                                                        {% endblock %}\\n\\n                                                    </sw-context-menu-item>\\n                                                {% endblock %}\\n\\n                                                {% block swag_cms_extensions_form_editor_group_field_card_content_context_button_items_move_to_group %}\\n                                                    <sw-context-menu-item :disabled=\\\"groupCount <= 1\\\"\\n                                                                          @click=\\\"onMoveToGroupModalOpen\\\">\\n\\n                                                        {% block swag_cms_extensions_form_editor_group_field_card_content_context_button_items_move_to_group_text %}\\n                                                            {{ $tc('swag-cms-extensions.sw-cms.components.form-editor.group.actions.moveToGroup') }}\\n                                                        {% endblock %}\\n\\n                                                    </sw-context-menu-item>\\n                                                {% endblock %}\\n\\n                                                {% block swag_cms_extensions_form_editor_group_field_card_content_context_button_items_divider %}\\n                                                    <sw-context-menu-divider>\\n                                                    </sw-context-menu-divider>\\n                                                {% endblock %}\\n\\n                                                {% block swag_cms_extensions_form_editor_group_field_card_content_context_button_items_edit %}\\n                                                    <sw-context-menu-item @click=\\\"onEdit\\\">\\n\\n                                                        {% block swag_cms_extensions_form_editor_group_field_card_content_context_button_items_edit_text %}\\n                                                            {{ $tc('global.default.edit') }}\\n                                                        {% endblock %}\\n\\n                                                    </sw-context-menu-item>\\n                                                {% endblock %}\\n\\n                                                {% block swag_cms_extensions_form_editor_group_field_card_content_context_button_items_duplicate %}\\n                                                    <sw-context-menu-item :disabled=\\\"!isSystemDefaultLanguage\\\"\\n                                                                          @click=\\\"onDuplicate\\\">\\n\\n                                                        {% block swag_cms_extensions_form_editor_group_field_card_content_context_button_items_duplicate_text %}\\n                                                            {{ $tc('swag-cms-extensions.sw-cms.components.form-editor.group.actions.duplicate') }}\\n                                                        {% endblock %}\\n\\n                                                    </sw-context-menu-item>\\n                                                {% endblock %}\\n\\n                                                {% block swag_cms_extensions_form_editor_group_field_card_content_context_button_items_delete %}\\n                                                    <sw-context-menu-item variant=\\\"danger\\\"\\n                                                                          :disabled=\\\"!isSystemDefaultLanguage\\\"\\n                                                                          @click=\\\"onDelete\\\">\\n\\n                                                        {% block swag_cms_extensions_form_editor_group_field_card_content_context_button_items_delete_text %}\\n                                                            {{ $tc('global.default.delete') }}\\n                                                        {% endblock %}\\n\\n                                                    </sw-context-menu-item>\\n                                                {% endblock %}\\n\\n                                            </div>\\n                                        {% endblock %}\\n\\n                                    </sw-context-button>\\n                                {% endblock %}\\n\\n                            </div>\\n                        {% endblock %}\\n\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_cms_extensions_form_editor_group_field_move_to_group_modal %}\\n                    <sw-modal v-if=\\\"showMoveFieldToGroupModal\\\"\\n                              variant=\\\"small\\\"\\n                              :title=\\\"$tc('swag-cms-extensions.sw-cms.components.form-editor.moveToGroupModal.title')\\\"\\n                              @modal-close=\\\"onMoveToGroupModalClose\\\">\\n\\n                        {% block swag_cms_extensions_form_editor_group_field_move_to_group_modal_content %}\\n                            <sw-single-select v-model=\\\"moveToGroupId\\\"\\n                                              :options=\\\"moveToGroups\\\"\\n                                              :label=\\\"$tc('swag-cms-extensions.sw-cms.components.form-editor.moveToGroupModal.groupSelectLabel')\\\"\\n                                              valueProperty=\\\"id\\\"\\n                                              labelProperty=\\\"technicalName\\\">\\n                            </sw-single-select>\\n                        {% endblock %}\\n\\n                        {% block swag_cms_extensions_form_editor_group_field_move_to_group_modal_footer %}\\n                            <template #modal-footer>\\n                                <sw-button size=\\\"small\\\"\\n                                           @click=\\\"onMoveToGroupModalClose\\\">\\n                                    {{ $tc('global.default.cancel') }}\\n                                </sw-button>\\n\\n                                <sw-button variant=\\\"primary\\\"\\n                                           size=\\\"small\\\"\\n                                           @click=\\\"moveFieldToGroup\\\">\\n                                    {{ $tc('swag-cms-extensions.sw-cms.components.form-editor.moveToGroupModal.primaryButtonText') }}\\n                                </sw-button>\\n                            </template>\\n                        {% endblock %}\\n\\n                    </sw-modal>\\n                {% endblock %}\\n\\n            </sw-card>\\n        {% endblock %}\\n\\n    </div>\\n{% endblock %}\\n\";","module.exports = \"{% block swag_cms_extensions_form_editor_empty_state %}\\n    <div class=\\\"swag-cms-extensions-form-editor-empty-state\\\">\\n        <sw-container class=\\\"swag-cms-extensions-form-editor-empty-state__container\\\"\\n                      columns=\\\"1fr\\\">\\n\\n            {% block swag_cms_extensions_form_editor_empty_state_container %}\\n                <div class=\\\"swag-cms-extensions-form-editor-empty-state__splash-screen\\\">\\n\\n                    {% block swag_cms_extensions_form_editor_empty_state_container_content %}\\n                        <img class=\\\"swag-cms-extensions-form-editor-empty-state__icon\\\"\\n                             :src=\\\"'/swagcmsextensions/static/img/shopping-experiences-empty-state.svg' | asset\\\">\\n\\n                        {% block swag_cms_extensions_form_editor_empty_state_container_content_text %}\\n                            <p class=\\\"swag-cms-extensions-form-editor-empty-state__text\\\">\\n\\n                                {% block swag_cms_extensions_form_editor_empty_state_container_content_text %}\\n                                    {{ $tc('swag-cms-extensions.sw-cms.components.form-editor.emptyState.text') }}\\n                                {% endblock %}\\n\\n                            </p>\\n                        {% endblock %}\\n\\n                        {% block swag_cms_extensions_form_editor_empty_state_container_content_button %}\\n                            <sw-button variant=\\\"ghost\\\"\\n                                       size=\\\"small\\\"\\n                                       @click=\\\"onStartEditor\\\">\\n\\n                                {% block swag_cms_extensions_form_editor_empty_state_container_content_button_text %}\\n                                    {{ $tc('swag-cms-extensions.sw-cms.components.form-editor.emptyState.buttonText') }}\\n                                {% endblock %}\\n\\n                            </sw-button>\\n                        {% endblock %}\\n                    {% endblock %}\\n\\n                </div>\\n            {% endblock %}\\n\\n        </sw-container>\\n    </div>\\n{% endblock %}\\n\";","module.exports = \"{% block swag_cms_extensions_form_template_modal %}\\n    <div class=\\\"swag-cms-extensions-form-template-modal\\\">\\n\\n        {% block swag_cms_extensions_form_template_modal_modal %}\\n            <sw-modal\\n                v-if=\\\"displayModal\\\"\\n                class=\\\"swag-cms-extensions-form-template-modal__modal\\\"\\n                :title=\\\"$tc('swag-cms-extensions.sw-cms.elements.custom-form.config.editFormTemplateLink')\\\"\\n                variant=\\\"large\\\"\\n                @modal-close=\\\"onModalClose\\\">\\n\\n                {% block swag_cms_extensions_form_template_modal_modal_content %}\\n                    <div class=\\\"swag-cms-extensions-form-template-modal__content\\\">\\n\\n                        {% block swag_cms_extensions_form_template_modal_modal_content_search %}\\n                            {% block swag_cms_extensions_form_template_modal_modal_content_search_label %}\\n                                <sw-label class=\\\"swag-cms-extensions-form-template-modal__search-field-label\\\">\\n\\n                                    {% block swag_cms_extensions_form_template_modal_modal_content_search_field %}\\n                                        <sw-simple-search-field\\n                                            v-model=\\\"searchTerm\\\"\\n                                            class=\\\"swag-cms-extensions-form-template-modal__search-field\\\"\\n                                            size=\\\"small\\\"\\n                                            variant=\\\"form\\\"\\n                                            :delay=\\\"750\\\">\\n                                        </sw-simple-search-field>\\n                                    {% endblock %}\\n                                </sw-label>\\n                            {% endblock %}\\n                        {% endblock %}\\n\\n                        {% block swag_cms_extensions_form_template_modal_modal_content_listing %}\\n                            <sw-entity-listing\\n                                v-if=\\\"total\\\"\\n                                ref=\\\"templateEntityListing\\\"\\n                                class=\\\"swag-cms-extensions-form-template-modal__entity-listing\\\"\\n                                :items=\\\"formTemplates\\\"\\n                                :skeletonItemAmount=\\\"5\\\"\\n                                :steps=\\\"[5, 10]\\\"\\n                                :columns=\\\"columns\\\"\\n                                :repository=\\\"formTemplateRepository\\\"\\n                                :sortBy=\\\"sortBy\\\"\\n                                :sortDirection=\\\"sortDirection\\\"\\n                                :isLoading=\\\"isLoading\\\"\\n                                :showSelection=\\\"false\\\"\\n                                :showSettings=\\\"false\\\"\\n                                :allowColumnEdit=\\\"false\\\"\\n                                :compactMode=\\\"false\\\"\\n                                :showActions=\\\"true\\\"\\n                                :plainAppearance=\\\"true\\\"\\n                                :allowInlineEdit=\\\"true\\\"\\n                                :fullPage=\\\"true\\\"\\n                                @inline-edit-save=\\\"onInlineEditSave\\\"\\n                                @column-sort=\\\"onSortColumn\\\"\\n                                @page-change=\\\"onPageChange\\\"\\n                                @delete-item-finish=\\\"getList\\\">\\n\\n                                {% block swag_cms_extensions_form_template_modal_modal_content_listing_more_actions %}\\n                                    <template #more-actions=\\\"{ item }\\\">\\n\\n                                        {% block swag_cms_extensions_form_template_modal_modal_content_listing_more_actions_rename %}\\n                                            <sw-context-menu-item @click=\\\"onRename(item)\\\">\\n                                                {{ $tc('swag-cms-extensions.sw-cms.elements.custom-form.templateListing.renameContextAction') }}\\n                                            </sw-context-menu-item>\\n                                        {% endblock %}\\n\\n                                    </template>\\n                                {% endblock %}\\n\\n                            </sw-entity-listing>\\n                        {% endblock %}\\n\\n                        {% block swag_cms_extensions_form_template_modal_modal_content_empty_state %}\\n                            <div v-else-if=\\\"!isLoading\\\"\\n                                 class=\\\"swag-cms-extensions-form-template-modal__empty-state\\\">\\n                                <img class=\\\"swag-cms-extensions-form-editor-empty-state__icon\\\"\\n                                     :src=\\\"'/swagcmsextensions/static/img/shopping-experiences-empty-state.svg' | asset\\\"\\n                                >\\n\\n                                <p>{{ $tc('swag-cms-extensions.sw-cms.elements.custom-form.templateListing.emptyState') }}</p>\\n                            </div>\\n                        {% endblock %}\\n\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_cms_extensions_form_template_modal_modal_footer %}\\n                    <template #modal-footer>\\n\\n                        {% block swag_cms_extensions_form_template_modal_modal_footer_close_button %}\\n                            <sw-button size=\\\"small\\\"\\n                                       @click=\\\"onModalClose\\\">\\n                                {{ $tc('global.sw-modal.labelClose') }}\\n                            </sw-button>\\n                        {% endblock %}\\n\\n                    </template>\\n                {% endblock %}\\n\\n            </sw-modal>\\n        {% endblock %}\\n\\n    </div>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./swag-cms-extensions-form-editor-group.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"0e1d2174\", content, true, {});","module.exports = \"{% block swag_cms_extensions_block_config_quickview %}\\n    <div class=\\\"swag-cms-extensions-block-config-quickview\\\">\\n        <sw-sidebar-collapse :expandOnLoading=\\\"false\\\">\\n\\n            {% block swag_cms_extensions_block_config_quickview_header %}\\n                <template #header>\\n                    <div class=\\\"swag-cms-extensions-block-config-quickview__header\\\">\\n                        {{ $tc('swag-cms-extensions.sw-cms.detail.quickview.sidebarHeaderBlockBehaviorSettings') }}\\n                    </div>\\n                </template>\\n            {% endblock %}\\n\\n            {% block swag_cms_extensions_block_config_quickview_content %}\\n                <template #content>\\n                    <div class=\\\"sw-cms-block-config swag-cms-extensions-block-config-quickview__content\\\">\\n\\n                        {% block swag_cms_extensions_block_config_quickview_content_active %}\\n                            <sw-switch-field\\n                                    v-model=\\\"quickview.active\\\"\\n                                    class=\\\"swag-cms-extensions-block-config-quickview__active-switch\\\"\\n                                    :label=\\\"$tc('swag-cms-extensions.sw-cms.detail.quickview.showQuickviewLabel')\\\"\\n                                    :helpText=\\\"$tc('swag-cms-extensions.sw-cms.detail.quickview.showQuickviewHelpText')\\\"\\n                                    :disabled=\\\"!blockIsProductRelated || !acl.can('cms.editor')\\\"\\n                                    @change=\\\"quickviewActiveChanged\\\">\\n                            </sw-switch-field>\\n                        {% endblock %}\\n\\n                    </div>\\n                </template>\\n            {% endblock %}\\n\\n        </sw-sidebar-collapse>\\n    </div>\\n{% endblock %}\\n\";","module.exports = \"{% block swag_cms_extensions_form_editor_settings_field_type_footer %}\\n    <div class=\\\"swag-cms-extensions-form-editor-settings-field-type-footer\\\">\\n\\n        {% block swag_cms_extensions_form_editor_settings_field_type_footer_required %}\\n            <sw-switch-field v-model=\\\"required\\\"\\n                             :label=\\\"$tc('swag-cms-extensions.sw-cms.components.form-editor.settings-field.requiredFieldLabel')\\\"\\n                             size=\\\"medium\\\">\\n            </sw-switch-field>\\n        {% endblock %}\\n\\n        {% block swag_cms_extensions_form_editor_settings_field_type_footer_error_message %}\\n            <sw-text-field v-if=\\\"required\\\"\\n                           v-model=\\\"errorMessage\\\"\\n                           :label=\\\"$tc('swag-cms-extensions.sw-cms.components.form-editor.settings-field.errorMessageFieldLabel')\\\"\\n                           size=\\\"medium\\\">\\n            </sw-text-field>\\n        {% endblock %}\\n\\n    </div>\\n{% endblock %}\\n\";","module.exports = \"{% block sw_cms_section_config__quickactions %}\\n    {% block swag_cms_extensions_section_config_block_rule_warning %}\\n        <sw-alert\\n                v-if=\\\"hasRulesOnAllBlocks\\\"\\n                variant=\\\"info\\\">\\n            {{ $tc('swag-cms-extensions.sw-cms.sidebar.rulesOnAllBlocks') }}\\n        </sw-alert>\\n    {% endblock %}\\n\\n    {% parent %}\\n{% endblock %}\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./swag-cms-extensions-form-template-modal.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"2f420c8b\", content, true, {});","module.exports = \"{% block swag_cms_extensions_form_element_number %}\\n    <sw-number-field :label=\\\"field.translated ? field.translated.label : field.label\\\"\\n                     :required=\\\"field.required\\\"\\n                     :value=\\\"value\\\">\\n    </sw-number-field>\\n{% endblock %}\\n\";","module.exports = \"{% block swag_cms_extensions_form_editor_settings %}\\n    <div class=\\\"swag-cms-extensions-form-editor-settings\\\">\\n\\n        {% block swag_cms_extensions_form_editor_settings_content %}\\n            <div class=\\\"swag-cms-extensions-form-editor-settings__content\\\">\\n\\n                {% block swag_cms_extensions_form_editor_settings_content_group_settings %}\\n                    <swag-cms-extensions-form-editor-settings-group v-if=\\\"showGroupSettings\\\">\\n                    </swag-cms-extensions-form-editor-settings-group>\\n                {% endblock %}\\n\\n                {% block swag_cms_extensions_form_editor_settings_content_field_settings %}\\n                    <swag-cms-extensions-form-editor-settings-group-field v-else>>\\n                    </swag-cms-extensions-form-editor-settings-group-field>\\n                {% endblock %}\\n\\n            </div>\\n        {% endblock %}\\n\\n    </div>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./swag-cms-extensions-section-scroll-behavior-config.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"561d0a22\", content, true, {});","const { Component, Context } = Shopware;\nconst { Criteria } = Shopware.Data;\n\nComponent.override('sw-settings-rule-detail-assignments', {\n    computed: {\n        associationEntitiesConfig() {\n            const associationEntitiesConfig = this.$super('associationEntitiesConfig');\n\n            if (!this.getRuleAssignmentConfiguration) {\n                return associationEntitiesConfig;\n            }\n\n            associationEntitiesConfig.push(this.swagCmsExtensionsRuleEntityConfig);\n            return associationEntitiesConfig;\n        },\n\n        swagCmsExtensionsRuleEntityConfig() {\n            return {\n                id: 'swagCmsExtensionsBlockRule',\n                notAssignedDataTotal: 0,\n                allowAdd: false,\n                entityName: 'cms_block',\n                label: 'swag-cms-extensions.sw-settings-rule.detail.associations.blockVisibility',\n                criteria: () => {\n                    const criteria = new Criteria();\n                    criteria.setLimit(this.associationLimit);\n                    criteria.addFilter(Criteria.equals('swagCmsExtensionsBlockRule.visibilityRuleId', this.rule.id));\n                    criteria.addAssociation('section.page');\n                    criteria.addAssociation('swagCmsExtensionsBlockRule');\n\n                    return criteria;\n                },\n                api: () => {\n                    return Object.assign({}, Context.api);\n                },\n                detailRoute: 'sw.cms.detail',\n                gridColumns: [\n                    {\n                        property: 'section.page.name',\n                        label: 'Page name',\n                        rawData: true,\n                        sortable: true,\n                        allowEdit: false,\n                        routerLink: 'sw.cms.detail',\n                    },\n                    {\n                        property: 'name',\n                        label: 'Block name',\n                        rawData: true,\n                        sortable: true,\n                        allowEdit: false,\n                    },\n                ],\n                deleteContext: {\n                    type: 'one-to-many',\n                    entity: 'cms_block',\n                    column: 'extensions.swagCmsExtensionsBlockRule.visibilityRuleId',\n                },\n            };\n        },\n    },\n\n    methods: {\n        getRouterLink(entity, item) {\n            if (entity.id !== 'swagCmsExtensionsBlockRule') {\n                return this.$super('getRouterLink', entity, item);\n            }\n\n            return { name: entity.detailRoute, params: { id: item.section.page.id } };\n        },\n    },\n});\n","module.exports = \"{% block swag_cms_extensions_form_element_config %}\\n    <div class=\\\"swag-cms-extensions-form-element-config\\\">\\n\\n        {% block swag_cms_extensions_form_element_config_form_select %}\\n            <sw-entity-single-select\\n                v-model=\\\"templateId\\\"\\n                entity=\\\"swag_cms_extensions_form\\\"\\n                labelProperty=\\\"technicalName\\\"\\n                :placeholder=\\\"$tc('swag-cms-extensions.sw-cms.elements.custom-form.config.templateSelectPlaceholder')\\\"\\n                :label=\\\"$tc('swag-cms-extensions.sw-cms.elements.custom-form.config.templateSelectLabel')\\\"\\n                :criteria=\\\"formTemplateCriteria\\\">\\n            </sw-entity-single-select>\\n        {% endblock %}\\n\\n        {% block swag_cms_extensions_form_element_config_edit_form_link %}\\n            <a class=\\\"swag-cms-extensions-form-element-config__link\\\"\\n               @click=\\\"openFormTemplateModal\\\">\\n                {{ $tc('swag-cms-extensions.sw-cms.elements.custom-form.config.editFormTemplateLink') }}\\n\\n                {% block swag_cms_extensions_form_element_config_edit_form_link_icon %}\\n                    <sw-icon name=\\\"default-arrow-simple-right\\\"\\n                             :small=\\\"true\\\">\\n                    </sw-icon>\\n                {% endblock %}\\n\\n            </a>\\n        {% endblock %}\\n\\n        {% block swag_cms_extensions_form_element_config_edit_form_template_modal %}\\n            <swag-cms-extensions-form-template-modal v-if=\\\"showFormTemplateModal\\\"\\n                                                     @modal-close=\\\"closeFormTemplateModal\\\"\\n                                                     @template-updated=\\\"onTemplateUpdated\\\">\\n            </swag-cms-extensions-form-template-modal>\\n        {% endblock %}\\n\\n    </div>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./swag-cms-extensions-block-config-quickview.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"7a9d06e4\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./swag-cms-extensions-custom-form-element.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../../../../platform/src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"fa046c32\", content, true, {});"],"sourceRoot":""}